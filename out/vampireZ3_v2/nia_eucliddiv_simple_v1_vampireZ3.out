% Warning: check-sat is not the last entry. Skipping the rest!
% lrs+10_1_iik=one:ind=int:sos=theory:sstl=1_87 on nia_eucliddiv_simple_v1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 1154821
% Time elapsed: 11.500 s
% ------------------------------
% ------------------------------
% dis+1002_1_aac=none:anc=all:ind=int:sos=theory:sac=on:sstl=1:to=lpo_30 on nia_eucliddiv_simple_v1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 180125
% Time elapsed: 4.100 s
% ------------------------------
% ------------------------------
% lrs+10_1_iik=one:ind=int:sos=theory:sstl=1:to=lpo_87 on nia_eucliddiv_simple_v1
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for nia_eucliddiv_simple_v1
% SZS output start Proof for nia_eucliddiv_simple_v1
1. ? [X0 : $int,X2 : $int,X1 : $int] : (0 = $difference(X0,y00) & 0 = $difference($sum($difference($product(X1,y00),$product(y00,q00)),X2),r00) & 0 = $difference(X0,y00) & ~0 = $difference($sum($difference($product($sum(X1,1),y00),$product(y00,q00)),$difference(X2,X0)),r00)) [input]
2. ? [X0 : $int,X2 : $int,X1 : $int] : (0 = $sum(X0,$uminus(y00)) & 0 = $sum($sum($difference($product(X1,y00),$product(y00,q00)),X2),$uminus(r00)) & 0 = $sum(X0,$uminus(y00)) & ~0 = $sum($sum($difference($product($sum(X1,1),y00),$product(y00,q00)),$difference(X2,X0)),$uminus(r00))) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 141]
4. $sum(X0,$sum(X1,X2)) = $sum($sum(X0,X1),X2) [theory axiom 142]
5. $sum(X0,0) = X0 [theory axiom 143]
7. 0 = $sum(X0,$uminus(X0)) [theory axiom 146]
13. $uminus($uminus(X0)) = X0 [theory axiom 154]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 141]
16. $product(X0,1) = X0 [theory axiom 143]
18. $product(X0,$sum(X1,X2)) = $sum($product(X0,X1),$product(X0,X2)) [theory axiom 156]
21. ? [X0 : $int,X2 : $int,X1 : $int] : (0 = $sum(X0,$uminus(y00)) & 0 = $sum($sum($sum($product(X1,y00),$uminus($product(y00,q00))),X2),$uminus(r00)) & 0 = $sum(X0,$uminus(y00)) & ~0 = $sum($sum($sum($product($sum(X1,1),y00),$uminus($product(y00,q00))),$sum(X2,$uminus(X0))),$uminus(r00))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int,X2 : $int] : (0 = $sum(X0,$uminus(y00)) & 0 = $sum($sum($sum($product(X2,y00),$uminus($product(y00,q00))),X1),$uminus(r00)) & 0 = $sum(X0,$uminus(y00)) & ~0 = $sum($sum($sum($product($sum(X2,1),y00),$uminus($product(y00,q00))),$sum(X1,$uminus(X0))),$uminus(r00))) [rectify 21]
23. ? [X0 : $int,X1 : $int,X2 : $int] : (0 = $sum(X0,$uminus(y00)) & 0 = $sum($sum($sum($product(X2,y00),$uminus($product(y00,q00))),X1),$uminus(r00)) & 0 = $sum(X0,$uminus(y00)) & 0 != $sum($sum($sum($product($sum(X2,1),y00),$uminus($product(y00,q00))),$sum(X1,$uminus(X0))),$uminus(r00))) [flattening 22]
24. ? [X0 : $int,X1 : $int,X2 : $int] : (0 = $sum(X0,$uminus(y00)) & 0 = $sum($sum($sum($product(X2,y00),$uminus($product(y00,q00))),X1),$uminus(r00)) & 0 = $sum(X0,$uminus(y00)) & 0 != $sum($sum($sum($product($sum(X2,1),y00),$uminus($product(y00,q00))),$sum(X1,$uminus(X0))),$uminus(r00))) => (0 = $sum(sK0,$uminus(y00)) & 0 = $sum($sum($sum($product(sK2,y00),$uminus($product(y00,q00))),sK1),$uminus(r00)) & 0 = $sum(sK0,$uminus(y00)) & 0 != $sum($sum($sum($product($sum(sK2,1),y00),$uminus($product(y00,q00))),$sum(sK1,$uminus(sK0))),$uminus(r00))) [choice axiom]
25. 0 = $sum(sK0,$uminus(y00)) & 0 = $sum($sum($sum($product(sK2,y00),$uminus($product(y00,q00))),sK1),$uminus(r00)) & 0 = $sum(sK0,$uminus(y00)) & 0 != $sum($sum($sum($product($sum(sK2,1),y00),$uminus($product(y00,q00))),$sum(sK1,$uminus(sK0))),$uminus(r00)) [skolemisation 23,24]
26. 0 != $sum($sum($sum($product($sum(sK2,1),y00),$uminus($product(y00,q00))),$sum(sK1,$uminus(sK0))),$uminus(r00)) [cnf transformation 25]
28. 0 = $sum($sum($sum($product(sK2,y00),$uminus($product(y00,q00))),sK1),$uminus(r00)) [cnf transformation 25]
29. 0 = $sum(sK0,$uminus(y00)) [cnf transformation 25]
31. 0 = $sum($sum(sK1,$sum($product(sK2,y00),$uminus($product(y00,q00)))),$uminus(r00)) [forward demodulation 28,3]
32. 0 = $sum($sum(sK1,$sum($product(y00,sK2),$uminus($product(y00,q00)))),$uminus(r00)) [forward demodulation 31,14]
33. 0 != $sum($sum($product($sum(sK2,1),y00),$sum($uminus($product(y00,q00)),$sum(sK1,$uminus(sK0)))),$uminus(r00)) [forward demodulation 26,4]
34. 0 != $sum($sum($product(y00,$sum(sK2,1)),$sum($uminus($product(y00,q00)),$sum(sK1,$uminus(sK0)))),$uminus(r00)) [forward demodulation 33,14]
35. 0 != $sum($sum($product(y00,$sum(1,sK2)),$sum($uminus($product(y00,q00)),$sum(sK1,$uminus(sK0)))),$uminus(r00)) [forward demodulation 34,3]
36. 0 = $sum($uminus(X0),X0) [superposition 7,13]
37. $sum(0,X0) = X0 [superposition 3,5]
163. $sum(sK0,$sum($uminus(y00),X19)) = $sum(0,X19) [superposition 4,29]
166. $sum(X7,$sum(X8,X9)) = $sum(X9,$sum(X7,X8)) [superposition 4,3]
181. $sum(sK0,$sum($uminus(y00),X19)) = X19 [forward demodulation 163,37]
187. y00 = $sum(sK0,0) [superposition 181,36]
190. $sum(sK0,$sum(X0,$uminus(y00))) = X0 [superposition 181,3]
220. y00 = sK0 [superposition 187,5]
232. 0 != $sum($sum($product(y00,$sum(1,sK2)),$sum($uminus($product(y00,q00)),$sum(sK1,$uminus(y00)))),$uminus(r00)) [backward demodulation 35,220]
241. $sum(y00,$sum(X0,$uminus(y00))) = X0 [backward demodulation 190,220]
245. 0 != $sum($sum($sum(sK1,$uminus(y00)),$sum($product(y00,$sum(1,sK2)),$uminus($product(y00,q00)))),$uminus(r00)) [forward demodulation 232,166]
246. 0 != $sum($sum(sK1,$sum($uminus(y00),$sum($product(y00,$sum(1,sK2)),$uminus($product(y00,q00))))),$uminus(r00)) [forward demodulation 245,4]
273. $sum($product(X0,X1),$sum($product(X0,X2),X3)) = $sum($product(X0,$sum(X1,X2)),X3) [superposition 4,18]
285. 0 != $sum($sum(sK1,$sum($uminus(y00),$sum($product(y00,1),$sum($product(y00,sK2),$uminus($product(y00,q00)))))),$uminus(r00)) [backward demodulation 246,273]
286. 0 != $sum($sum(sK1,$sum($uminus(y00),$sum(y00,$sum($product(y00,sK2),$uminus($product(y00,q00)))))),$uminus(r00)) [forward demodulation 285,16]
340. $sum($sum(X1,$uminus(y00)),y00) = X1 [superposition 241,3]
357. $sum($sum($uminus(y00),X0),y00) = X0 [superposition 340,3]
393. $sum($uminus(y00),$sum(X1,y00)) = X1 [superposition 357,4]
419. $sum($uminus(y00),$sum(y00,X0)) = X0 [superposition 393,3]
437. 0 != $sum($sum(sK1,$sum($product(y00,sK2),$uminus($product(y00,q00)))),$uminus(r00)) [backward demodulation 286,419]
439. $false [subsumption resolution 437,32]
% SZS output end Proof for nia_eucliddiv_simple_v1
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Refutation

% Memory used [KB]: 5756
% Time elapsed: 0.030 s
% ------------------------------
% ------------------------------
% Success in time 15.622 s
