unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x492 (+ m!1 (* (- 6) n!0))))
 (let (($x143 (<= ?x492 6)))
 (let (($x475 (= ?x492 6)))
 (let ((?x992 (* k!2 n!0)))
 (let ((?x201 (* 2 n!0)))
 (let ((?x590 (* (- 3) k!2)))
 (let ((?x610 (* (- 3) c!3)))
 (let ((?x411 (* m!1 n!0)))
 (let ((?x984 (* k!2 k!2)))
 (let ((?x327 (* 50 ?x984)))
 (let ((?x417 (* 4 k!2)))
 (let ((?x415 (* 4 c!3)))
 (let ((?x664 (* 7 (* m!1 m!1 m!1 n!0))))
 (let ((?x247 (* 42 (* m!1 m!1 n!0))))
 (let ((?x534 (* 108 (* c!3 k!2 k!2 n!0))))
 (let ((?x422 (* 54 (* c!3 c!3 k!2))))
 (let ((?x160 (* 54 (* c!3 c!3 k!2 n!0))))
 (let ((?x336 (* 16 (* c!3 k!2))))
 (let ((?x473 (* 54 (* k!2 k!2 k!2 n!0))))
 (let ((?x318 (* 108 (* c!3 k!2 k!2))))
 (let ((?x386 (* 7 (* m!1 m!1 m!1))))
 (let ((?x406 (* 8 (* c!3 c!3))))
 (let ((?x431 (* 42 (* k!2 k!2 n!0))))
 (let ((?x232 (* 54 (* k!2 k!2 k!2))))
 (let ((?x137 (* m!1 m!1)))
 (let ((?x207 (* 42 ?x137)))
 (let ((?x439 (+ (* 84 (* m!1 k!2 n!0)) (* 9 (* m!1 m!1 k!2 k!2 n!0)) ?x207 (* 18 (* m!1 c!3 k!2 k!2)) ?x232 (* 9 (* m!1 m!1 c!3 c!3 n!0)) (* 9 (* m!1 k!2 k!2 k!2 n!0)) (* 54 (* m!1 c!3 c!3 n!0)) (* 61 (* m!1 k!2 k!2)) ?x431 ?x406 ?x386 (* 54 (* m!1 c!3 c!3)) (* 84 (* m!1 k!2)) (* 9 (* m!1 k!2 k!2 k!2)) (* 108 (* m!1 c!3 k!2 n!0)) ?x318 (* 9 (* m!1 c!3 c!3 k!2 n!0)) (* 18 (* m!1 c!3 k!2 k!2 n!0)) ?x473 (* 9 (* m!1 m!1 c!3 c!3)) ?x336 ?x160 (* 9 (* m!1 m!1 k!2 k!2)) (* 18 (* m!1 m!1 c!3 k!2)) ?x422 ?x534 (* 14 (* m!1 m!1 k!2)) ?x247 ?x664 (* 18 (* m!1 m!1 c!3 k!2 n!0)) (* 61 (* m!1 k!2 k!2 n!0)) (* 9 (* m!1 c!3 c!3 k!2)) (* 108 (* m!1 c!3 k!2)) ?x415 ?x417 ?x327 (* 14 (* m!1 m!1 k!2 n!0)))))
 (let (($x594 (not (= (+ m!1 k!2 (* (- 9) n!0) (* (- 3) (* n!0 n!0))) 6))))
 (let ((?x285 (+ ?x137 (* (- 5) m!1) (* 2 (* m!1 k!2)) (* (- 27) c!3) (* (- 32) k!2) (* 9 n!0) (* (- 9) (* c!3 n!0)) ?x984 (* (- 9) ?x992))))
 (let (($x195 (not $x475)))
 (let (($x349 (or $x195 (not (= (+ ?x411 ?x610 ?x590 ?x201 ?x992) (- 2))) (not (= ?x285 (- 13))) $x594 (not (= (* ?x439 (+ 2 ?x411 ?x610 ?x590 ?x201 ?x992)) 0)))))
 (let ((?x995 (* n!0 n!0)))
 (let ((?x255 (* (- 3) ?x995)))
 (let ((?x257 (+ k!2 (* (- 3) n!0) ?x255)))
 (let (($x200 (= ?x257 0)))
 (let ((?x988 (* (- 1) ?x992)))
 (let ((?x991 (* (- 2) n!0)))
 (let ((?x989 (* 3 c!3)))
 (let ((?x990 (+ ?x989 k!2 ?x991 ?x988)))
 (let (($x993 (= ?x990 0)))
 (let ((?x985 (* (- 1) ?x984)))
 (let ((?x980 (* c!3 n!0)))
 (let ((?x986 (* 9 ?x980)))
 (let ((?x979 (* (- 9) n!0)))
 (let ((?x114 (* 5 k!2)))
 (let ((?x391 (* 18 c!3)))
 (let ((?x133 (+ ?x391 ?x114 ?x979 ?x986 ?x985)))
 (let (($x332 (= ?x133 4)))
 (let (($x851 (and $x475 $x332 $x993 $x200 $x349)))
 (let ((?x609 (+ ?x415 ?x417 ?x327 (* 9 (* k!2 k!2 k!2 m!1)) ?x422 (* 54 (* c!3 c!3 m!1)) (* 18 (* c!3 k!2 k!2 m!1)) ?x318 (* 54 (* c!3 c!3 m!1 n!0)) (* 18 (* c!3 k!2 m!1 m!1)) (* 9 (* k!2 k!2 m!1 m!1)) (* 9 (* c!3 c!3 m!1 m!1)) (* 9 (* c!3 c!3 k!2 m!1)) ?x473 (* 84 (* k!2 m!1)) ?x207 (* 108 (* c!3 k!2 m!1 n!0)) ?x232 ?x534 (* 9 (* c!3 c!3 k!2 m!1 n!0)) (* 18 (* c!3 k!2 k!2 m!1 n!0)) (* 9 (* k!2 k!2 k!2 m!1 n!0)) (* 9 (* c!3 c!3 m!1 m!1 n!0)) (* 18 (* c!3 k!2 m!1 m!1 n!0)) (* 9 (* k!2 k!2 m!1 m!1 n!0)) ?x406 ?x336 ?x160 (* 108 (* c!3 k!2 m!1)) (* 61 (* k!2 k!2 m!1 n!0)) (* 14 (* k!2 m!1 m!1 n!0)) ?x664 (* 61 (* k!2 k!2 m!1)) ?x386 ?x431 (* 84 (* k!2 m!1 n!0)) (* 14 (* k!2 m!1 m!1)) ?x247)))
 (let ((?x573 (* 5 m!1)))
 (let ((?x566 (+ (* 27 c!3) (* 32 k!2) ?x573 ?x979 ?x985 (* 9 ?x992) ?x986 (* (- 2) (* k!2 m!1)) (* (- 1) ?x137))))
 (let (($x481 (or (not (= (+ k!2 m!1 ?x979 ?x255) 6)) $x195 (not (= ?x566 13)) (not (= (+ ?x989 (* 3 k!2) ?x991 ?x988 (* (- 1) ?x411)) 2)) (not (= (* ?x609 (+ 2 ?x610 ?x590 ?x201 ?x992 ?x411)) 0)))))
 (let (($x132 (and $x475 (= (+ ?x391 ?x114 ?x979 ?x985 ?x986) 4) $x993 $x200 $x481)))
 (let (($x569 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x375 (* m n)))
 (let ((?x52 (* k n)))
 (let ((?x56 (* 2 n)))
 (let ((?x234 (* (- 3) c)))
 (let ((?x540 (+ 2 ?x234 (* (- 3) k) ?x56 ?x52 ?x375)))
 (let ((?x720 (* 7 (* m m m n))))
 (let ((?x672 (* 8 (* c c))))
 (let ((?x660 (* 9 (* k k m m n))))
 (let ((?x654 (* 9 (* c c m m n))))
 (let ((?x652 (* 9 (* k k k m n))))
 (let ((?x646 (* 9 (* c c k m n))))
 (let ((?x667 (* 4 k)))
 (let ((?x666 (* 4 c)))
 (let ((?x974 (+ ?x666 ?x667 (* 50 (* k k)) (* 9 (* k k k m)) (* 54 (* c c k)) (* 54 (* c c m)) (* 18 (* c k k m)) (* 108 (* c k k)) (* 54 (* c c m n)) (* 18 (* c k m m)) (* 9 (* k k m m)) (* 9 (* c c m m)) (* 9 (* c c k m)) (* 54 (* k k k n)) (* 84 (* k m)) (* 42 (* m m)) (* 108 (* c k m n)) (* 54 (* k k k)) (* 108 (* c k k n)) ?x646 (* 18 (* c k k m n)) ?x652 ?x654 (* 18 (* c k m m n)) ?x660 ?x672 (* 16 (* c k)) (* 54 (* c c k n)) (* 108 (* c k m)) (* 61 (* k k m n)) (* 14 (* k m m n)) ?x720 (* 61 (* k k m)) (* 7 (* m m m)) (* 42 (* k k n)) (* 84 (* k m n)) (* 14 (* k m m)) (* 42 (* m m n)))))
 (let ((?x266 (* (- 1) ?x52)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x263 (* 3 c)))
 (let (($x556 (not (= (+ ?x263 (* 3 k) ?x265 ?x266 (* (- 1) ?x375)) 2))))
 (let ((?x163 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x526 (+ (* 27 c) (* 32 k) ?x438 ?x225 ?x226 (* 9 ?x52) ?x163 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x530 (not (= ?x526 13))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let (($x1004 (or (not (= (+ k m ?x225 (* (- 3) (* n n))) 6)) $x364 $x530 $x556 (not (= (* ?x974 ?x540) 0)))))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x268 (= (+ ?x263 k ?x265 ?x266) 0)))
 (let (($x223 (= (+ (* 18 c) (* 5 k) ?x225 ?x226 ?x163) 4)))
 (and $x146 $x223 $x268 $x304 $x1004)))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x279 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x265 (* (- 2) n)))
 (let ((?x667 (* 4 k)))
 (let ((?x263 (* 3 c)))
 (let (($x683 (= (+ ?x263 ?x667 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let ((?x56 (* 2 n)))
 (let ((?x402 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x441 (+ 1 n)))
 (let ((?x536 (* ?x441 ?x74)))
 (let ((?x433 (* (- 4) k)))
 (let ((?x234 (* (- 3) c)))
 (let ((?x666 (* 4 c)))
 (let ((?x235 (+ (* 9 (* ?x441 (+ 6 m) ?x74 (+ c k) (+ c k))) ?x666 ?x667 (* 8 (* (+ c k) (+ c k))) (* 7 (* ?x441 (+ 6 m) ?x74 ?x74)))))
 (let (($x574 (not (= (* ?x235 (+ 2 ?x234 ?x433 ?x536 ?x402 ?x56)) 0))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x515 (+ ?x37 (* 23 k) (* 9 (* ?x441 (+ c k))) ?x438 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x246 (= (+ (* 3 (* ?x441 ?x441)) (* (- 1) k) ?x402 (* 3 n)) (- 3))))
 (let (($x254 (not $x246)))
 (let (($x668 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x146 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x225 ?x226) 4) (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x668 (or $x254 (not (= ?x515 13)) $x364 $x574 (not $x683))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x138 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x375 (* m n)))
 (let ((?x52 (* k n)))
 (let ((?x56 (* 2 n)))
 (let ((?x234 (* (- 3) c)))
 (let ((?x540 (+ 2 ?x234 (* (- 3) k) ?x56 ?x52 ?x375)))
 (let ((?x720 (* 7 (* m m m n))))
 (let ((?x672 (* 8 (* c c))))
 (let ((?x660 (* 9 (* k k m m n))))
 (let ((?x654 (* 9 (* c c m m n))))
 (let ((?x652 (* 9 (* k k k m n))))
 (let ((?x646 (* 9 (* c c k m n))))
 (let ((?x667 (* 4 k)))
 (let ((?x666 (* 4 c)))
 (let ((?x974 (+ ?x666 ?x667 (* 50 (* k k)) (* 9 (* k k k m)) (* 54 (* c c k)) (* 54 (* c c m)) (* 18 (* c k k m)) (* 108 (* c k k)) (* 54 (* c c m n)) (* 18 (* c k m m)) (* 9 (* k k m m)) (* 9 (* c c m m)) (* 9 (* c c k m)) (* 54 (* k k k n)) (* 84 (* k m)) (* 42 (* m m)) (* 108 (* c k m n)) (* 54 (* k k k)) (* 108 (* c k k n)) ?x646 (* 18 (* c k k m n)) ?x652 ?x654 (* 18 (* c k m m n)) ?x660 ?x672 (* 16 (* c k)) (* 54 (* c c k n)) (* 108 (* c k m)) (* 61 (* k k m n)) (* 14 (* k m m n)) ?x720 (* 61 (* k k m)) (* 7 (* m m m)) (* 42 (* k k n)) (* 84 (* k m n)) (* 14 (* k m m)) (* 42 (* m m n)))))
 (let ((?x266 (* (- 1) ?x52)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x263 (* 3 c)))
 (let (($x556 (not (= (+ ?x263 (* 3 k) ?x265 ?x266 (* (- 1) ?x375)) 2))))
 (let ((?x163 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x526 (+ (* 27 c) (* 32 k) ?x438 ?x225 ?x226 (* 9 ?x52) ?x163 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x530 (not (= ?x526 13))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let (($x1004 (or (not (= (+ k m ?x225 (* (- 3) (* n n))) 6)) $x364 $x530 $x556 (not (= (* ?x974 ?x540) 0)))))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x268 (= (+ ?x263 k ?x265 ?x266) 0)))
 (let (($x223 (= (+ (* 18 c) (* 5 k) ?x225 ?x226 ?x163) 4)))
 (let (($x428 (and $x146 $x223 $x268 $x304 $x1004)))
 (let (($x683 (= (+ ?x263 ?x667 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let ((?x402 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x441 (+ 1 n)))
 (let ((?x536 (* ?x441 ?x74)))
 (let ((?x433 (* (- 4) k)))
 (let ((?x235 (+ (* 9 (* ?x441 (+ 6 m) ?x74 (+ c k) (+ c k))) ?x666 ?x667 (* 8 (* (+ c k) (+ c k))) (* 7 (* ?x441 (+ 6 m) ?x74 ?x74)))))
 (let (($x574 (not (= (* ?x235 (+ 2 ?x234 ?x433 ?x536 ?x402 ?x56)) 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x515 (+ ?x37 (* 23 k) (* 9 (* ?x441 (+ c k))) ?x438 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x246 (= (+ (* 3 (* ?x441 ?x441)) (* (- 1) k) ?x402 (* 3 n)) (- 3))))
 (let (($x254 (not $x246)))
 (let (($x668 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x176 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x225 ?x226) 4)))
 (let (($x348 (and $x146 $x176 (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x668 (or $x254 (not (= ?x515 13)) $x364 $x574 (not $x683)))))
 (rewrite (= $x348 $x428))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x513 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x56 (* 2 n)))
 (let ((?x402 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x441 (+ 1 n)))
 (let ((?x536 (* ?x441 ?x74)))
 (let ((?x433 (* (- 4) k)))
 (let ((?x234 (* (- 3) c)))
 (let ((?x667 (* 4 k)))
 (let ((?x666 (* 4 c)))
 (let ((?x235 (+ (* 9 (* ?x441 (+ 6 m) ?x74 (+ c k) (+ c k))) ?x666 ?x667 (* 8 (* (+ c k) (+ c k))) (* 7 (* ?x441 (+ 6 m) ?x74 ?x74)))))
 (let (($x574 (not (= (* ?x235 (+ 2 ?x234 ?x433 ?x536 ?x402 ?x56)) 0))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x462 (* (- 18) c)))
 (let ((?x183 (+ ?x462 (* (- 23) k) (* (- 9) (* ?x441 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x246 (= (+ (* 3 (* ?x441 ?x441)) (* (- 1) k) ?x402 (* 3 n)) (- 3))))
 (let (($x254 (not $x246)))
 (let (($x633 (or $x254 (not (= ?x183 (- 13))) $x364 $x574 (not (= (+ ?x234 ?x433 ?x536 ?x402 ?x56) (- 2))))))
 (let (($x668 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x370 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x146 $x370 (= (+ ?x234 (* n k) (* (- 1) k) ?x56) 0) $x668 $x633))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x425 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x265 (* (- 2) n)))
 (let ((?x667 (* 4 k)))
 (let ((?x263 (* 3 c)))
 (let (($x683 (= (+ ?x263 ?x667 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let ((?x56 (* 2 n)))
 (let ((?x402 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x441 (+ 1 n)))
 (let ((?x536 (* ?x441 ?x74)))
 (let ((?x433 (* (- 4) k)))
 (let ((?x234 (* (- 3) c)))
 (let ((?x666 (* 4 c)))
 (let ((?x235 (+ (* 9 (* ?x441 (+ 6 m) ?x74 (+ c k) (+ c k))) ?x666 ?x667 (* 8 (* (+ c k) (+ c k))) (* 7 (* ?x441 (+ 6 m) ?x74 ?x74)))))
 (let (($x574 (not (= (* ?x235 (+ 2 ?x234 ?x433 ?x536 ?x402 ?x56)) 0))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x515 (+ ?x37 (* 23 k) (* 9 (* ?x441 (+ c k))) ?x438 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x246 (= (+ (* 3 (* ?x441 ?x441)) (* (- 1) k) ?x402 (* 3 n)) (- 3))))
 (let (($x254 (not $x246)))
 (let (($x668 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x348 (and $x146 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x225 ?x226) 4) (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x668 (or $x254 (not (= ?x515 13)) $x364 $x574 (not $x683)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x462 (* (- 18) c)))
 (let ((?x183 (+ ?x462 (* (- 23) k) (* (- 9) (* ?x441 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x633 (or $x254 (not (= ?x183 (- 13))) $x364 $x574 (not (= (+ ?x234 ?x433 ?x536 ?x402 ?x56) (- 2))))))
 (let (($x370 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x288 (and $x146 $x370 (= (+ ?x234 (* n k) (* (- 1) k) ?x56) 0) $x668 $x633)))
 (rewrite (= $x288 $x348)))))))))))))))))))))))))))))))))))))
 ))
 (let (($x111 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x98 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x105 (+ (* 9 (+ c k) (+ c k) ?x74 ?x98 ?x66) (* 4 (+ c k)) (* 8 (+ c k) (+ c k)) (* 7 ?x74 ?x74 ?x98 ?x66))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) ?x66)) (* 5 ?x74))))
 (let (($x109 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x89 ?x105) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x109)))))))))))))) :qid k!38))
 ))
 (let ((?x517 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x56 (* 2 n)))
 (let ((?x402 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x441 (+ 1 n)))
 (let ((?x536 (* ?x441 ?x74)))
 (let ((?x433 (* (- 4) k)))
 (let ((?x234 (* (- 3) c)))
 (let ((?x667 (* 4 k)))
 (let ((?x666 (* 4 c)))
 (let ((?x235 (+ (* 9 (* ?x441 (+ 6 m) ?x74 (+ c k) (+ c k))) ?x666 ?x667 (* 8 (* (+ c k) (+ c k))) (* 7 (* ?x441 (+ 6 m) ?x74 ?x74)))))
 (let (($x574 (not (= (* ?x235 (+ 2 ?x234 ?x433 ?x536 ?x402 ?x56)) 0))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x462 (* (- 18) c)))
 (let ((?x183 (+ ?x462 (* (- 23) k) (* (- 9) (* ?x441 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x246 (= (+ (* 3 (* ?x441 ?x441)) (* (- 1) k) ?x402 (* 3 n)) (- 3))))
 (let (($x254 (not $x246)))
 (let (($x633 (or $x254 (not (= ?x183 (- 13))) $x364 $x574 (not (= (+ ?x234 ?x433 ?x536 ?x402 ?x56) (- 2))))))
 (let (($x668 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x370 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x288 (and $x146 $x370 (= (+ ?x234 (* n k) (* (- 1) k) ?x56) 0) $x668 $x633)))
 (let ((?x66 (+ n 1)))
 (let ((?x98 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x105 (+ (* 9 ?x71 ?x71 ?x74 ?x98 ?x66) (* 4 ?x71) (* 8 ?x71 ?x71) (* 7 ?x74 ?x74 ?x98 ?x66))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x109 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x89 ?x105) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x110 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x109)))
 (rewrite (= $x110 $x288)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x112 (asserted $x111)))
 (let ((@x477 (mp (mp @x112 (quant-intro (proof-bind ?x517) (= $x111 $x513)) $x513) (rewrite (= $x513 $x513)) $x513)))
 (let ((@x564 (mp (mp @x477 (quant-intro (proof-bind ?x425) (= $x513 $x279)) $x279) (quant-intro (proof-bind ?x138) (= $x279 $x569)) $x569)))
 (let ((@x179 (mp (mp~ @x564 (sk (~ $x569 $x132)) $x132) (rewrite (= $x132 $x851)) $x851)))
 (let ((@x361 (and-elim @x179 $x475)))
 (let ((@x544 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x195 $x143)) @x361 $x143)))
 (let (($x482 (>= ?x492 6)))
 (let ((@x739 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x195 $x482)) @x361 $x482)))
 (let ((?x134 (+ m!1 k!2 ?x979 ?x255)))
 (let (($x199 (<= ?x134 6)))
 (let (($x756 (<= ?x257 0)))
 (let ((@x472 (and-elim @x179 $x200)))
 (let ((@x169 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x199 (not $x756) (not $x143))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x200) $x756)) @x472 $x756) @x544 $x199)))
 (let (($x155 (>= ?x134 6)))
 (let (($x865 (>= ?x257 0)))
 (let ((@x118 ((_ th-lemma arith farkas -1 1 1) (hypothesis (not $x155)) @x739 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x200) $x865)) @x472 $x865) false)))
 (let ((@x219 (lemma @x118 $x155)))
 (let (($x478 (<= ?x990 0)))
 (let ((@x156 (and-elim @x179 $x993)))
 (let ((@x316 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x993) $x478)) @x156 $x478)))
 (let (($x688 (>= ?x990 0)))
 (let ((@x506 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x993) $x688)) @x156 $x688)))
 (let (($x755 (<= ?x133 4)))
 (let ((@x131 (and-elim @x179 $x332)))
 (let ((@x950 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x332) $x755)) @x131 $x755)))
 (let (($x373 (>= ?x133 4)))
 (let ((@x799 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x332) $x373)) @x131 $x373)))
 (let (($x1376 (<= m!1 12)))
 (let ((@x1336 (hypothesis $x1376)))
 (let (($x1473 (<= n!0 0)))
 (let ((@x1386 (hypothesis $x1473)))
 (let (($x116 (>= n!0 0)))
 (let ((@x474 (hypothesis (not $x116))))
 (let (($x758 (>= k!2 0)))
 (let ((@x528 (hypothesis (not $x758))))
 (let ((@x192 (unit-resolution (lemma ((_ th-lemma arith) @x474 @x544 @x474 @x528 @x219 false) (or $x116 $x758)) @x528 $x116)))
 (let ((@x905 (lemma ((_ th-lemma arith farkas -1/3 1 1/3 -1/3) @x528 @x192 @x219 @x544 false) $x758)))
 (let (($x743 (>= ?x992 1)))
 (let (($x848 (>= n!0 (- 1))))
 (let (($x356 (not $x848)))
 (let ((@x495 (hypothesis (not $x743))))
 (let ((@x794 (hypothesis $x848)))
 (let ((@x177 ((_ th-lemma arith farkas 2/5 1/3 -1/3 -1/5 2/5 1/5 1/5 3/5 3/5 -1/15 1 1 1 1) @x474 @x169 @x739 @x905 @x474 @x495 @x316 @x794 @x474 @x799 @x794 @x474 @x794 @x474 false)))
 (let ((@x434 (unit-resolution (lemma @x177 (or $x356 $x116 $x743)) @x495 @x474 $x356)))
 (let (($x150 (>= (+ ?x573 (* 10 c!3) ?x114 (* (- 45) n!0) ?x986 (* (- 5) ?x995)) 58)))
 (let (($x792 (>= ?x980 2)))
 (let ((@x453 ((_ th-lemma arith farkas 3 -1/3 -1/3 2 2 1) (hypothesis (not $x792)) @x799 @x905 @x495 @x316 (hypothesis $x356) false)))
 (let ((@x960 ((_ th-lemma arith gomory-cut 9/10 1/8 -3/4 3/8 1/2 5/8) (unit-resolution (lemma @x453 (or $x792 $x743 $x848)) @x495 @x434 $x792) @x799 @x434 @x434 @x219 @x739 $x150)))
 (let ((@x319 ((_ th-lemma arith) @x960 @x434 @x219 @x169 @x739 @x544 @x219 @x169 @x739 @x544 @x799 @x950 @x739 @x544 @x739 @x544 @x799 @x950 @x219 @x169 @x799 @x950 @x506 @x316 false)))
 (let ((@x930 ((_ th-lemma arith farkas 1 1 1) (unit-resolution (lemma @x319 (or $x743 $x116)) @x474 $x743) @x905 @x474 false)))
 (let ((@x178 (lemma @x930 $x116)))
 (let (($x1434 (<= c!3 0)))
 (let ((@x1366 (hypothesis $x1434)))
 (let (($x845 (>= c!3 0)))
 (let ((@x1296 ((_ th-lemma arith) (hypothesis (not $x845)) @x178 @x799 @x950 @x799 @x950 @x739 @x544 @x219 @x169 @x739 @x544 @x219 @x169 @x506 @x316 @x799 @x950 @x739 @x544 @x799 @x950 @x219 @x169 false)))
 (let ((@x1036 (lemma @x1296 $x845)))
 (let ((@x1424 ((_ th-lemma arith) @x1036 @x1366 @x1036 @x1366 @x219 @x169 @x739 @x544 @x1036 @x1366 @x799 @x950 @x506 @x316 @x1036 @x1366 false)))
 (let ((@x1365 (lemma @x1424 (not $x1434))))
 (let ((@x1331 (lemma ((_ th-lemma arith farkas 1 2 3 1 1 1) @x316 @x1386 @x1365 @x905 @x178 @x1386 false) (not $x1473))))
 (let ((@x1375 ((_ th-lemma arith farkas -3 -3 -3 -1 3/2 -1/2 1 1 1 1 1 1 1 1) @x1331 @x1336 @x739 @x169 @x739 @x1336 @x316 @x1331 @x219 @x544 @x1365 @x1331 @x1336 @x739 false)))
 ((_ th-lemma arith) (lemma @x1375 (not $x1376)) @x544 @x219 @x169 @x739 @x544 @x219 @x169 @x739 @x544 @x799 @x950 @x506 @x316 @x739 @x544 @x219 @x169 @x219 @x169 @x739 @x544 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 40
 :arith-assert-diseq        32
 :arith-assert-lower        686
 :arith-assert-upper        207
 :arith-bound-prop          3
 :arith-branch-var          16
 :arith-conflicts           26
 :arith-eq-adapter          10
 :arith-fixed-eqs           66
 :arith-gcd-tests           133
 :arith-gomory-cuts         10
 :arith-grobner             15
 :arith-ineq-splits         16
 :arith-max-min             3280
 :arith-nonlinear-bounds    619
 :arith-nonlinear-horner    130
 :arith-num-rows            19
 :arith-patches             37
 :arith-patches_succ        5
 :arith-pivots              218
 :arith-pseudo-nonlinear    58
 :arith-row-summations      756
 :arith-tableau-max-columns 95
 :arith-tableau-max-rows    19
 :conflicts                 26
 :decisions                 164
 :del-clause                40
 :final-checks              75
 :max-memory                3.96
 :memory                    3.28
 :mk-bool-var               127
 :mk-clause                 51
 :num-allocs                2172591
 :num-checks                1
 :propagations              93
 :rlimit-count              81002
 :time                      0.05
 :total-time                0.05)
