unsat
((set-logic NIA)
(proof
(let (($x116 (<= x 0)))
 (let (($x127 (not $x116)))
 (let (($x114 (= x 0)))
 (let (($x167 (not $x114)))
 (let ((?x40 (* x x)))
 (let (($x118 (= ?x40 0)))
 (let (($x180 (not $x118)))
 (let ((@x182 (monotonicity (commutativity (= (= 0 ?x40) $x118)) (= (not (= 0 ?x40)) $x180))))
 (let (($x119 (= 0 ?x40)))
 (let (($x170 (not $x119)))
 (let (($x122 (>= ?x40 0)))
 (let (($x173 (not $x122)))
 (let ((?x56 (* 2 x)))
 (let ((?x68 (+ ?x56 ?x40)))
 (let (($x108 (<= ?x68 (- 1))))
 (let (($x107 (= (- 1) ?x68)))
 (let ((@x141 (symm (commutativity (= $x107 (= ?x68 (- 1)))) (= (= ?x68 (- 1)) $x107))))
 (let (($x69 (= ?x68 (- 1))))
 (let ((@x71 (rewrite (= (= (+ 1 ?x56 ?x40) 0) $x69))))
 (let ((?x57 (+ 1 ?x56 ?x40)))
 (let (($x64 (= ?x57 0)))
 (let ((?x31 (+ 1 x)))
 (let ((?x34 (* ?x31 ?x31)))
 (let (($x83 (= ?x34 0)))
 (let ((?x52 (+ 1 x x ?x40)))
 (let ((?x39 (* 1 x)))
 (let ((?x38 (* x 1)))
 (let ((?x37 (* 1 1)))
 (let ((?x41 (+ ?x37 ?x38 ?x39 ?x40)))
 (let ((@x54 (monotonicity (rewrite (= ?x37 1)) (rewrite (= ?x38 x)) (rewrite (= ?x39 x)) (= ?x41 ?x52))))
 (let ((@x61 (trans @x54 (rewrite (= ?x52 ?x57)) (= ?x41 ?x57))))
 (let ((@x43 (rewrite (= ?x34 ?x41))))
 (let ((@x103 (trans (monotonicity (trans @x43 @x61 (= ?x34 ?x57)) (= $x83 $x64)) @x71 (= $x83 $x69))))
 (let ((?x26 (+ x 1)))
 (let ((?x27 (* ?x26 ?x26)))
 (let (($x29 (= ?x27 0)))
 (let ((@x30 (asserted $x29)))
 (let ((@x93 (mp (mp @x30 (rewrite (= $x29 $x83)) $x83) (rewrite (= $x83 $x83)) $x83)))
 (let ((@x143 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x107) $x108)) (mp (mp @x93 @x103 $x69) @x141 $x107) $x108)))
 (let (($x117 (>= x 0)))
 (let (($x110 (<= x (- 1))))
 (let (($x158 (not $x110)))
 (let (($x111 (>= x (- 1))))
 (let ((?x121 (+ ?x40 ?x56)))
 (let (($x133 (<= ?x121 (- 1))))
 (let ((@x146 (lemma ((_ th-lemma arith) @x143 (hypothesis (>= ?x121 0)) false) (not (>= ?x121 0)))))
 (let ((@x155 (unit-resolution ((_ th-lemma arith) (or (not $x133) $x111)) (hypothesis (not $x111)) (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x133 (>= ?x121 0))) @x146 $x133) false)))
 (let (($x81 (= x (- 1))))
 (let (($x79 (not $x81)))
 (let ((@x82 (mp (asserted (not (= x (- 1)))) (rewrite (= (not (= x (- 1))) $x79)) $x79)))
 (let ((@x162 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x81 $x158 (not $x111))) (mp @x82 (rewrite (= $x79 $x79)) $x79) (or $x158 (not $x111)))))
 (let ((@x164 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x117 $x110)) (unit-resolution @x162 (lemma @x155 $x111) $x158) $x117)))
 (let ((@x176 (unit-resolution ((_ th-lemma arith) (or (not $x117) (not $x108) $x173)) @x164 @x143 $x173)))
 (let ((@x184 (unit-resolution ((_ th-lemma arith) (or $x167 $x118)) (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x170 $x122)) @x176 $x170) @x182 $x180) $x167)))
 (let ((@x166 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x114 $x127 (not $x117))) @x164 (or $x114 $x127))))
 (unit-resolution ((_ th-lemma arith) (or $x116 (not $x108))) @x143 (unit-resolution @x166 @x184 $x127) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

