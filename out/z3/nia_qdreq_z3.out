unsat
((set-logic NIA)
(proof
(let (($x110 (<= x 0)))
 (let (($x121 (not $x110)))
 (let (($x108 (= x 0)))
 (let (($x161 (not $x108)))
 (let ((?x40 (* x x)))
 (let (($x112 (= ?x40 0)))
 (let (($x174 (not $x112)))
 (let ((@x176 (monotonicity (commutativity (= (= 0 ?x40) $x112)) (= (not (= 0 ?x40)) $x174))))
 (let (($x113 (= 0 ?x40)))
 (let (($x164 (not $x113)))
 (let (($x116 (>= ?x40 0)))
 (let (($x167 (not $x116)))
 (let ((?x56 (* 2 x)))
 (let ((?x68 (+ ?x56 ?x40)))
 (let (($x102 (<= ?x68 (- 1))))
 (let (($x101 (= (- 1) ?x68)))
 (let ((@x135 (symm (commutativity (= $x101 (= ?x68 (- 1)))) (= (= ?x68 (- 1)) $x101))))
 (let (($x69 (= ?x68 (- 1))))
 (let ((@x71 (rewrite (= (= (+ 1 ?x56 ?x40) 0) $x69))))
 (let ((?x57 (+ 1 ?x56 ?x40)))
 (let (($x64 (= ?x57 0)))
 (let ((?x31 (+ 1 x)))
 (let ((?x34 (* ?x31 ?x31)))
 (let (($x79 (= ?x34 0)))
 (let ((?x52 (+ 1 x x ?x40)))
 (let ((?x39 (* 1 x)))
 (let ((?x38 (* x 1)))
 (let ((?x37 (* 1 1)))
 (let ((?x41 (+ ?x37 ?x38 ?x39 ?x40)))
 (let ((@x54 (monotonicity (rewrite (= ?x37 1)) (rewrite (= ?x38 x)) (rewrite (= ?x39 x)) (= ?x41 ?x52))))
 (let ((@x61 (trans @x54 (rewrite (= ?x52 ?x57)) (= ?x41 ?x57))))
 (let ((@x43 (rewrite (= ?x34 ?x41))))
 (let ((@x97 (trans (monotonicity (trans @x43 @x61 (= ?x34 ?x57)) (= $x79 $x64)) @x71 (= $x79 $x69))))
 (let ((?x26 (+ x 1)))
 (let ((?x27 (* ?x26 ?x26)))
 (let (($x29 (= ?x27 0)))
 (let ((@x30 (asserted $x29)))
 (let ((@x84 (mp (mp @x30 (rewrite (= $x29 $x79)) $x79) (rewrite (= $x79 $x79)) $x79)))
 (let ((@x137 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x101) $x102)) (mp (mp @x84 @x97 $x69) @x135 $x101) $x102)))
 (let (($x111 (>= x 0)))
 (let (($x104 (<= x (- 1))))
 (let (($x152 (not $x104)))
 (let (($x105 (>= x (- 1))))
 (let ((?x115 (+ ?x40 ?x56)))
 (let (($x127 (<= ?x115 (- 1))))
 (let ((@x140 (lemma ((_ th-lemma arith) @x137 (hypothesis (>= ?x115 0)) false) (not (>= ?x115 0)))))
 (let ((@x149 (unit-resolution ((_ th-lemma arith) (or (not $x127) $x105)) (hypothesis (not $x105)) (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x127 (>= ?x115 0))) @x140 $x127) false)))
 (let (($x75 (= x (- 1))))
 (let (($x76 (not $x75)))
 (let ((@x77 (asserted $x76)))
 (let ((@x156 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x75 $x152 (not $x105))) (mp @x77 (rewrite (= $x76 $x76)) $x76) (or $x152 (not $x105)))))
 (let ((@x158 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x111 $x104)) (unit-resolution @x156 (lemma @x149 $x105) $x152) $x111)))
 (let ((@x170 (unit-resolution ((_ th-lemma arith) (or (not $x111) (not $x102) $x167)) @x158 @x137 $x167)))
 (let ((@x178 (unit-resolution ((_ th-lemma arith) (or $x161 $x112)) (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x164 $x116)) @x170 $x164) @x176 $x174) $x161)))
 (let ((@x160 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x108 $x121 (not $x111))) @x158 (or $x108 $x121))))
 (unit-resolution ((_ th-lemma arith) (or $x110 (not $x102))) @x137 (unit-resolution @x160 @x178 $x121) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

