unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x781 (* (- 3) n!0)))
 (let ((?x831 (* n!0 n!0)))
 (let ((?x832 (* (- 3) ?x831)))
 (let ((?x859 (+ k!2 ?x832 ?x781)))
 (let (($x816 (<= ?x859 0)))
 (let (($x873 (= ?x859 0)))
 (let ((?x875 (* 2 n!0)))
 (let ((?x703 (* (- 3) c!3)))
 (let ((?x159 (* m!1 n!0)))
 (let ((?x123 (* k!2 n!0)))
 (let ((?x785 (+ ?x123 ?x159 ?x703 (* (- 3) k!2) ?x875)))
 (let ((?x823 (* (- 9) n!0)))
 (let ((?x286 (* (- 1) (* m!1 m!1))))
 (let ((?x447 (* 32 k!2)))
 (let ((?x822 (* k!2 k!2)))
 (let ((?x817 (* (- 1) ?x822)))
 (let ((?x852 (* 5 m!1)))
 (let ((?x510 (* 9 (* c!3 n!0))))
 (let ((?x445 (* 27 c!3)))
 (let ((?x448 (* 9 ?x123)))
 (let ((?x860 (+ ?x448 ?x445 (* (- 2) (* m!1 k!2)) ?x510 ?x852 ?x817 ?x447 ?x286 ?x823)))
 (let ((?x734 (* (- 3) (* c!3 c!3 m!1 m!1))))
 (let ((?x406 (* 11 k!2)))
 (let ((?x475 (* (- 108) ?x822)))
 (let ((?x402 (* 2 m!1)))
 (let ((?x469 (* (- 36) (* c!3 c!3 m!1))))
 (let ((?x525 (* (- 216) (* c!3 k!2))))
 (let ((?x775 (* (- 108) (* c!3 c!3))))
 (let ((?x480 (* 9 c!3)))
 (let ((?x158 (+ c!3 k!2)))
 (let ((?x855 (+ m!1 k!2)))
 (let ((?x856 (+ 1 n!0)))
 (let ((?x776 (+ (* 9 (* ?x856 ?x856 ?x855 ?x855 ?x158 ?x158)) (* (- 36) (* m!1 k!2 k!2)) ?x480 (* (- 3) (* m!1 m!1 k!2 k!2)) (* (- 72) (* c!3 m!1 k!2)) (* (- 6) (* c!3 m!1 m!1 k!2)) ?x775 ?x525 ?x469 ?x402 ?x475 ?x406 ?x734)))
 (let ((?x780 (* (- 6) n!0)))
 (let ((?x478 (+ (- 6) m!1 ?x780)))
 (let ((?x517 (+ m!1 ?x780)))
 (let (($x560 (= ?x517 6)))
 (let (($x486 (not $x560)))
 (let (($x452 (or $x486 (not (= (* ?x478 ?x776) 0)) (not (= ?x860 13)) (not (= ?x785 (- 2))) (not (= (+ m!1 k!2 ?x832 ?x823) 6)))))
 (let ((?x874 (+ ?x123 ?x703 (* (- 1) k!2) ?x875)))
 (let (($x423 (= ?x874 0)))
 (let ((?x760 (* 5 k!2)))
 (let ((?x798 (* 18 c!3)))
 (let ((?x456 (+ ?x798 ?x510 ?x817 ?x760 ?x823)))
 (let (($x742 (= ?x456 4)))
 (let (($x377 (and $x560 $x742 $x423 $x873 $x452)))
 (let ((?x492 (+ ?x480 ?x406 ?x402 ?x475 (* 9 (* ?x856 ?x856 (+ k!2 m!1) (+ k!2 m!1) ?x158 ?x158)) ?x734 (* (- 6) (* c!3 k!2 m!1 m!1)) (* (- 3) (* k!2 k!2 m!1 m!1)) ?x775 ?x525 ?x469 (* (- 72) (* c!3 k!2 m!1)) (* (- 36) (* k!2 k!2 m!1)))))
 (let ((?x138 (* (- 1) ?x123)))
 (let ((?x490 (* (- 2) n!0)))
 (let ((?x388 (* 3 c!3)))
 (let ((?x878 (+ ?x445 ?x447 ?x852 ?x823 ?x817 ?x448 ?x510 (* (- 2) (* k!2 m!1)) ?x286)))
 (let (($x459 (or (not (= (+ k!2 m!1 ?x823 ?x832) 6)) $x486 (not (= ?x878 13)) (not (= (+ ?x388 (* 3 k!2) ?x490 ?x138 (* (- 1) ?x159)) 2)) (not (= (* ?x478 ?x492) 0)))))
 (let (($x477 (and $x560 (= (+ ?x798 ?x760 ?x823 ?x817 ?x510) 4) (= (+ ?x388 k!2 ?x490 ?x138) 0) (= (+ k!2 ?x781 ?x832) 0) $x459)))
 (let (($x569 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x870 (* (- 36) (* k k m))))
 (let ((?x869 (* (- 72) (* c k m))))
 (let ((?x867 (* (- 36) (* c c m))))
 (let ((?x865 (* (- 216) (* c k))))
 (let ((?x795 (* (- 108) (* c c))))
 (let ((?x858 (* (- 3) (* k k m m))))
 (let ((?x871 (* (- 6) (* c k m m))))
 (let ((?x843 (* (- 3) (* c c m m))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x411 (+ 1 n)))
 (let ((?x749 (* 9 (* ?x411 ?x411 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x46 (* k k)))
 (let ((?x810 (* (- 108) ?x46)))
 (let ((?x708 (* 2 m)))
 (let ((?x716 (* 11 k)))
 (let ((?x702 (* 9 c)))
 (let ((?x380 (+ ?x702 ?x716 ?x708 ?x810 ?x749 ?x843 ?x871 ?x858 ?x795 ?x865 ?x867 ?x869 ?x870)))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let ((?x52 (* k n)))
 (let ((?x265 (* (- 1) ?x52)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let (($x572 (= (+ ?x262 (* 3 k) ?x264 ?x265 (* (- 1) (* m n))) 2)))
 (let (($x580 (not $x572)))
 (let ((?x162 (* 9 (* c n))))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x550 (+ (* 27 c) (* 32 k) ?x462 ?x224 ?x225 (* 9 ?x52) ?x162 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x554 (not (= ?x550 13))))
 (let (($x145 (= (+ m ?x128) 6)))
 (let (($x363 (not $x145)))
 (let (($x392 (or (not (= (+ k m ?x224 (* (- 3) (* n n))) 6)) $x363 $x554 $x580 (not (= (* ?x134 ?x380) 0)))))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x267 (= (+ ?x262 k ?x264 ?x265) 0)))
 (let (($x222 (= (+ (* 18 c) (* 5 k) ?x224 ?x225 ?x162) 4)))
 (and $x145 $x222 $x267 $x303 $x392))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x180 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x786 (* (- 1) m)))
 (let ((?x177 (* (- 1) k)))
 (let (($x768 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x177 ?x786 ?x61) (- 3))))
 (let (($x881 (not $x768)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let ((?x824 (+ ?x262 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x264)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x553 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x708 (* 2 m)))
 (let ((?x716 (* 11 k)))
 (let ((?x702 (* 9 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x411 (+ 1 n)))
 (let ((?x749 (* 9 (* ?x411 ?x411 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x284 (not (= (* ?x134 (+ ?x749 ?x702 ?x716 ?x708 ?x553)) 0))))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x837 (+ ?x37 (* 23 k) (* 9 (* ?x411 ?x71)) ?x462 ?x224 (* (- 1) (* ?x74 ?x74)))))
 (let (($x435 (= (+ (* 3 (* n n)) ?x177 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x145 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x224 ?x225) 4) (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x435 (or (not (= ?x837 13)) $x284 $x363 (not (= ?x824 2)) $x881))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x584 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x870 (* (- 36) (* k k m))))
 (let ((?x869 (* (- 72) (* c k m))))
 (let ((?x867 (* (- 36) (* c c m))))
 (let ((?x865 (* (- 216) (* c k))))
 (let ((?x795 (* (- 108) (* c c))))
 (let ((?x858 (* (- 3) (* k k m m))))
 (let ((?x871 (* (- 6) (* c k m m))))
 (let ((?x843 (* (- 3) (* c c m m))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x411 (+ 1 n)))
 (let ((?x749 (* 9 (* ?x411 ?x411 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x46 (* k k)))
 (let ((?x810 (* (- 108) ?x46)))
 (let ((?x708 (* 2 m)))
 (let ((?x716 (* 11 k)))
 (let ((?x702 (* 9 c)))
 (let ((?x380 (+ ?x702 ?x716 ?x708 ?x810 ?x749 ?x843 ?x871 ?x858 ?x795 ?x865 ?x867 ?x869 ?x870)))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let ((?x52 (* k n)))
 (let ((?x265 (* (- 1) ?x52)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let (($x572 (= (+ ?x262 (* 3 k) ?x264 ?x265 (* (- 1) (* m n))) 2)))
 (let (($x580 (not $x572)))
 (let ((?x162 (* 9 (* c n))))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x550 (+ (* 27 c) (* 32 k) ?x462 ?x224 ?x225 (* 9 ?x52) ?x162 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x554 (not (= ?x550 13))))
 (let (($x145 (= (+ m ?x128) 6)))
 (let (($x363 (not $x145)))
 (let (($x392 (or (not (= (+ k m ?x224 (* (- 3) (* n n))) 6)) $x363 $x554 $x580 (not (= (* ?x134 ?x380) 0)))))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x267 (= (+ ?x262 k ?x264 ?x265) 0)))
 (let (($x222 (= (+ (* 18 c) (* 5 k) ?x224 ?x225 ?x162) 4)))
 (let (($x495 (and $x145 $x222 $x267 $x303 $x392)))
 (let ((?x61 (* 3 n)))
 (let ((?x786 (* (- 1) m)))
 (let ((?x177 (* (- 1) k)))
 (let (($x881 (not (= (+ (* 3 (* ?x411 ?x411)) ?x177 ?x786 ?x61) (- 3)))))
 (let (($x825 (= (+ ?x262 (* 4 k) (* (- 1) (* ?x411 ?x74)) m ?x264) 2)))
 (let ((?x178 (+ ?x749 ?x702 ?x716 ?x708 (* (- 3) (* (+ 6 m) (+ 6 m) ?x71 ?x71)))))
 (let (($x284 (not (= (* ?x134 ?x178) 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x837 (+ ?x37 (* 23 k) (* 9 (* ?x411 ?x71)) ?x462 ?x224 (* (- 1) (* ?x74 ?x74)))))
 (let (($x435 (= (+ (* 3 (* n n)) ?x177 ?x61) 0)))
 (let (($x350 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x224 ?x225) 4)))
 (let (($x179 (and $x145 $x350 (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x435 (or (not (= ?x837 13)) $x284 $x363 (not $x825) $x881))))
 (rewrite (= $x179 $x495))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x739 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x786 (* (- 1) m)))
 (let ((?x177 (* (- 1) k)))
 (let (($x768 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x177 ?x786 ?x61) (- 3))))
 (let (($x881 (not $x768)))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x411 (+ 1 n)))
 (let ((?x804 (* ?x411 ?x74)))
 (let ((?x851 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x207 (* (- 18) c)))
 (let ((?x521 (+ ?x207 (* (- 23) k) (* (- 9) (* ?x411 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x553 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x708 (* 2 m)))
 (let ((?x716 (* 11 k)))
 (let ((?x702 (* 9 c)))
 (let ((?x749 (* 9 (* ?x411 ?x411 ?x74 ?x74 (+ c k) (+ c k)))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x284 (not (= (* ?x134 (+ ?x749 ?x702 ?x716 ?x708 ?x553)) 0))))
 (let (($x803 (or $x284 $x363 (not (= ?x521 (- 13))) (not (= (+ ?x851 (* (- 4) k) ?x804 ?x786 ?x56) (- 2))) $x881)))
 (let (($x435 (= (+ (* 3 (* n n)) ?x177 ?x61) 0)))
 (let (($x529 (= (+ ?x207 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x145 $x529 (= (+ ?x851 (* n k) ?x177 ?x56) 0) $x435 $x803)))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x834 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x786 (* (- 1) m)))
 (let ((?x177 (* (- 1) k)))
 (let (($x768 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x177 ?x786 ?x61) (- 3))))
 (let (($x881 (not $x768)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let ((?x824 (+ ?x262 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x264)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x553 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x708 (* 2 m)))
 (let ((?x716 (* 11 k)))
 (let ((?x702 (* 9 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x411 (+ 1 n)))
 (let ((?x749 (* 9 (* ?x411 ?x411 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x284 (not (= (* ?x134 (+ ?x749 ?x702 ?x716 ?x708 ?x553)) 0))))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x837 (+ ?x37 (* 23 k) (* 9 (* ?x411 ?x71)) ?x462 ?x224 (* (- 1) (* ?x74 ?x74)))))
 (let (($x435 (= (+ (* 3 (* n n)) ?x177 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x179 (and $x145 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x224 ?x225) 4) (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x435 (or (not (= ?x837 13)) $x284 $x363 (not (= ?x824 2)) $x881))))
 (let ((?x56 (* 2 n)))
 (let ((?x804 (* ?x411 ?x74)))
 (let ((?x851 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x207 (* (- 18) c)))
 (let ((?x521 (+ ?x207 (* (- 23) k) (* (- 9) (* ?x411 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let (($x803 (or $x284 $x363 (not (= ?x521 (- 13))) (not (= (+ ?x851 (* (- 4) k) ?x804 ?x786 ?x56) (- 2))) $x881)))
 (let (($x529 (= (+ ?x207 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x842 (and $x145 $x529 (= (+ ?x851 (* n k) ?x177 ?x56) 0) $x435 $x803)))
 (rewrite (= $x842 $x179)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x110 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x102 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x66 (+ n 1)))
 (let ((?x74 (+ k m)))
 (let ((?x101 (+ (* 9 ?x71 ?x71 ?x74 ?x74 ?x66 ?x66) (* 9 ?x71) (* 2 ?x74))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x108 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x68 (- ?x101 (* 3 ?x71 ?x71 ?x102 ?x102))) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x108)))))))))))))))) :qid k!38))
 ))
 (let ((?x741 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x786 (* (- 1) m)))
 (let ((?x177 (* (- 1) k)))
 (let (($x768 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x177 ?x786 ?x61) (- 3))))
 (let (($x881 (not $x768)))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x411 (+ 1 n)))
 (let ((?x804 (* ?x411 ?x74)))
 (let ((?x851 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x207 (* (- 18) c)))
 (let ((?x521 (+ ?x207 (* (- 23) k) (* (- 9) (* ?x411 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x553 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x708 (* 2 m)))
 (let ((?x716 (* 11 k)))
 (let ((?x702 (* 9 c)))
 (let ((?x749 (* 9 (* ?x411 ?x411 ?x74 ?x74 (+ c k) (+ c k)))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x284 (not (= (* ?x134 (+ ?x749 ?x702 ?x716 ?x708 ?x553)) 0))))
 (let (($x803 (or $x284 $x363 (not (= ?x521 (- 13))) (not (= (+ ?x851 (* (- 4) k) ?x804 ?x786 ?x56) (- 2))) $x881)))
 (let (($x435 (= (+ (* 3 (* n n)) ?x177 ?x61) 0)))
 (let (($x529 (= (+ ?x207 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x842 (and $x145 $x529 (= (+ ?x851 (* n k) ?x177 ?x56) 0) $x435 $x803)))
 (let ((?x102 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x101 (+ (* 9 ?x71 ?x71 ?x74 ?x74 (+ n 1) (+ n 1)) (* 9 ?x71) (* 2 ?x74))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let (($x108 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 (+ n 1)) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 (- ?x101 (* 3 ?x71 ?x71 ?x102 ?x102))) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x109 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x108)))
 (rewrite (= $x109 $x842)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x111 (asserted $x110)))
 (let ((@x129 (mp (mp @x111 (quant-intro (proof-bind ?x741) (= $x110 $x739)) $x739) (rewrite (= $x739 $x739)) $x739)))
 (let ((@x585 (mp (mp @x129 (quant-intro (proof-bind ?x834) (= $x739 $x180)) $x180) (quant-intro (proof-bind ?x584) (= $x180 $x569)) $x569)))
 (let ((@x863 (mp (mp~ @x585 (sk (~ $x569 $x477)) $x477) (rewrite (= $x477 $x377)) $x377)))
 (let ((@x732 (and-elim @x863 $x873)))
 (let ((@x846 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x873) $x816)) @x732 $x816)))
 (let (($x839 (>= ?x859 0)))
 (let ((@x488 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x873) $x839)) @x732 $x839)))
 (let (($x410 (<= ?x517 6)))
 (let ((@x805 (and-elim @x863 $x560)))
 (let ((@x489 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x486 $x410)) @x805 $x410)))
 (let (($x854 (>= ?x517 6)))
 (let ((@x801 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x486 $x854)) @x805 $x854)))
 (let (($x430 (<= ?x874 0)))
 (let ((@x735 (and-elim @x863 $x423)))
 (let ((@x396 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x423) $x430)) @x735 $x430)))
 (let (($x446 (>= ?x874 0)))
 (let ((@x397 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x423) $x446)) @x735 $x446)))
 (let (($x387 (<= ?x785 (- 2))))
 (let (($x346 (>= n!0 0)))
 (let (($x439 (not $x346)))
 (let (($x394 (<= m!1 6)))
 (let (($x146 (<= n!0 0)))
 (let (($x982 (<= m!1 12)))
 (let (($x987 (>= n!0 2)))
 (let (($x988 (not $x987)))
 (let (($x1060 (>= ?x158 18)))
 (let (($x1105 (not $x1060)))
 (let (($x126 (>= c!3 4)))
 (let (($x1166 (not $x126)))
 (let (($x405 (<= ?x456 4)))
 (let ((@x317 (and-elim @x863 $x742)))
 (let ((@x707 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x405)) @x317 $x405)))
 (let (($x429 (>= ?x456 4)))
 (let ((@x372 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x429)) @x317 $x429)))
 (let ((@x1229 ((_ th-lemma arith) (hypothesis $x126) @x488 @x846 @x488 @x846 @x801 @x489 @x488 @x846 @x397 @x396 @x488 @x846 @x488 @x846 @x372 @x707 false)))
 (let ((@x1167 (hypothesis $x1166)))
 (let ((@x1172 ((_ th-lemma arith) (hypothesis $x1060) @x1167 @x1167 @x397 @x396 @x397 @x396 @x488 @x846 @x397 @x396 @x372 @x707 @x397 @x396 @x488 @x846 @x397 @x396 false)))
 (let ((@x1107 (hypothesis $x987)))
 (let (($x723 (>= ?x831 0)))
 (let ((@x759 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x723)) false) $x723)))
 (let ((@x1112 ((_ th-lemma arith farkas -2 -2/3 1/3 -1/3 -1/3 -1/3 -1/3 -8/3 1) @x1107 @x488 @x396 @x759 @x488 @x1107 @x1107 @x1107 (hypothesis $x1105) false)))
 (let ((@x437 (unit-resolution (lemma @x1112 (or $x1060 $x988)) (unit-resolution (lemma @x1172 (or $x126 $x1105)) (lemma @x1229 $x1166) $x1105) $x988)))
 (let ((@x1062 (lemma ((_ th-lemma arith farkas -1/6 1/6 1) (hypothesis (not $x982)) @x489 (hypothesis $x988) false) (or $x987 $x982))))
 (let ((@x989 (hypothesis $x982)))
 (let (($x845 (not $x146)))
 (let ((@x907 (hypothesis $x845)))
 (let ((@x990 ((_ th-lemma arith farkas 5/3 5/3 5/3 5/9 4/9 -4/9 1 1 1 -1/9 -1/9 -1/9 -1 1 1 1) @x907 @x989 @x801 @x846 @x989 @x801 @x907 @x989 @x801 @x907 @x488 @x372 @x397 @x907 @x989 @x801 false)))
 (let ((@x378 (unit-resolution (lemma @x990 (or (not $x982) $x146)) (unit-resolution @x1062 @x437 $x982) $x146)))
 (let ((@x507 (lemma ((_ th-lemma arith farkas -1 -6 1) @x489 (hypothesis $x146) (hypothesis (not $x394)) false) (or $x845 $x394))))
 (let (($x316 (>= ?x822 0)))
 (let ((@x434 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x316)) false) $x316)))
 (let ((@x393 (hypothesis $x394)))
 (let ((@x274 (hypothesis $x346)))
 (let (($x365 (>= ?x158 1)))
 (let ((@x280 (hypothesis (not $x365))))
 (let (($x700 (>= k!2 0)))
 (let ((@x277 (lemma ((_ th-lemma arith farkas 1/3 1 -1/3 1) @x488 @x274 (hypothesis (not $x700)) @x759 false) (or $x700 $x439))))
 (let ((@x281 (unit-resolution @x277 @x274 $x700)))
 (let ((@x287 (lemma ((_ th-lemma arith farkas -2 1 13/9 1/9 1/9 1 1 1) @x280 @x274 @x281 @x434 @x372 @x281 @x280 @x274 false) (or $x365 $x439))))
 (let ((@x164 ((_ th-lemma arith farkas 2/3 1 2/3 3/2 9 9 9 13/2 13/2 13/2 13/2 1) @x393 @x372 @x801 (unit-resolution @x287 @x274 $x365) @x274 @x393 @x801 @x397 @x274 @x393 @x801 @x434 false)))
 (let ((@x877 (unit-resolution (lemma @x164 (or (not $x394) $x439)) (unit-resolution @x507 @x378 $x394) $x439)))
 (let ((@x808 (hypothesis $x439)))
 (let (($x414 (>= (+ k!2 (* (- 2) ?x831) ?x490) 1)))
 (let (($x472 (not $x414)))
 (let ((@x467 (hypothesis (not $x387))))
 (let ((@x471 ((_ th-lemma arith) @x467 @x396 (hypothesis $x414) @x846 @x808 @x801 @x488 @x846 @x488 @x846 @x488 @x846 @x397 @x396 @x397 @x396 @x372 @x707 @x488 @x846 false)))
 (let (($x231 (>= (+ ?x123 (* (- 2) c!3) (* (- 2) ?x831) (* (- 1) n!0)) 1)))
 (let (($x340 (not $x231)))
 (let ((@x339 ((_ th-lemma arith) (hypothesis $x231) @x808 @x488 @x846 @x488 @x846 @x397 @x396 @x488 @x846 @x801 @x489 @x488 @x846 @x397 @x396 @x397 @x396 @x372 @x707 @x488 @x846 false)))
 (let ((@x912 ((_ th-lemma arith farkas 1 3 -2 -2 1 1 1) @x808 (unit-resolution (lemma @x339 (or $x340 $x346)) @x808 $x340) @x397 @x488 (unit-resolution (lemma @x471 (or $x472 $x387 $x346)) @x808 @x467 $x472) @x488 @x808 false)))
 (let (($x835 (>= ?x785 (- 2))))
 (let ((@x223 ((_ th-lemma arith) (hypothesis (not $x835)) @x801 @x489 @x397 @x396 @x488 @x846 false)))
 ((_ th-lemma arith) @x488 @x846 @x488 @x846 @x397 @x396 @x397 @x396 (lemma @x223 $x835) (unit-resolution (lemma @x912 (or $x346 $x387)) @x877 $x387) @x397 @x396 @x801 @x489 @x488 @x846 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 38
 :arith-assert-diseq        9
 :arith-assert-lower        412
 :arith-assert-upper        199
 :arith-bound-prop          3
 :arith-branch-var          20
 :arith-conflicts           26
 :arith-eq-adapter          9
 :arith-fixed-eqs           46
 :arith-gcd-tests           190
 :arith-gomory-cuts         12
 :arith-grobner             16
 :arith-ineq-splits         20
 :arith-max-min             2018
 :arith-nonlinear-bounds    204
 :arith-nonlinear-horner    181
 :arith-num-rows            21
 :arith-offset-eqs          4
 :arith-patches             40
 :arith-patches_succ        1
 :arith-pivots              279
 :arith-pseudo-nonlinear    53
 :arith-row-summations      2055
 :arith-tableau-max-columns 69
 :arith-tableau-max-rows    21
 :conflicts                 30
 :decisions                 152
 :del-clause                63
 :final-checks              86
 :max-memory                3.82
 :memory                    3.23
 :minimized-lits            2
 :mk-bool-var               133
 :mk-clause                 78
 :num-allocs                2625042
 :num-checks                1
 :propagations              123
 :rlimit-count              110345
 :time                      0.04
 :total-time                0.05)
