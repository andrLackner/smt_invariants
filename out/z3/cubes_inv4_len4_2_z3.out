unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x499 (* (- 9) n!0)))
 (let ((?x829 (* n!0 n!0)))
 (let ((?x480 (* (- 3) ?x829)))
 (let ((?x485 (+ m!1 ?x480 k!2 ?x499)))
 (let (($x395 (<= ?x485 6)))
 (let ((?x445 (+ m!1 (* (- 6) n!0))))
 (let (($x362 (<= ?x445 6)))
 (let (($x192 (= ?x445 6)))
 (let ((?x202 (* 2 n!0)))
 (let ((?x193 (* (- 3) c!3)))
 (let ((?x943 (* m!1 n!0)))
 (let ((?x821 (* k!2 n!0)))
 (let ((?x199 (+ ?x821 (* (- 3) k!2) ?x943 ?x193 ?x202)))
 (let ((?x338 (* 27 c!3)))
 (let ((?x654 (* 32 k!2)))
 (let ((?x938 (* m!1 m!1)))
 (let ((?x939 (* (- 1) ?x938)))
 (let ((?x784 (* 9 ?x821)))
 (let ((?x219 (* k!2 k!2)))
 (let ((?x220 (* (- 1) ?x219)))
 (let ((?x783 (* 5 m!1)))
 (let ((?x164 (* c!3 n!0)))
 (let ((?x221 (* 9 ?x164)))
 (let ((?x130 (+ ?x221 ?x783 ?x220 (* (- 2) (* m!1 k!2)) ?x784 ?x939 ?x654 ?x338 ?x499)))
 (let (($x135 (not $x192)))
 (let ((?x956 (* 4 c!3)))
 (let ((?x957 (* 4 k!2)))
 (let ((?x978 (* 42 ?x938)))
 (let ((?x971 (* 54 (* k!2 k!2 k!2))))
 (let ((?x959 (* 54 (* k!2 k!2 k!2 n!0))))
 (let ((?x534 (* 8 (* c!3 c!3))))
 (let ((?x421 (* 7 (* m!1 m!1 m!1))))
 (let ((?x444 (* 7 (* m!1 m!1 m!1 n!0))))
 (let ((?x321 (* 42 (* k!2 k!2 n!0))))
 (let ((?x293 (* 42 (* m!1 m!1 n!0))))
 (let ((?x861 (* 50 ?x219)))
 (let ((?x230 (+ (* 18 (* m!1 k!2 k!2 c!3)) (* 54 (* k!2 c!3 c!3)) (* 9 (* m!1 k!2 c!3 c!3 n!0)) (* 54 (* m!1 c!3 c!3 n!0)) ?x861 (* 9 (* m!1 k!2 c!3 c!3)) (* 108 (* k!2 k!2 c!3 n!0)) ?x293 (* 9 (* m!1 m!1 c!3 c!3)) (* 18 (* m!1 m!1 k!2 c!3)) (* 9 (* m!1 m!1 k!2 k!2 n!0)) ?x321 (* 84 (* m!1 k!2 n!0)) ?x444 (* 108 (* m!1 k!2 c!3 n!0)) (* 84 (* m!1 k!2)) (* 54 (* k!2 c!3 c!3 n!0)) (* 108 (* k!2 k!2 c!3)) (* 9 (* m!1 k!2 k!2 k!2)) ?x421 (* 9 (* m!1 m!1 k!2 k!2)) (* 14 (* m!1 m!1 k!2)) ?x534 (* 61 (* m!1 k!2 k!2 n!0)) (* 16 (* k!2 c!3)) (* 18 (* m!1 m!1 k!2 c!3 n!0)) (* 14 (* m!1 m!1 k!2 n!0)) (* 61 (* m!1 k!2 k!2)) (* 108 (* m!1 k!2 c!3)) (* 18 (* m!1 k!2 k!2 c!3 n!0)) (* 9 (* m!1 k!2 k!2 k!2 n!0)) (* 9 (* m!1 m!1 c!3 c!3 n!0)) (* 54 (* m!1 c!3 c!3)) ?x959 ?x971 ?x978 ?x957 ?x956)))
 (let ((?x953 (* 9 n!0)))
 (let ((?x924 (* (- 1) k!2)))
 (let ((?x910 (* 3 ?x829)))
 (let ((?x952 (* (- 1) m!1)))
 (let (($x251 (or (not (= (* (+ 6 ?x952 ?x910 ?x924 ?x953) ?x230) 0)) $x135 (not (= ?x130 13)) (not (= ?x485 6)) (not (= ?x199 (- 2))))))
 (let ((?x360 (+ ?x910 ?x924 (* 3 n!0))))
 (let (($x414 (= ?x360 0)))
 (let ((?x400 (+ ?x821 ?x924 ?x193 ?x202)))
 (let (($x203 (= ?x400 0)))
 (let ((?x334 (* 18 c!3)))
 (let ((?x248 (* 5 k!2)))
 (let ((?x664 (+ ?x221 ?x220 ?x248 ?x334 ?x499)))
 (let (($x446 (= ?x664 4)))
 (let (($x410 (and $x192 $x446 $x203 $x414 $x251)))
 (let ((?x296 (+ ?x956 ?x957 ?x861 ?x959 (* 108 (* c!3 k!2 k!2)) (* 9 (* k!2 k!2 k!2 m!1)) (* 54 (* c!3 c!3 k!2 n!0)) (* 9 (* c!3 c!3 k!2 m!1)) (* 9 (* k!2 k!2 m!1 m!1)) (* 108 (* c!3 k!2 k!2 n!0)) (* 18 (* c!3 k!2 k!2 m!1)) ?x971 (* 54 (* c!3 c!3 m!1 n!0)) (* 108 (* c!3 k!2 m!1 n!0)) (* 84 (* k!2 m!1)) ?x978 (* 9 (* c!3 c!3 m!1 m!1)) (* 18 (* c!3 k!2 m!1 m!1)) (* 9 (* c!3 c!3 k!2 m!1 n!0)) (* 18 (* c!3 k!2 k!2 m!1 n!0)) (* 9 (* k!2 k!2 k!2 m!1 n!0)) (* 9 (* c!3 c!3 m!1 m!1 n!0)) (* 18 (* c!3 k!2 m!1 m!1 n!0)) (* 9 (* k!2 k!2 m!1 m!1 n!0)) ?x534 (* 16 (* c!3 k!2)) (* 61 (* k!2 k!2 m!1 n!0)) (* 14 (* k!2 m!1 m!1 n!0)) ?x444 (* 108 (* c!3 k!2 m!1)) (* 54 (* c!3 c!3 k!2)) (* 61 (* k!2 k!2 m!1)) (* 54 (* c!3 c!3 m!1)) ?x421 ?x321 (* 84 (* k!2 m!1 n!0)) (* 14 (* k!2 m!1 m!1)) ?x293)))
 (let ((?x803 (* (- 1) ?x821)))
 (let ((?x820 (* (- 2) n!0)))
 (let ((?x804 (* 3 c!3)))
 (let ((?x940 (+ ?x338 ?x654 ?x783 ?x499 ?x220 ?x784 ?x221 (* (- 2) (* k!2 m!1)) ?x939)))
 (let (($x299 (or $x135 (not (= ?x940 13)) (not (= (+ ?x804 (* 3 k!2) ?x820 ?x803 (* (- 1) ?x943)) 2)) (not (= (+ k!2 m!1 ?x499 ?x480) 6)) (not (= (* (+ 6 ?x924 ?x952 ?x953 ?x910) ?x296) 0)))))
 (let (($x528 (and $x192 (= (+ ?x334 ?x248 ?x499 ?x220 ?x221) 4) (= (+ ?x804 k!2 ?x820 ?x803) 0) (= (+ k!2 (* (- 3) n!0) ?x480) 0) $x299)))
 (let (($x539 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x706 (* 7 (* m m m n))))
 (let ((?x658 (* 8 (* c c))))
 (let ((?x646 (* 9 (* k k m m n))))
 (let ((?x640 (* 9 (* c c m m n))))
 (let ((?x638 (* 9 (* k k k m n))))
 (let ((?x632 (* 9 (* c c k m n))))
 (let ((?x653 (* 4 k)))
 (let ((?x652 (* 4 c)))
 (let ((?x990 (+ ?x652 ?x653 (* 50 (* k k)) (* 54 (* k k k n)) (* 108 (* c k k)) (* 9 (* k k k m)) (* 54 (* c c k n)) (* 9 (* c c k m)) (* 9 (* k k m m)) (* 108 (* c k k n)) (* 18 (* c k k m)) (* 54 (* k k k)) (* 54 (* c c m n)) (* 108 (* c k m n)) (* 84 (* k m)) (* 42 (* m m)) (* 9 (* c c m m)) (* 18 (* c k m m)) ?x632 (* 18 (* c k k m n)) ?x638 ?x640 (* 18 (* c k m m n)) ?x646 ?x658 (* 16 (* c k)) (* 61 (* k k m n)) (* 14 (* k m m n)) ?x706 (* 108 (* c k m)) (* 54 (* c c k)) (* 61 (* k k m)) (* 54 (* c c m)) (* 7 (* m m m)) (* 42 (* k k n)) (* 84 (* k m n)) (* 14 (* k m m)) (* 42 (* m m n)))))
 (let ((?x273 (* n n)))
 (let ((?x274 (* 3 ?x273)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 1) m)))
 (let ((?x241 (* (- 1) k)))
 (let ((?x52 (* k n)))
 (let ((?x266 (* (- 1) ?x52)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x263 (* 3 c)))
 (let (($x548 (= (+ ?x263 (* 3 k) ?x265 ?x266 (* (- 1) (* m n))) 2)))
 (let (($x556 (not $x548)))
 (let ((?x163 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x526 (+ (* 27 c) (* 32 k) ?x438 ?x225 ?x226 (* 9 ?x52) ?x163 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x530 (not (= ?x526 13))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let (($x918 (or $x364 $x530 $x556 (not (= (+ k m ?x225 (* (- 3) ?x273)) 6)) (not (= (* (+ 6 ?x241 ?x479 ?x45 ?x274) ?x990) 0)))))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) ?x273)) 0)))
 (let (($x268 (= (+ ?x263 k ?x265 ?x266) 0)))
 (let (($x223 (= (+ (* 18 c) (* 5 k) ?x225 ?x226 ?x163) 4)))
 (and $x146 $x223 $x268 $x304 $x918)))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x567 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x265 (* (- 2) n)))
 (let ((?x653 (* 4 k)))
 (let ((?x263 (* 3 c)))
 (let (($x114 (= (+ ?x263 ?x653 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x61 (* 3 n)))
 (let ((?x479 (* (- 1) m)))
 (let ((?x241 (* (- 1) k)))
 (let ((?x513 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x283 (not (= (+ ?x513 ?x241 ?x479 ?x61) (- 3)))))
 (let ((?x238 (* 7 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x652 (* 4 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x743 (+ 6 m)))
 (let ((?x443 (+ 1 n)))
 (let ((?x246 (+ (* 9 (* ?x443 ?x743 ?x74 ?x71 ?x71)) ?x652 ?x653 (* 8 (* ?x71 ?x71)) ?x238)))
 (let (($x255 (not (= (* (+ 3 ?x513 ?x241 ?x479 ?x61) ?x246) 0))))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x335 (+ ?x37 (* 23 k) (* 9 (* ?x443 ?x71)) ?x438 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x519 (= (+ (* 3 (* n n)) ?x241 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x146 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x225 ?x226) 4) (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x519 (or (not (= ?x335 13)) $x255 $x283 $x364 (not $x114)))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x543 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x706 (* 7 (* m m m n))))
 (let ((?x658 (* 8 (* c c))))
 (let ((?x646 (* 9 (* k k m m n))))
 (let ((?x640 (* 9 (* c c m m n))))
 (let ((?x638 (* 9 (* k k k m n))))
 (let ((?x632 (* 9 (* c c k m n))))
 (let ((?x653 (* 4 k)))
 (let ((?x652 (* 4 c)))
 (let ((?x990 (+ ?x652 ?x653 (* 50 (* k k)) (* 54 (* k k k n)) (* 108 (* c k k)) (* 9 (* k k k m)) (* 54 (* c c k n)) (* 9 (* c c k m)) (* 9 (* k k m m)) (* 108 (* c k k n)) (* 18 (* c k k m)) (* 54 (* k k k)) (* 54 (* c c m n)) (* 108 (* c k m n)) (* 84 (* k m)) (* 42 (* m m)) (* 9 (* c c m m)) (* 18 (* c k m m)) ?x632 (* 18 (* c k k m n)) ?x638 ?x640 (* 18 (* c k m m n)) ?x646 ?x658 (* 16 (* c k)) (* 61 (* k k m n)) (* 14 (* k m m n)) ?x706 (* 108 (* c k m)) (* 54 (* c c k)) (* 61 (* k k m)) (* 54 (* c c m)) (* 7 (* m m m)) (* 42 (* k k n)) (* 84 (* k m n)) (* 14 (* k m m)) (* 42 (* m m n)))))
 (let ((?x273 (* n n)))
 (let ((?x274 (* 3 ?x273)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 1) m)))
 (let ((?x241 (* (- 1) k)))
 (let ((?x52 (* k n)))
 (let ((?x266 (* (- 1) ?x52)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x263 (* 3 c)))
 (let (($x548 (= (+ ?x263 (* 3 k) ?x265 ?x266 (* (- 1) (* m n))) 2)))
 (let (($x556 (not $x548)))
 (let ((?x163 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x526 (+ (* 27 c) (* 32 k) ?x438 ?x225 ?x226 (* 9 ?x52) ?x163 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x530 (not (= ?x526 13))))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let (($x918 (or $x364 $x530 $x556 (not (= (+ k m ?x225 (* (- 3) ?x273)) 6)) (not (= (* (+ 6 ?x241 ?x479 ?x45 ?x274) ?x990) 0)))))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) ?x273)) 0)))
 (let (($x268 (= (+ ?x263 k ?x265 ?x266) 0)))
 (let (($x223 (= (+ (* 18 c) (* 5 k) ?x225 ?x226 ?x163) 4)))
 (let (($x935 (and $x146 $x223 $x268 $x304 $x918)))
 (let (($x114 (= (+ ?x263 ?x653 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x513 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x283 (not (= (+ ?x513 ?x241 ?x479 ?x61) (- 3)))))
 (let ((?x238 (* 7 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x743 (+ 6 m)))
 (let ((?x443 (+ 1 n)))
 (let ((?x246 (+ (* 9 (* ?x443 ?x743 ?x74 ?x71 ?x71)) ?x652 ?x653 (* 8 (* ?x71 ?x71)) ?x238)))
 (let (($x255 (not (= (* (+ 3 ?x513 ?x241 ?x479 ?x61) ?x246) 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x335 (+ ?x37 (* 23 k) (* 9 (* ?x443 ?x71)) ?x438 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x519 (= (+ ?x274 ?x241 ?x61) 0)))
 (let (($x357 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x225 ?x226) 4)))
 (let (($x280 (and $x146 $x357 (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x519 (or (not (= ?x335 13)) $x255 $x283 $x364 (not $x114)))))
 (rewrite (= $x280 $x935)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x397 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x462 (* (- 18) c)))
 (let ((?x184 (+ ?x462 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x61 (* 3 n)))
 (let ((?x479 (* (- 1) m)))
 (let ((?x241 (* (- 1) k)))
 (let ((?x513 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x283 (not (= (+ ?x513 ?x241 ?x479 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x443 (+ 1 n)))
 (let ((?x491 (* ?x443 ?x74)))
 (let ((?x324 (* (- 3) c)))
 (let ((?x653 (* 4 k)))
 (let ((?x652 (* 4 c)))
 (let ((?x246 (+ (* 9 (* ?x443 (+ 6 m) ?x74 (+ c k) (+ c k))) ?x652 ?x653 (* 8 (* (+ c k) (+ c k))) (* 7 (* ?x443 (+ 6 m) ?x74 ?x74)))))
 (let (($x255 (not (= (* (+ 3 ?x513 ?x241 ?x479 ?x61) ?x246) 0))))
 (let (($x292 (or $x255 (not (= (+ ?x324 (* (- 4) k) ?x491 ?x479 ?x56) (- 2))) $x283 (not (= ?x184 (- 13))) $x364)))
 (let (($x519 (= (+ (* 3 (* n n)) ?x241 ?x61) 0)))
 (let (($x316 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x146 $x316 (= (+ ?x324 (* n k) ?x241 ?x56) 0) $x519 $x292)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x353 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x265 (* (- 2) n)))
 (let ((?x653 (* 4 k)))
 (let ((?x263 (* 3 c)))
 (let (($x114 (= (+ ?x263 ?x653 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x61 (* 3 n)))
 (let ((?x479 (* (- 1) m)))
 (let ((?x241 (* (- 1) k)))
 (let ((?x513 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x283 (not (= (+ ?x513 ?x241 ?x479 ?x61) (- 3)))))
 (let ((?x238 (* 7 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x652 (* 4 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x743 (+ 6 m)))
 (let ((?x443 (+ 1 n)))
 (let ((?x246 (+ (* 9 (* ?x443 ?x743 ?x74 ?x71 ?x71)) ?x652 ?x653 (* 8 (* ?x71 ?x71)) ?x238)))
 (let (($x255 (not (= (* (+ 3 ?x513 ?x241 ?x479 ?x61) ?x246) 0))))
 (let ((?x225 (* (- 9) n)))
 (let ((?x438 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x335 (+ ?x37 (* 23 k) (* 9 (* ?x443 ?x71)) ?x438 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x519 (= (+ (* 3 (* n n)) ?x241 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x280 (and $x146 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x225 ?x226) 4) (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x519 (or (not (= ?x335 13)) $x255 $x283 $x364 (not $x114)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x462 (* (- 18) c)))
 (let ((?x184 (+ ?x462 (* (- 23) k) (* (- 9) (* ?x443 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x491 (* ?x443 ?x74)))
 (let ((?x324 (* (- 3) c)))
 (let (($x292 (or $x255 (not (= (+ ?x324 (* (- 4) k) ?x491 ?x479 ?x56) (- 2))) $x283 (not (= ?x184 (- 13))) $x364)))
 (let (($x316 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x300 (and $x146 $x316 (= (+ ?x324 (* n k) ?x241 ?x56) 0) $x519 $x292)))
 (rewrite (= $x300 $x280)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x111 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x98 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x105 (+ (* 9 (+ c k) (+ c k) ?x74 ?x98 ?x66) (* 4 (+ c k)) (* 8 (+ c k) (+ c k)) (* 7 ?x74 ?x74 ?x98 ?x66))))
 (let ((?x95 (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) ?x66)) (* 5 ?x74))))
 (let (($x109 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x95 ?x105) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x109))))))))))))))) :qid k!38))
 ))
 (let ((?x571 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x462 (* (- 18) c)))
 (let ((?x184 (+ ?x462 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x61 (* 3 n)))
 (let ((?x479 (* (- 1) m)))
 (let ((?x241 (* (- 1) k)))
 (let ((?x513 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x283 (not (= (+ ?x513 ?x241 ?x479 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x443 (+ 1 n)))
 (let ((?x491 (* ?x443 ?x74)))
 (let ((?x324 (* (- 3) c)))
 (let ((?x653 (* 4 k)))
 (let ((?x652 (* 4 c)))
 (let ((?x246 (+ (* 9 (* ?x443 (+ 6 m) ?x74 (+ c k) (+ c k))) ?x652 ?x653 (* 8 (* (+ c k) (+ c k))) (* 7 (* ?x443 (+ 6 m) ?x74 ?x74)))))
 (let (($x255 (not (= (* (+ 3 ?x513 ?x241 ?x479 ?x61) ?x246) 0))))
 (let (($x292 (or $x255 (not (= (+ ?x324 (* (- 4) k) ?x491 ?x479 ?x56) (- 2))) $x283 (not (= ?x184 (- 13))) $x364)))
 (let (($x519 (= (+ (* 3 (* n n)) ?x241 ?x61) 0)))
 (let (($x316 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x300 (and $x146 $x316 (= (+ ?x324 (* n k) ?x241 ?x56) 0) $x519 $x292)))
 (let ((?x66 (+ n 1)))
 (let ((?x98 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x105 (+ (* 9 ?x71 ?x71 ?x74 ?x98 ?x66) (* 4 ?x71) (* 8 ?x71 ?x71) (* 7 ?x74 ?x74 ?x98 ?x66))))
 (let ((?x95 (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x109 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x95 ?x105) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x110 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x109)))
 (rewrite (= $x110 $x300)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x112 (asserted $x111)))
 (let ((@x477 (mp (mp @x112 (quant-intro (proof-bind ?x571) (= $x111 $x397)) $x397) (rewrite (= $x397 $x397)) $x397)))
 (let ((@x374 (mp (mp @x477 (quant-intro (proof-bind ?x353) (= $x397 $x567)) $x567) (quant-intro (proof-bind ?x543) (= $x567 $x539)) $x539)))
 (let ((@x553 (mp (mp~ @x374 (sk (~ $x539 $x528)) $x528) (rewrite (= $x528 $x410)) $x410)))
 (let ((@x312 (and-elim @x553 $x192)))
 (let ((@x201 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x135 $x362)) @x312 $x362)))
 (let (($x407 (>= ?x360 0)))
 (let ((@x311 (and-elim @x553 $x414)))
 (let ((@x157 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or $x395 (not $x407) (not $x362))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x414) $x407)) @x311 $x407) @x201 $x395)))
 (let (($x442 (>= ?x485 6)))
 (let (($x136 (<= ?x360 0)))
 (let (($x361 (>= ?x445 6)))
 (let ((@x470 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x135 $x361)) @x312 $x361)))
 (let ((@x471 ((_ th-lemma arith farkas 1 -1 1) (hypothesis (not $x442)) @x470 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x414) $x136)) @x311 $x136) false)))
 (let ((@x667 (lemma @x471 $x442)))
 (let (($x240 (<= ?x199 (- 2))))
 (let (($x731 (<= k!2 3)))
 (let (($x774 (not $x731)))
 (let (($x878 (>= k!2 1)))
 (let (($x1158 (<= n!0 1)))
 (let (($x359 (<= ?x664 4)))
 (let ((@x456 (and-elim @x553 $x446)))
 (let ((@x800 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x446) $x359)) @x456 $x359)))
 (let (($x320 (>= ?x664 4)))
 (let ((@x373 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x446) $x320)) @x456 $x320)))
 (let (($x409 (<= ?x400 0)))
 (let ((@x428 (and-elim @x553 $x203)))
 (let ((@x170 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x203) $x409)) @x428 $x409)))
 (let (($x341 (>= ?x400 0)))
 (let ((@x507 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x203) $x341)) @x428 $x341)))
 (let ((@x1309 ((_ th-lemma arith) (hypothesis (not $x1158)) @x507 @x170 @x373 @x800 @x507 @x170 @x507 @x170 @x373 @x800 @x373 @x800 @x470 @x201 @x667 @x157 @x507 @x170 @x373 @x800 false)))
 (let ((@x1313 (lemma @x1309 $x1158)))
 (let (($x323 (>= c!3 0)))
 (let (($x1006 (>= (+ m!1 (* (- 5) n!0)) 6)))
 (let ((@x757 (hypothesis (not $x1006))))
 (let (($x805 (>= n!0 (- 1))))
 (let ((@x140 ((_ th-lemma arith) (hypothesis (not $x805)) @x667 @x157 @x470 @x201 @x470 @x201 @x667 @x157 @x470 @x201 @x470 @x201 @x507 @x170 @x373 @x800 @x667 @x157 false)))
 (let ((@x142 (lemma @x140 $x805)))
 (let ((@x714 ((_ th-lemma arith) @x142 @x470 @x757 @x470 @x142 @x757 @x470 @x142 @x470 @x757 @x470 @x201 @x470 @x142 @x757 @x470 @x507 @x170 @x470 @x142 @x757 @x470 @x373 @x800 @x470 @x201 @x507 @x170 @x470 @x201 @x507 @x170 @x142 @x470 @x757 @x470 @x201 @x507 @x170 @x142 @x470 @x757 @x667 @x157 @x470 @x142 @x757 @x470 @x142 @x470 @x757 false)))
 (let ((@x745 (lemma @x714 $x1006)))
 (let (($x379 (>= ?x219 0)))
 (let ((@x786 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x379)) false) $x379)))
 (let (($x382 (not $x323)))
 (let ((@x1067 (hypothesis $x382)))
 (let (($x907 (>= ?x164 1)))
 (let (($x1052 (not $x907)))
 (let ((@x1132 (lemma ((_ th-lemma arith farkas -1 -1 -1 1) @x201 (hypothesis $x907) @x1067 @x745 false) (or $x1052 $x323))))
 (let ((@x189 ((_ th-lemma arith) @x1067 (unit-resolution @x1132 @x1067 $x1052) @x1067 @x373 @x786 @x201 @x745 @x373 @x800 @x470 @x201 @x373 @x800 @x470 @x201 @x667 @x157 @x507 @x170 @x373 @x800 @x373 @x800 false)))
 (let ((@x854 (lemma @x189 $x323)))
 (let (($x187 (not $x878)))
 (let ((@x1284 (hypothesis $x187)))
 (let (($x482 (>= k!2 0)))
 (let ((@x319 (hypothesis (not $x482))))
 (let (($x722 (>= n!0 0)))
 (let ((@x147 (hypothesis (not $x722))))
 (let ((@x452 (unit-resolution (lemma ((_ th-lemma arith) @x147 @x201 @x147 @x319 @x667 false) (or $x722 $x482)) @x319 $x722)))
 (let ((@x118 (lemma ((_ th-lemma arith farkas -3 -1 1 1) @x452 @x667 @x201 @x319 false) $x482)))
 (let ((@x1300 ((_ th-lemma arith farkas 2 2 -2 -1/3 -1/3 -1/3 -4/3 1/3 -7/6 3/2 -3/2 1) @x118 @x1284 @x507 @x118 @x373 @x786 @x118 @x800 @x1284 @x170 @x854 @x1313 false)))
 (let ((@x1051 (hypothesis (not $x240))))
 (let ((@x877 (hypothesis $x731)))
 (let ((@x862 (hypothesis $x878)))
 (let ((@x748 ((_ th-lemma arith farkas 16/3 16/3 16/3 16/3 16/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 -5/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 3 3 3 1) @x170 @x1051 @x862 @x201 @x745 @x201 @x667 @x170 @x1051 @x862 @x745 @x877 @x170 @x800 @x201 @x667 @x170 @x1051 @x862 @x745 @x877 @x201 @x667 @x170 @x1051 @x862 @x745 @x877 @x854 @x201 @x745 @x854 false)))
 (let ((@x1317 (unit-resolution (lemma @x748 (or $x774 $x240 $x187)) @x1051 (lemma @x1300 $x878) $x774)))
 (let (($x809 (<= k!2 1)))
 (let (($x769 (<= k!2 0)))
 (let ((@x1241 (hypothesis $x1158)))
 (let (($x354 (<= c!3 0)))
 (let (($x751 (not $x354)))
 (let ((@x791 (hypothesis $x354)))
 (let ((@x573 (hypothesis $x323)))
 (let ((@x708 ((_ th-lemma arith) @x507 @x170 @x573 @x791 @x573 @x791 @x373 @x800 @x667 @x157 @x470 @x201 false)))
 (let ((@x1259 ((_ th-lemma arith farkas -3 -1 2 1 1 1 1 1 1) (unit-resolution (lemma @x708 (or $x382 $x751)) @x854 $x751) @x507 @x1241 @x170 @x1051 (hypothesis (not $x769)) @x201 @x745 @x1241 false)))
 (let ((@x1136 (unit-resolution (lemma @x1259 (or (not $x1158) $x240 $x769)) @x1313 (or $x240 $x769))))
 (let ((@x143 (unit-resolution ((_ th-lemma arith farkas 1 1) (or (not $x769) $x809)) (unit-resolution @x1136 @x1051 $x769) $x809)))
 (let ((@x1326 (lemma (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x731 (not $x809))) @x143 @x1317 false) $x240)))
 (let (($x244 (>= ?x199 (- 2))))
 (let ((@x879 ((_ th-lemma arith) (hypothesis (not $x244)) @x507 @x170 @x667 @x157 @x470 @x201 @x470 @x201 @x667 @x157 false)))
 ((_ th-lemma arith) @x470 @x201 @x507 @x170 (lemma @x879 $x244) @x1326 @x470 @x201 @x470 @x201 @x667 @x157 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 114
 :arith-assert-diseq        25
 :arith-assert-lower        1117
 :arith-assert-upper        461
 :arith-bound-prop          11
 :arith-branch-var          18
 :arith-conflicts           34
 :arith-eq-adapter          11
 :arith-fixed-eqs           144
 :arith-gcd-tests           173
 :arith-gomory-cuts         11
 :arith-grobner             28
 :arith-ineq-splits         18
 :arith-max-min             4825
 :arith-nonlinear-bounds    759
 :arith-nonlinear-horner    251
 :arith-num-rows            22
 :arith-offset-eqs          4
 :arith-patches             50
 :arith-patches_succ        14
 :arith-pivots              439
 :arith-pseudo-nonlinear    192
 :arith-row-summations      1548
 :arith-tableau-max-columns 100
 :arith-tableau-max-rows    22
 :conflicts                 41
 :decisions                 220
 :del-clause                70
 :final-checks              111
 :max-memory                4.00
 :memory                    3.29
 :minimized-lits            2
 :mk-bool-var               168
 :mk-clause                 100
 :num-allocs                3537148
 :num-checks                1
 :propagations              115
 :rlimit-count              151742
 :time                      0.05
 :total-time                0.06)
