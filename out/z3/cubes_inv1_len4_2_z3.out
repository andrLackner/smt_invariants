unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x411 (* (- 1) k!2)))
 (let ((?x190 (* n!0 n!0)))
 (let ((?x316 (* 3 ?x190)))
 (let ((?x659 (+ ?x316 ?x411 (* 3 n!0))))
 (let (($x443 (<= ?x659 0)))
 (let (($x402 (= ?x659 0)))
 (let ((?x118 (* 4 c!3)))
 (let ((?x120 (* 4 k!2)))
 (let ((?x743 (* 42 (* m!1 m!1 n!0))))
 (let ((?x737 (* 7 (* m!1 m!1 m!1))))
 (let ((?x734 (* 7 (* m!1 m!1 m!1 n!0))))
 (let ((?x704 (* 54 (* k!2 k!2 k!2 n!0))))
 (let ((?x238 (* 8 (* c!3 c!3))))
 (let ((?x215 (* m!1 m!1)))
 (let ((?x701 (* 42 ?x215)))
 (let ((?x167 (* k!2 k!2)))
 (let ((?x376 (* 50 ?x167)))
 (let ((?x658 (* 54 (* k!2 k!2 k!2))))
 (let ((?x257 (* 42 (* k!2 k!2 n!0))))
 (let ((?x194 (+ (* 108 (* m!1 k!2 c!3 n!0)) ?x257 (* 16 (* k!2 c!3)) ?x658 (* 9 (* m!1 m!1 k!2 k!2)) ?x376 (* 9 (* m!1 m!1 c!3 c!3 n!0)) (* 54 (* k!2 c!3 c!3)) (* 9 (* m!1 k!2 k!2 k!2)) (* 108 (* k!2 k!2 c!3)) ?x701 (* 61 (* m!1 k!2 k!2)) ?x238 (* 54 (* m!1 c!3 c!3 n!0)) (* 9 (* m!1 k!2 c!3 c!3)) (* 54 (* k!2 c!3 c!3 n!0)) (* 61 (* m!1 k!2 k!2 n!0)) (* 14 (* m!1 m!1 k!2 n!0)) (* 9 (* m!1 k!2 c!3 c!3 n!0)) (* 108 (* m!1 k!2 c!3)) (* 18 (* m!1 m!1 k!2 c!3)) (* 108 (* k!2 k!2 c!3 n!0)) (* 18 (* m!1 k!2 k!2 c!3 n!0)) (* 9 (* m!1 k!2 k!2 k!2 n!0)) (* 9 (* m!1 m!1 c!3 c!3)) (* 9 (* m!1 m!1 k!2 k!2 n!0)) (* 54 (* m!1 c!3 c!3)) (* 18 (* m!1 k!2 k!2 c!3)) (* 18 (* m!1 m!1 k!2 c!3 n!0)) (* 84 (* m!1 k!2)) ?x704 ?x734 ?x737 ?x743 (* 84 (* m!1 k!2 n!0)) (* 14 (* m!1 m!1 k!2)) ?x120 ?x118)))
 (let ((?x901 (* (- 6) n!0)))
 (let ((?x276 (+ (- 6) m!1 ?x901)))
 (let ((?x787 (* 9 n!0)))
 (let ((?x168 (* c!3 n!0)))
 (let ((?x285 (* (- 9) ?x168)))
 (let ((?x523 (+ ?x167 ?x285 ?x215 (* (- 5) m!1) (* (- 9) (* k!2 n!0)) (* 2 (* m!1 k!2)) (* (- 32) k!2) (* (- 27) c!3) ?x787)))
 (let ((?x521 (* 2 n!0)))
 (let ((?x455 (* (- 3) c!3)))
 (let ((?x481 (* k!2 n!0)))
 (let ((?x395 (* m!1 n!0)))
 (let ((?x584 (+ m!1 ?x901)))
 (let (($x484 (= ?x584 6)))
 (let (($x210 (not $x484)))
 (let (($x530 (or $x210 (not (= (+ ?x316 (* (- 1) m!1) ?x411 ?x787) (- 6))) (not (= (+ ?x395 ?x481 (* (- 3) k!2) ?x455 ?x521) (- 2))) (not (= ?x523 (- 13))) (not (= (* ?x276 ?x194) 0)))))
 (let ((?x251 (+ ?x481 ?x411 ?x455 ?x521)))
 (let (($x258 (= ?x251 0)))
 (let ((?x480 (+ ?x167 ?x285 (* (- 5) k!2) (* (- 18) c!3) ?x787)))
 (let (($x871 (= ?x480 (- 4))))
 (let (($x492 (and $x484 $x871 $x258 $x402 $x530)))
 (let ((?x379 (+ ?x118 ?x120 ?x376 (* 54 (* c!3 c!3 k!2)) (* 61 (* k!2 k!2 m!1)) (* 9 (* k!2 k!2 k!2 m!1)) (* 108 (* c!3 k!2 k!2)) ?x658 (* 108 (* c!3 k!2 k!2 n!0)) (* 18 (* c!3 k!2 m!1 m!1)) (* 9 (* k!2 k!2 m!1 m!1)) (* 9 (* c!3 c!3 k!2 m!1)) (* 54 (* c!3 c!3 k!2 n!0)) (* 9 (* c!3 c!3 m!1 m!1)) (* 84 (* k!2 m!1)) ?x701 (* 18 (* c!3 k!2 k!2 m!1)) (* 54 (* c!3 c!3 m!1 n!0)) ?x704 (* 9 (* c!3 c!3 k!2 m!1 n!0)) (* 18 (* c!3 k!2 k!2 m!1 n!0)) (* 9 (* k!2 k!2 k!2 m!1 n!0)) (* 9 (* c!3 c!3 m!1 m!1 n!0)) (* 18 (* c!3 k!2 m!1 m!1 n!0)) (* 9 (* k!2 k!2 m!1 m!1 n!0)) (* 108 (* c!3 k!2 m!1 n!0)) ?x238 (* 16 (* c!3 k!2)) (* 108 (* c!3 k!2 m!1)) (* 61 (* k!2 k!2 m!1 n!0)) (* 14 (* k!2 m!1 m!1 n!0)) ?x734 (* 54 (* c!3 c!3 m!1)) ?x737 ?x257 (* 84 (* k!2 m!1 n!0)) (* 14 (* k!2 m!1 m!1)) ?x743)))
 (let ((?x174 (* (- 1) ?x481)))
 (let ((?x328 (* (- 2) n!0)))
 (let ((?x187 (* 3 c!3)))
 (let ((?x172 (* 9 ?x168)))
 (let ((?x171 (* (- 1) ?x167)))
 (let ((?x157 (* (- 9) n!0)))
 (let ((?x220 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x157 ?x171 (* 9 ?x481) ?x172 (* (- 2) (* k!2 m!1)) (* (- 1) ?x215))))
 (let (($x748 (or $x210 (not (= ?x220 13)) (not (= (+ ?x187 (* 3 k!2) ?x328 ?x174 (* (- 1) ?x395)) 2)) (not (= (* ?x276 ?x379) 0)) (not (= (+ k!2 m!1 ?x157 (* (- 3) ?x190)) 6)))))
 (let (($x749 (and $x484 (= (+ (* 18 c!3) (* 5 k!2) ?x157 ?x171 ?x172) 4) (= (+ ?x187 k!2 ?x328 ?x174) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x190)) 0) $x748)))
 (let (($x442 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x963 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x696 (* 7 (* m m m n))))
 (let ((?x648 (* 8 (* c c))))
 (let ((?x636 (* 9 (* k k m m n))))
 (let ((?x630 (* 9 (* c c m m n))))
 (let ((?x628 (* 9 (* k k k m n))))
 (let ((?x622 (* 9 (* c c k m n))))
 (let ((?x643 (* 4 k)))
 (let ((?x642 (* 4 c)))
 (let ((?x944 (+ ?x642 ?x643 (* 50 (* k k)) (* 54 (* c c k)) (* 61 (* k k m)) (* 9 (* k k k m)) (* 108 (* c k k)) (* 54 (* k k k)) (* 108 (* c k k n)) (* 18 (* c k m m)) (* 9 (* k k m m)) (* 9 (* c c k m)) (* 54 (* c c k n)) (* 9 (* c c m m)) (* 84 (* k m)) (* 42 (* m m)) (* 18 (* c k k m)) (* 54 (* c c m n)) (* 54 (* k k k n)) ?x622 (* 18 (* c k k m n)) ?x628 ?x630 (* 18 (* c k m m n)) ?x636 (* 108 (* c k m n)) ?x648 (* 16 (* c k)) (* 108 (* c k m)) (* 61 (* k k m n)) (* 14 (* k m m n)) ?x696 (* 54 (* c c m)) (* 7 (* m m m)) (* 42 (* k k n)) (* 84 (* k m n)) (* 14 (* k m m)) (* 42 (* m m n)))))
 (let ((?x129 (* (- 6) n)))
 (let ((?x135 (+ (- 6) m ?x129)))
 (let ((?x52 (* k n)))
 (let ((?x266 (* (- 1) ?x52)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x263 (* 3 c)))
 (let (($x573 (= (+ ?x263 (* 3 k) ?x265 ?x266 (* (- 1) (* m n))) 2)))
 (let (($x581 (not $x573)))
 (let ((?x163 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x463 (* 5 m)))
 (let ((?x551 (+ (* 27 c) (* 32 k) ?x463 ?x225 ?x226 (* 9 ?x52) ?x163 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x555 (not (= ?x551 13))))
 (let (($x146 (= (+ m ?x129) 6)))
 (let (($x364 (not $x146)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x268 (= (+ ?x263 k ?x265 ?x266) 0)))
 (let (($x223 (= (+ (* 18 c) (* 5 k) ?x225 ?x226 ?x163) 4)))
 (and $x146 $x223 $x268 $x304 (or $x364 $x555 $x581 (not (= (* ?x135 ?x944) 0)) $x963)))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x286 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x643 (* 4 k)))
 (let ((?x263 (* 3 c)))
 (let (($x552 (= (+ ?x263 ?x643 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x472 (* (- 1) m)))
 (let ((?x399 (* (- 1) k)))
 (let (($x244 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x399 ?x472 ?x61) (- 3))))
 (let (($x255 (not $x244)))
 (let ((?x279 (* 7 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x642 (* 4 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x426 (+ 6 m)))
 (let ((?x466 (+ 1 n)))
 (let ((?x307 (+ (* 9 (* ?x466 ?x426 ?x74 ?x71 ?x71)) ?x642 ?x643 (* 8 (* ?x71 ?x71)) ?x279)))
 (let ((?x129 (* (- 6) n)))
 (let ((?x135 (+ (- 6) m ?x129)))
 (let (($x252 (not (= (* ?x135 ?x307) 0))))
 (let ((?x225 (* (- 9) n)))
 (let ((?x463 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x338 (+ ?x37 (* 23 k) (* 9 (* ?x466 ?x71)) ?x463 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x369 (= (+ (* 3 (* n n)) ?x399 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x146 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x225 ?x226) 4) (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x369 (or (not (= ?x338 13)) $x252 $x255 (not $x552) $x364))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x449 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x963 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x696 (* 7 (* m m m n))))
 (let ((?x648 (* 8 (* c c))))
 (let ((?x636 (* 9 (* k k m m n))))
 (let ((?x630 (* 9 (* c c m m n))))
 (let ((?x628 (* 9 (* k k k m n))))
 (let ((?x622 (* 9 (* c c k m n))))
 (let ((?x643 (* 4 k)))
 (let ((?x642 (* 4 c)))
 (let ((?x944 (+ ?x642 ?x643 (* 50 (* k k)) (* 54 (* c c k)) (* 61 (* k k m)) (* 9 (* k k k m)) (* 108 (* c k k)) (* 54 (* k k k)) (* 108 (* c k k n)) (* 18 (* c k m m)) (* 9 (* k k m m)) (* 9 (* c c k m)) (* 54 (* c c k n)) (* 9 (* c c m m)) (* 84 (* k m)) (* 42 (* m m)) (* 18 (* c k k m)) (* 54 (* c c m n)) (* 54 (* k k k n)) ?x622 (* 18 (* c k k m n)) ?x628 ?x630 (* 18 (* c k m m n)) ?x636 (* 108 (* c k m n)) ?x648 (* 16 (* c k)) (* 108 (* c k m)) (* 61 (* k k m n)) (* 14 (* k m m n)) ?x696 (* 54 (* c c m)) (* 7 (* m m m)) (* 42 (* k k n)) (* 84 (* k m n)) (* 14 (* k m m)) (* 42 (* m m n)))))
 (let ((?x129 (* (- 6) n)))
 (let ((?x135 (+ (- 6) m ?x129)))
 (let ((?x52 (* k n)))
 (let ((?x266 (* (- 1) ?x52)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x263 (* 3 c)))
 (let (($x573 (= (+ ?x263 (* 3 k) ?x265 ?x266 (* (- 1) (* m n))) 2)))
 (let (($x581 (not $x573)))
 (let ((?x163 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x225 (* (- 9) n)))
 (let ((?x463 (* 5 m)))
 (let ((?x551 (+ (* 27 c) (* 32 k) ?x463 ?x225 ?x226 (* 9 ?x52) ?x163 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x555 (not (= ?x551 13))))
 (let (($x146 (= (+ m ?x129) 6)))
 (let (($x364 (not $x146)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x268 (= (+ ?x263 k ?x265 ?x266) 0)))
 (let (($x223 (= (+ (* 18 c) (* 5 k) ?x225 ?x226 ?x163) 4)))
 (let (($x961 (and $x146 $x223 $x268 $x304 (or $x364 $x555 $x581 (not (= (* ?x135 ?x944) 0)) $x963))))
 (let (($x552 (= (+ ?x263 ?x643 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x472 (* (- 1) m)))
 (let ((?x399 (* (- 1) k)))
 (let (($x244 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x399 ?x472 ?x61) (- 3))))
 (let (($x255 (not $x244)))
 (let ((?x279 (* 7 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x426 (+ 6 m)))
 (let ((?x466 (+ 1 n)))
 (let ((?x307 (+ (* 9 (* ?x466 ?x426 ?x74 ?x71 ?x71)) ?x642 ?x643 (* 8 (* ?x71 ?x71)) ?x279)))
 (let (($x252 (not (= (* ?x135 ?x307) 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x338 (+ ?x37 (* 23 k) (* 9 (* ?x466 ?x71)) ?x463 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x369 (= (+ (* 3 (* n n)) ?x399 ?x61) 0)))
 (let (($x176 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x225 ?x226) 4)))
 (let (($x287 (and $x146 $x176 (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x369 (or (not (= ?x338 13)) $x252 $x255 (not $x552) $x364))))
 (rewrite (= $x287 $x961))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x428 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x485 (* (- 18) c)))
 (let ((?x282 (+ ?x485 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x61 (* 3 n)))
 (let ((?x472 (* (- 1) m)))
 (let ((?x399 (* (- 1) k)))
 (let (($x244 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x399 ?x472 ?x61) (- 3))))
 (let (($x255 (not $x244)))
 (let ((?x643 (* 4 k)))
 (let ((?x642 (* 4 c)))
 (let ((?x242 (* 9 (* (+ 1 n) (+ 6 m) ?x74 (+ c k) (+ c k)))))
 (let ((?x307 (+ ?x242 ?x642 ?x643 (* 8 (* (+ c k) (+ c k))) (* 7 (* (+ 1 n) (+ 6 m) ?x74 ?x74)))))
 (let ((?x129 (* (- 6) n)))
 (let ((?x135 (+ (- 6) m ?x129)))
 (let (($x252 (not (= (* ?x135 ?x307) 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x466 (+ 1 n)))
 (let ((?x247 (* ?x466 ?x74)))
 (let ((?x520 (* (- 3) c)))
 (let (($x553 (or (not (= (+ ?x520 (* (- 4) k) ?x247 ?x472 ?x56) (- 2))) $x252 $x255 (not (= ?x282 (- 13))) $x364)))
 (let (($x369 (= (+ (* 3 (* n n)) ?x399 ?x61) 0)))
 (let (($x394 (= (+ ?x485 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x146 $x394 (= (+ ?x520 (* n k) ?x399 ?x56) 0) $x369 $x553))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x372 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x265 (* (- 2) n)))
 (let ((?x643 (* 4 k)))
 (let ((?x263 (* 3 c)))
 (let (($x552 (= (+ ?x263 ?x643 (* (- 1) (* (+ 1 n) (+ k m))) m ?x265) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x472 (* (- 1) m)))
 (let ((?x399 (* (- 1) k)))
 (let (($x244 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x399 ?x472 ?x61) (- 3))))
 (let (($x255 (not $x244)))
 (let ((?x279 (* 7 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x642 (* 4 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x426 (+ 6 m)))
 (let ((?x466 (+ 1 n)))
 (let ((?x307 (+ (* 9 (* ?x466 ?x426 ?x74 ?x71 ?x71)) ?x642 ?x643 (* 8 (* ?x71 ?x71)) ?x279)))
 (let ((?x129 (* (- 6) n)))
 (let ((?x135 (+ (- 6) m ?x129)))
 (let (($x252 (not (= (* ?x135 ?x307) 0))))
 (let ((?x225 (* (- 9) n)))
 (let ((?x463 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x338 (+ ?x37 (* 23 k) (* 9 (* ?x466 ?x71)) ?x463 ?x225 (* (- 1) (* ?x74 ?x74)))))
 (let (($x369 (= (+ (* 3 (* n n)) ?x399 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x226 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x287 (and $x146 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x225 ?x226) 4) (= (+ ?x263 (* (- 1) (* n k)) k ?x265) 0) $x369 (or (not (= ?x338 13)) $x252 $x255 (not $x552) $x364))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x485 (* (- 18) c)))
 (let ((?x282 (+ ?x485 (* (- 23) k) (* (- 9) (* ?x466 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x247 (* ?x466 ?x74)))
 (let ((?x520 (* (- 3) c)))
 (let (($x553 (or (not (= (+ ?x520 (* (- 4) k) ?x247 ?x472 ?x56) (- 2))) $x252 $x255 (not (= ?x282 (- 13))) $x364)))
 (let (($x394 (= (+ ?x485 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x638 (and $x146 $x394 (= (+ ?x520 (* n k) ?x399 ?x56) 0) $x369 $x553)))
 (rewrite (= $x638 $x287)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x111 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x98 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x105 (+ (* 9 (+ c k) (+ c k) ?x74 ?x98 ?x66) (* 4 (+ c k)) (* 8 (+ c k) (+ c k)) (* 7 ?x74 ?x74 ?x98 ?x66))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 ?x66))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) ?x66)) (* 5 ?x74))))
 (let (($x109 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x68 ?x105) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x109))))))))))))))) :qid k!38))
 ))
 (let ((?x430 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x146 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (not $x146)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x485 (* (- 18) c)))
 (let ((?x282 (+ ?x485 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x61 (* 3 n)))
 (let ((?x472 (* (- 1) m)))
 (let ((?x399 (* (- 1) k)))
 (let (($x244 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x399 ?x472 ?x61) (- 3))))
 (let (($x255 (not $x244)))
 (let ((?x643 (* 4 k)))
 (let ((?x642 (* 4 c)))
 (let ((?x242 (* 9 (* (+ 1 n) (+ 6 m) ?x74 (+ c k) (+ c k)))))
 (let ((?x307 (+ ?x242 ?x642 ?x643 (* 8 (* (+ c k) (+ c k))) (* 7 (* (+ 1 n) (+ 6 m) ?x74 ?x74)))))
 (let ((?x129 (* (- 6) n)))
 (let ((?x135 (+ (- 6) m ?x129)))
 (let (($x252 (not (= (* ?x135 ?x307) 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x466 (+ 1 n)))
 (let ((?x247 (* ?x466 ?x74)))
 (let ((?x520 (* (- 3) c)))
 (let (($x553 (or (not (= (+ ?x520 (* (- 4) k) ?x247 ?x472 ?x56) (- 2))) $x252 $x255 (not (= ?x282 (- 13))) $x364)))
 (let (($x369 (= (+ (* 3 (* n n)) ?x399 ?x61) 0)))
 (let (($x394 (= (+ ?x485 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x638 (and $x146 $x394 (= (+ ?x520 (* n k) ?x399 ?x56) 0) $x369 $x553)))
 (let ((?x66 (+ n 1)))
 (let ((?x98 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x105 (+ (* 9 ?x71 ?x71 ?x74 ?x98 ?x66) (* 4 ?x71) (* 8 ?x71 ?x71) (* 7 ?x74 ?x74 ?x98 ?x66))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x109 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x68 ?x105) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x110 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x109)))
 (rewrite (= $x110 $x638))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x112 (asserted $x111)))
 (let ((@x502 (mp (mp @x112 (quant-intro (proof-bind ?x430) (= $x111 $x428)) $x428) (rewrite (= $x428 $x428)) $x428)))
 (let ((@x457 (mp (mp @x502 (quant-intro (proof-bind ?x372) (= $x428 $x286)) $x286) (quant-intro (proof-bind ?x449) (= $x286 $x442)) $x442)))
 (let ((@x432 (mp (mp~ @x457 (sk (~ $x442 $x749)) $x749) (rewrite (= $x749 $x492)) $x492)))
 (let ((@x454 (and-elim @x432 $x402)))
 (let ((@x890 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x402) $x443)) @x454 $x443)))
 (let (($x375 (>= ?x659 0)))
 (let ((@x936 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x402) $x375)) @x454 $x375)))
 (let (($x115 (<= ?x251 0)))
 (let ((@x525 (and-elim @x432 $x258)))
 (let ((@x507 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x258) $x115)) @x525 $x115)))
 (let (($x114 (>= ?x251 0)))
 (let ((@x819 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x258) $x114)) @x525 $x114)))
 (let (($x493 (<= ?x584 6)))
 (let ((@x517 (and-elim @x432 $x484)))
 (let ((@x726 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x210 $x493)) @x517 $x493)))
 (let (($x448 (>= ?x584 6)))
 (let ((@x755 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x210 $x448)) @x517 $x448)))
 (let (($x657 (<= ?x480 (- 4))))
 (let ((@x347 (and-elim @x432 $x871)))
 (let ((@x760 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x871) $x657)) @x347 $x657)))
 (let (($x654 (>= ?x480 (- 4))))
 (let ((@x776 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x871) $x654)) @x347 $x654)))
 (let (($x358 (<= m!1 12)))
 (let ((@x2018 ((_ th-lemma arith) (hypothesis (not $x358)) @x726 @x936 @x890 @x776 @x760 @x936 @x890 @x819 @x507 @x936 @x890 false)))
 (let (($x479 (>= n!0 (- 1))))
 (let ((@x796 ((_ th-lemma arith) (hypothesis (not $x479)) @x936 @x890 @x819 @x507 @x936 @x890 @x936 @x890 @x819 @x507 @x776 @x760 false)))
 (let (($x1361 (>= ?x190 1)))
 (let ((@x217 ((_ th-lemma arith) (hypothesis (not $x1361)) @x819 @x507 @x776 @x760 @x936 @x890 @x936 @x890 @x936 @x890 @x755 @x726 @x776 @x760 @x936 @x890 @x776 @x760 @x819 @x507 @x819 @x507 @x776 @x760 @x776 @x760 @x819 @x507 false)))
 ((_ th-lemma arith) (lemma @x217 $x1361) (lemma @x796 $x479) (lemma @x2018 $x358) @x755 @x776 @x760 @x755 @x726 @x755 @x726 @x936 @x890 @x755 @x726 @x936 @x890 @x755 @x726 @x819 @x507 @x776 @x760 @x776 @x760 @x936 @x890 @x755 @x726 @x819 @x507 @x936 @x890 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 60
 :arith-assert-diseq        35
 :arith-assert-lower        1097
 :arith-assert-upper        478
 :arith-bound-prop          1
 :arith-branch-var          38
 :arith-conflicts           45
 :arith-eq-adapter          9
 :arith-fixed-eqs           100
 :arith-gcd-tests           276
 :arith-gomory-cuts         25
 :arith-grobner             35
 :arith-ineq-splits         38
 :arith-max-min             6788
 :arith-nonlinear-bounds    847
 :arith-nonlinear-horner    352
 :arith-num-rows            21
 :arith-offset-eqs          5
 :arith-patches             77
 :arith-patches_succ        1
 :arith-pivots              488
 :arith-pseudo-nonlinear    178
 :arith-row-summations      2255
 :arith-tableau-max-columns 101
 :arith-tableau-max-rows    21
 :conflicts                 46
 :decisions                 324
 :del-clause                56
 :final-checks              169
 :max-memory                4.09
 :memory                    3.32
 :minimized-lits            9
 :mk-bool-var               253
 :mk-clause                 72
 :num-allocs                5483812
 :num-checks                1
 :propagations              110
 :rlimit-count              230713
 :time                      0.10
 :total-time                0.11)
