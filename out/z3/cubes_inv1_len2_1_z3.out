unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let (($x1045 (>= c!3 1)))
 (let (($x987 (>= n!0 0)))
 (let ((?x452 (* n!0 c!3)))
 (let ((?x378 (* (- 9) ?x452)))
 (let ((?x272 (* (- 5) k!2)))
 (let ((?x393 (* k!2 k!2)))
 (let ((?x527 (* 9 n!0)))
 (let ((?x530 (+ ?x527 ?x393 ?x272 (* (- 18) c!3) ?x378)))
 (let (($x477 (<= ?x530 (- 4))))
 (let (($x428 (= ?x530 (- 4))))
 (let ((?x442 (* 42 m!1)))
 (let ((?x507 (* 6 (* c!3 c!3 m!1 m!1))))
 (let ((?x451 (* 42 k!2)))
 (let ((?x325 (* 216 (* c!3 c!3))))
 (let ((?x443 (* 216 ?x393)))
 (let ((?x348 (* m!1 m!1)))
 (let ((?x128 (* 7 ?x348)))
 (let ((?x399 (* 72 (* c!3 c!3 m!1))))
 (let ((?x205 (* 72 (* k!2 k!2 m!1))))
 (let ((?x156 (* k!2 m!1)))
 (let ((?x327 (* 7 ?x156)))
 (let ((?x417 (* 6 (* k!2 k!2 m!1 m!1))))
 (let ((?x454 (+ ?x417 ?x327 ?x205 (* 432 (* k!2 c!3)) ?x399 ?x128 (* 144 (* k!2 c!3 m!1)) ?x443 ?x325 ?x451 ?x507 (* 12 (* k!2 c!3 m!1 m!1)) ?x442)))
 (let ((?x352 (* (- 1) m!1)))
 (let ((?x476 (* n!0 n!0)))
 (let ((?x383 (* 3 ?x476)))
 (let ((?x421 (* (- 1) k!2)))
 (let ((?x521 (+ ?x527 ?x421 ?x383 ?x352)))
 (let ((?x456 (+ ?x527 (* 2 ?x156) ?x348 ?x393 (* (- 32) k!2) (* (- 27) c!3) ?x378 (* (- 9) (* n!0 k!2)) (* (- 5) m!1))))
 (let ((?x453 (* n!0 k!2)))
 (let ((?x199 (* (- 3) c!3)))
 (let ((?x419 (* 2 n!0)))
 (let ((?x424 (+ (* 6 n!0) ?x352)))
 (let (($x425 (= ?x424 (- 6))))
 (let (($x157 (not $x425)))
 (let (($x458 (or $x157 (not (= (+ (* n!0 m!1) ?x419 (* (- 3) k!2) ?x199 ?x453) (- 2))) (not (= ?x456 (- 13))) (not (= ?x521 (- 6))) (not (= (* ?x454 (+ (- 6) (* (- 6) n!0) m!1)) 0)))))
 (let ((?x384 (+ (* 3 n!0) ?x421 ?x383)))
 (let (($x386 (= ?x384 0)))
 (let ((?x559 (+ ?x419 ?x421 ?x199 ?x453)))
 (let (($x493 (= ?x559 0)))
 (let (($x201 (and $x425 $x428 $x493 $x386 $x458)))
 (let ((?x369 (* k!2 n!0)))
 (let ((?x465 (* (- 1) ?x369)))
 (let ((?x273 (* (- 2) n!0)))
 (let ((?x189 (* 3 c!3)))
 (let (($x355 (= (+ ?x189 (* 3 k!2) ?x273 ?x465 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x461 (* 9 (* c!3 n!0))))
 (let ((?x345 (* (- 1) ?x393)))
 (let ((?x415 (* (- 9) n!0)))
 (let ((?x322 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x415 ?x345 (* 9 ?x369) ?x461 (* (- 2) ?x156) (* (- 1) ?x348))))
 (let ((?x178 (+ ?x451 ?x442 ?x443 (* 144 (* c!3 k!2 m!1)) (* 432 (* c!3 k!2)) ?x399 ?x325 ?x205 ?x327 ?x128 ?x507 (* 12 (* c!3 k!2 m!1 m!1)) ?x417)))
 (let (($x410 (or (not (= (* ?x178 (+ (- 6) m!1 (* (- 6) n!0))) 0)) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= ?x322 13)) (not $x355) (not (= (+ k!2 m!1 ?x415 (* (- 3) ?x476)) 6)))))
 (let (($x129 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x539 (and $x129 (= (+ (* 18 c!3) (* 5 k!2) ?x415 ?x345 ?x461) 4) (= (+ ?x189 k!2 ?x273 ?x465) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x476)) 0) $x410)))
 (let (($x445 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x583 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x570 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x578 (not $x570)))
 (let ((?x160 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x548 (+ (* 27 c) (* 32 k) ?x460 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x552 (not (= ?x548 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x615 (* 6 (* k k m m))))
 (let ((?x609 (* 6 (* c c m m))))
 (let ((?x511 (* m m)))
 (let ((?x532 (* 7 ?x511)))
 (let ((?x510 (* k m)))
 (let ((?x500 (* 7 ?x510)))
 (let ((?x268 (+ (* 42 k) (* 42 m) (* 216 ?x46) (* 144 (* c k m)) (* 432 (* c k)) (* 72 (* c c m)) (* 216 (* c c)) (* 72 (* k k m)) ?x500 ?x532 ?x609 (* 12 (* c k m m)) ?x615)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x268 ?x132) 0)) $x361 $x552 $x578 $x583)))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x414 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let ((?x284 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x306 (* 6 (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let (($x441 (= (* (+ (* 7 (* (+ 6 m) (+ k m))) ?x306) ?x132) 0)))
 (let (($x281 (not $x441)))
 (let ((?x61 (* 3 n)))
 (let ((?x307 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x249 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x307 ?x61) (- 3))))
 (let (($x257 (not $x249)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x182 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x460 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x534 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x534 (or (not (= ?x182 13)) $x257 $x281 (not (= ?x284 2)) $x361))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x455 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x583 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x570 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x578 (not $x570)))
 (let ((?x160 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x548 (+ (* 27 c) (* 32 k) ?x460 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x552 (not (= ?x548 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x615 (* 6 (* k k m m))))
 (let ((?x609 (* 6 (* c c m m))))
 (let ((?x511 (* m m)))
 (let ((?x532 (* 7 ?x511)))
 (let ((?x510 (* k m)))
 (let ((?x500 (* 7 ?x510)))
 (let ((?x268 (+ (* 42 k) (* 42 m) (* 216 ?x46) (* 144 (* c k m)) (* 432 (* c k)) (* 72 (* c c m)) (* 216 (* c c)) (* 72 (* k k m)) ?x500 ?x532 ?x609 (* 12 (* c k m m)) ?x615)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (let (($x256 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x268 ?x132) 0)) $x361 $x552 $x578 $x583))))
 (let ((?x284 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let ((?x306 (* 6 (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let (($x441 (= (* (+ (* 7 (* (+ 6 m) (+ k m))) ?x306) ?x132) 0)))
 (let (($x281 (not $x441)))
 (let ((?x61 (* 3 n)))
 (let ((?x307 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x249 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x307 ?x61) (- 3))))
 (let (($x257 (not $x249)))
 (let ((?x37 (* 18 c)))
 (let ((?x182 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x460 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x534 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let (($x173 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x222 ?x223) 4)))
 (let (($x522 (and $x143 $x173 (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x534 (or (not (= ?x182 13)) $x257 $x281 (not (= ?x284 2)) $x361))))
 (rewrite (= $x522 $x256))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x431 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x482 (* (- 18) c)))
 (let ((?x287 (+ ?x482 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x306 (* 6 (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let (($x281 (not (= (* (+ (* 7 (* (+ 6 m) ?x74)) ?x306) ?x132) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x307 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x249 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x307 ?x61) (- 3))))
 (let (($x257 (not $x249)))
 (let ((?x56 (* 2 n)))
 (let ((?x462 (+ 1 n)))
 (let ((?x549 (* ?x462 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x469 (or (not (= (+ ?x512 (* (- 4) k) ?x549 ?x307 ?x56) (- 2))) $x257 $x281 (not (= ?x287 (- 13))) $x361)))
 (let (($x534 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let (($x390 (= (+ ?x482 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x143 $x390 (= (+ ?x512 (* n k) ?x400 ?x56) 0) $x534 $x469)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x395 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let ((?x284 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x306 (* 6 (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let (($x441 (= (* (+ (* 7 (* (+ 6 m) (+ k m))) ?x306) ?x132) 0)))
 (let (($x281 (not $x441)))
 (let ((?x61 (* 3 n)))
 (let ((?x307 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x249 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x307 ?x61) (- 3))))
 (let (($x257 (not $x249)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x182 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x460 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x534 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x522 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x534 (or (not (= ?x182 13)) $x257 $x281 (not (= ?x284 2)) $x361))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x482 (* (- 18) c)))
 (let ((?x287 (+ ?x482 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x462 (+ 1 n)))
 (let ((?x549 (* ?x462 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x469 (or (not (= (+ ?x512 (* (- 4) k) ?x549 ?x307 ?x56) (- 2))) $x257 $x281 (not (= ?x287 (- 13))) $x361)))
 (let (($x390 (= (+ ?x482 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x550 (and $x143 $x390 (= (+ ?x512 (* n k) ?x400 ?x56) 0) $x534 $x469)))
 (rewrite (= $x550 $x522)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x99 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x103 (* ?x68 (+ (* 7 (+ k m) ?x99) (* 6 ?x71 ?x71 ?x99 ?x99)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) (+ k m)) (* 3 (+ n 1)))))
 (let ((?x74 (+ k m)))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let (($x106 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 (+ n 1)) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= ?x103 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x106)))))))))))))))) :qid k!38))
 ))
 (let ((?x433 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x482 (* (- 18) c)))
 (let ((?x287 (+ ?x482 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x306 (* 6 (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let (($x281 (not (= (* (+ (* 7 (* (+ 6 m) ?x74)) ?x306) ?x132) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x307 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x249 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x307 ?x61) (- 3))))
 (let (($x257 (not $x249)))
 (let ((?x56 (* 2 n)))
 (let ((?x462 (+ 1 n)))
 (let ((?x549 (* ?x462 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x469 (or (not (= (+ ?x512 (* (- 4) k) ?x549 ?x307 ?x56) (- 2))) $x257 $x281 (not (= ?x287 (- 13))) $x361)))
 (let (($x534 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let (($x390 (= (+ ?x482 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x550 (and $x143 $x390 (= (+ ?x512 (* n k) ?x400 ?x56) 0) $x534 $x469)))
 (let ((?x99 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let (($x104 (= (* ?x68 (+ (* 7 ?x74 ?x99) (* 6 ?x71 ?x71 ?x99 ?x99))) 0)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let (($x106 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 (+ n 1)) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not $x104))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x107 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x106)))
 (rewrite (= $x107 $x550)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x499 (mp (mp @x109 (quant-intro (proof-bind ?x433) (= $x108 $x431)) $x431) (rewrite (= $x431 $x431)) $x431)))
 (let ((@x457 (mp (mp @x499 (quant-intro (proof-bind ?x395) (= $x431 $x414)) $x414) (quant-intro (proof-bind ?x455) (= $x414 $x445)) $x445)))
 (let ((@x585 (mp (mp~ @x457 (sk (~ $x445 $x539)) $x539) (rewrite (= $x539 $x201)) $x201)))
 (let ((@x245 (and-elim @x585 $x428)))
 (let ((@x700 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x428) $x477)) @x245 $x477)))
 (let (($x525 (>= ?x530 (- 4))))
 (let ((@x703 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x428) $x525)) @x245 $x525)))
 (let (($x334 (<= ?x559 0)))
 (let ((@x403 (and-elim @x585 $x493)))
 (let ((@x267 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x493) $x334)) @x403 $x334)))
 (let (($x340 (>= ?x559 0)))
 (let ((@x407 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x493) $x340)) @x403 $x340)))
 (let (($x347 (<= ?x521 (- 6))))
 (let (($x342 (<= ?x424 (- 6))))
 (let ((@x136 (and-elim @x585 $x425)))
 (let ((@x376 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x157 $x342)) @x136 $x342)))
 (let (($x166 (<= ?x384 0)))
 (let ((@x470 (and-elim @x585 $x386)))
 (let ((@x207 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x347 (not $x166) (not $x342))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x386) $x166)) @x470 $x166) @x376 $x347)))
 (let (($x344 (>= ?x521 (- 6))))
 (let (($x354 (>= ?x384 0)))
 (let (($x481 (>= ?x424 (- 6))))
 (let ((@x520 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x157 $x481)) @x136 $x481)))
 (let ((@x435 ((_ th-lemma arith farkas -1 1 1) (hypothesis (not $x344)) @x520 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x386) $x354)) @x470 $x354) false)))
 (let ((@x111 (lemma @x435 $x344)))
 (let (($x491 (>= k!2 0)))
 (let ((@x515 (hypothesis (not $x491))))
 (let ((@x558 (lemma ((_ th-lemma arith) @x515 @x207 @x520 @x520 @x515 @x207 @x520 @x515 @x207 false) $x491)))
 (let ((?x951 (+ (* 16 n!0) ?x393 ?x272 (* (- 15) c!3) (* (- 7) ?x452) ?x383 ?x352)))
 (let (($x524 (>= ?x452 1)))
 (let (($x626 (<= k!2 1)))
 (let (($x786 (not $x626)))
 (let ((@x314 (hypothesis (not $x524))))
 (let (($x678 (>= c!3 0)))
 (let (($x707 (not $x678)))
 (let (($x677 (<= c!3 0)))
 (let (($x679 (>= c!3 2)))
 (let (($x643 (not $x679)))
 (let ((@x672 (hypothesis $x679)))
 (let ((@x683 (lemma ((_ th-lemma arith) @x558 @x672 @x314 @x672 @x207 @x520 @x407 @x267 false) (or $x643 $x524))))
 (let (($x653 (not $x677)))
 (let ((@x480 (hypothesis $x653)))
 (let ((@x483 ((_ th-lemma arith) @x558 @x480 @x314 @x480 (hypothesis $x643) @x207 @x520 @x407 @x267 false)))
 (let ((@x658 (unit-resolution (lemma @x483 (or $x679 $x677 $x524)) (unit-resolution @x683 @x314 $x643) @x314 $x677)))
 (let ((@x704 (hypothesis $x677)))
 (let ((@x705 (hypothesis $x678)))
 (let ((@x706 ((_ th-lemma arith) @x111 @x207 @x703 @x700 @x705 @x704 @x705 @x704 @x705 @x704 @x520 @x376 @x111 @x207 @x111 @x207 @x520 @x376 @x703 @x700 @x520 @x376 @x407 @x267 @x703 @x700 @x705 @x704 @x703 @x700 @x520 @x376 false)))
 (let ((@x709 (lemma @x706 (or $x707 $x653))))
 (let ((@x639 (unit-resolution @x709 @x658 $x707)))
 (let ((@x788 (lemma ((_ th-lemma arith farkas -1/2 -1/2 5/18 1/18 1/2 1) @x314 @x639 (hypothesis $x626) @x700 @x314 @x639 false) (or $x786 $x524))))
 (let ((@x790 ((_ th-lemma arith) @x639 (unit-resolution @x788 @x314 $x786) @x520 @x376 @x111 @x207 @x703 @x700 @x520 @x376 @x520 @x376 @x111 @x207 @x407 @x267 @x703 @x700 false)))
 (let ((@x791 (lemma @x790 $x524)))
 (let (($x886 (>= ?x393 0)))
 (let ((@x676 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x886)) false) $x886)))
 (let ((@x899 ((_ th-lemma arith) ((_ th-lemma arith gomory-cut 1/5 1 1 1/5 3/5) @x520 @x111 @x703 @x676 @x791 (>= ?x951 (- 8))) (hypothesis (>= (+ (* 5 n!0) ?x352) (- 4))) @x520 @x376 @x520 @x376 @x111 @x207 @x111 @x207 @x111 @x207 @x407 @x267 @x520 @x376 @x407 @x267 @x520 @x376 @x520 @x376 @x407 @x267 @x703 @x700 @x703 @x700 @x111 @x207 false)))
 (let (($x876 (>= ?x452 2)))
 (let ((@x868 ((_ th-lemma arith) @x520 @x376 @x791 (hypothesis (not $x876)) @x520 @x376 @x520 @x376 @x111 @x207 @x520 @x376 @x703 @x700 @x703 @x700 @x407 @x267 @x520 @x376 false)))
 (let ((@x642 (lemma @x868 $x876)))
 (let ((@x944 ((_ th-lemma arith gomory-cut 9/13 1/13 9/13 1/5 -9/13 5/13) @x520 @x703 @x642 @x676 (lemma @x899 (not (>= (+ (* 5 n!0) ?x352) (- 4)))) @x558 (>= (+ (* 5 n!0) ?x393 (* (- 5) c!3)) 5))))
 (let ((@x1034 ((_ th-lemma arith) (hypothesis (not $x987)) @x944 @x520 @x376 @x520 @x376 @x520 @x376 @x111 @x207 @x407 @x267 @x703 @x700 false)))
 (let ((@x1042 ((_ th-lemma arith farkas 1 1 1) @x642 (lemma @x1034 $x987) (hypothesis (<= n!0 0)) false)))
 (let ((@x1048 ((_ th-lemma arith farkas 1 1 1) @x642 (lemma @x1042 (not (<= n!0 0))) (hypothesis (not $x1045)) false)))
 (let (($x1046 (not $x1045)))
 (let (($x777 (<= c!3 1)))
 (let ((@x916 ((_ th-lemma arith) (hypothesis (not $x777)) @x703 @x700 @x520 @x376 @x703 @x700 @x520 @x376 @x111 @x207 @x407 @x267 @x703 @x700 false)))
 (let ((@x875 (hypothesis $x777)))
 (let ((@x657 ((_ th-lemma arith) @x111 @x207 @x520 @x376 @x520 @x376 @x480 @x875 @x480 @x875 @x480 @x875 @x480 @x875 @x480 @x875 @x480 @x875 @x480 @x875 @x111 @x207 @x480 @x875 @x480 @x875 @x480 @x875 @x480 @x875 @x111 @x207 @x520 @x376 @x703 @x700 @x520 @x376 @x520 @x376 @x407 @x267 @x480 @x875 @x480 @x875 @x480 @x875 @x480 @x875 @x703 @x700 false)))
 (let ((@x1052 (unit-resolution (lemma @x657 (or (not $x777) $x677)) (lemma @x916 $x777) $x677)))
 (let ((@x1054 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x1046 $x678)) (unit-resolution @x709 @x1052 $x707) $x1046)))
 (unit-resolution @x1054 (lemma @x1048 $x1045) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 47
 :arith-assert-diseq        24
 :arith-assert-lower        407
 :arith-assert-upper        161
 :arith-bound-prop          1
 :arith-branch-var          12
 :arith-conflicts           24
 :arith-eq-adapter          11
 :arith-fixed-eqs           51
 :arith-gcd-tests           84
 :arith-gomory-cuts         7
 :arith-grobner             22
 :arith-ineq-splits         12
 :arith-max-min             1746
 :arith-nonlinear-bounds    203
 :arith-nonlinear-horner    194
 :arith-num-rows            13
 :arith-offset-eqs          6
 :arith-patches             31
 :arith-patches_succ        8
 :arith-pivots              241
 :arith-pseudo-nonlinear    64
 :arith-row-summations      960
 :arith-tableau-max-columns 59
 :arith-tableau-max-rows    13
 :conflicts                 27
 :decisions                 84
 :del-clause                58
 :final-checks              79
 :max-memory                3.80
 :memory                    3.20
 :minimized-lits            4
 :mk-bool-var               99
 :mk-clause                 67
 :num-allocs                1931069
 :num-checks                1
 :propagations              103
 :rlimit-count              63602
 :time                      0.04
 :total-time                0.05)
