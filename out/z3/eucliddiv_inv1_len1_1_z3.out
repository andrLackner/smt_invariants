unsat
((set-logic NIA)
(proof
(let (($x115 (exists ((q Int) (r Int) (y Int) )(! (let ((?x36 (* q00 y00)))
 (let ((?x86 (* (- 1) ?x36)))
 (let ((?x62 (* (- 1) r00)))
 (let ((?x64 (* (- 1) y00)))
 (let (($x129 (not (= (+ r ?x64 ?x62 ?x86 (* y00 (+ 1 q))) 0))))
 (let (($x175 (= (+ r ?x62 ?x86 (* y00 q)) 0)))
 (let ((?x162 (* (- 1) y)))
 (let ((?x163 (+ y00 ?x162)))
 (let (($x176 (= ?x163 0)))
 (and $x176 $x175 $x129)))))))))) :qid k!31))
 ))
 (let (($x151 (exists ((q Int) (r Int) (y Int) )(! false :qid k!31))
 ))
 (let ((@x159 (elim-unused (= $x151 false))))
 (let ((?x200 (lambda ((q Int) (r Int) (y Int) )(let ((?x36 (* q00 y00)))
 (let ((?x86 (* (- 1) ?x36)))
 (let ((?x62 (* (- 1) r00)))
 (let ((?x64 (* (- 1) y00)))
 (let (($x129 (not (= (+ r ?x64 ?x62 ?x86 (* y00 (+ 1 q))) 0))))
 (let (($x175 (= (+ r ?x62 ?x86 (* y00 q)) 0)))
 (let ((?x162 (* (- 1) y)))
 (let ((?x163 (+ y00 ?x162)))
 (let (($x176 (= ?x163 0)))
 (let (($x127 (and $x176 $x175 $x129)))
 (let (($x98 (= (+ r ?x62 (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x106 (not $x98)))
 (let (($x73 (= (+ y ?x64) 0)))
 (let (($x141 (and $x73 $x98 $x106)))
 (let ((@x145 (rewrite (= $x141 false))))
 (let ((@x63 (monotonicity (rewrite (= ?x163 (+ ?x162 y00))) (= $x176 (= (+ ?x162 y00) 0)))))
 (let ((@x167 (trans @x63 (rewrite (= (= (+ ?x162 y00) 0) $x73)) (= $x176 $x73))))
 (let ((@x213 (monotonicity @x167 (rewrite (= $x175 $x98)) (rewrite (= $x129 $x106)) (= $x127 $x141))))
 (trans @x213 @x145 (= $x127 false)))))))))))))))))))))
 ))
 (let ((@x209 (trans (quant-intro (proof-bind ?x200) (= $x115 $x151)) @x159 (= $x115 false))))
 (let (($x171 (exists ((q Int) (r Int) (y Int) )(! (let ((?x36 (* q00 y00)))
 (let ((?x86 (* (- 1) ?x36)))
 (let ((?x62 (* (- 1) r00)))
 (let ((?x64 (* (- 1) y00)))
 (let (($x129 (not (= (+ r ?x64 ?x62 ?x86 (* y00 (+ 1 q))) 0))))
 (let (($x175 (= (+ r ?x62 ?x86 (* y00 q)) 0)))
 (and (= (+ ?x64 y) 0) $x175 $x129))))))) :qid k!31))
 ))
 (let ((?x178 (lambda ((q Int) (r Int) (y Int) )(let ((?x36 (* q00 y00)))
 (let ((?x86 (* (- 1) ?x36)))
 (let ((?x62 (* (- 1) r00)))
 (let ((?x64 (* (- 1) y00)))
 (let (($x129 (not (= (+ r ?x64 ?x62 ?x86 (* y00 (+ 1 q))) 0))))
 (let (($x175 (= (+ r ?x62 ?x86 (* y00 q)) 0)))
 (let ((?x162 (* (- 1) y)))
 (let ((?x163 (+ y00 ?x162)))
 (let (($x176 (= ?x163 0)))
 (let (($x127 (and $x176 $x175 $x129)))
 (let (($x168 (and (= (+ ?x64 y) 0) $x175 $x129)))
 (rewrite (= $x168 $x127))))))))))))))
 ))
 (let (($x59 (exists ((q Int) (r Int) (y Int) )(! (let ((?x30 (* (- 1) y00)))
 (let ((?x42 (+ ?x30 y00)))
 (let ((?x45 (- r y00)))
 (let ((?x48 (+ q 1)))
 (let ((?x54 (* 5 ?x48 ?x48 ?x45 ?x45 ?x42)))
 (let (($x55 (= ?x54 0)))
 (let (($x56 (not $x55)))
 (let (($x52 (not (= (+ (- (- ?x45 r00) (* q00 y00)) (* ?x48 y00)) 0))))
 (let (($x43 (= ?x42 0)))
 (let (($x44 (not $x43)))
 (let (($x57 (or $x44 $x52 $x56)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ ?x30 y) 0)))
 (and $x33 $x41 $x57)))))))))))))) :qid k!31))
 ))
 (let ((?x174 (lambda ((q Int) (r Int) (y Int) )(let ((?x36 (* q00 y00)))
 (let ((?x86 (* (- 1) ?x36)))
 (let ((?x62 (* (- 1) r00)))
 (let ((?x64 (* (- 1) y00)))
 (let (($x129 (not (= (+ r ?x64 ?x62 ?x86 (* y00 (+ 1 q))) 0))))
 (let (($x175 (= (+ r ?x62 ?x86 (* y00 q)) 0)))
 (let (($x168 (and (= (+ ?x64 y) 0) $x175 $x129)))
 (let ((?x30 (* (- 1) y00)))
 (let ((?x42 (+ ?x30 y00)))
 (let ((?x45 (- r y00)))
 (let ((?x48 (+ q 1)))
 (let ((?x54 (* 5 ?x48 ?x48 ?x45 ?x45 ?x42)))
 (let (($x55 (= ?x54 0)))
 (let (($x56 (not $x55)))
 (let (($x52 (not (= (+ (- (- ?x45 r00) ?x36) (* ?x48 y00)) 0))))
 (let (($x43 (= ?x42 0)))
 (let (($x44 (not $x43)))
 (let (($x57 (or $x44 $x52 $x56)))
 (let (($x41 (= (+ (- (- r r00) ?x36) (* q y00)) 0)))
 (let (($x33 (= (+ ?x30 y) 0)))
 (let (($x58 (and $x33 $x41 $x57)))
 (rewrite (= $x58 $x168))))))))))))))))))))))))
 ))
 (let ((@x60 (asserted $x59)))
 (let ((@x139 (mp (mp @x60 (quant-intro (proof-bind ?x174) (= $x59 $x171)) $x171) (rewrite (= $x171 $x171)) $x171)))
 (mp (mp @x139 (quant-intro (proof-bind ?x178) (= $x171 $x115)) $x115) @x209 false))))))))))))))

(:max-memory   3.33
 :memory       3.02
 :mk-bool-var  6
 :num-allocs   957489
 :num-checks   1
 :rlimit-count 361
 :time         0.01
 :total-time   0.01)
