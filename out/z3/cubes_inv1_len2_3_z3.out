unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x296 (* (- 6) n!0)))
 (let ((?x358 (+ m!1 ?x296)))
 (let (($x294 (<= ?x358 6)))
 (let (($x359 (= ?x358 6)))
 (let ((?x428 (+ (- 6) m!1 ?x296)))
 (let ((?x491 (* 108 (* k!2 k!2 k!2 m!1))))
 (let ((?x484 (* 9 (* k!2 m!1 m!1 m!1 m!1))))
 (let ((?x524 (* 9 (* k!2 k!2 k!2 m!1 m!1))))
 (let ((?x483 (* 18 (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x176 (* 324 (* k!2 k!2 k!2))))
 (let ((?x226 (* (- 9) m!1)))
 (let ((?x348 (* 9 (* c!3 m!1 m!1 m!1 m!1))))
 (let ((?x302 (* 324 (* c!3 m!1 m!1))))
 (let ((?x237 (* k!2 n!0)))
 (let ((?x658 (* (- 9) ?x237)))
 (let ((?x659 (* 324 (* k!2 m!1 m!1))))
 (let ((?x357 (* 108 (* c!3 m!1 m!1 m!1))))
 (let ((?x661 (* 648 (* k!2 k!2 m!1))))
 (let ((?x655 (* (- 9) k!2)))
 (let ((?x115 (* m!1 n!0)))
 (let ((?x747 (* (- 9) ?x115)))
 (let ((?x691 (* 216 (* k!2 k!2 m!1 m!1))))
 (let ((?x660 (* 108 (* k!2 m!1 m!1 m!1))))
 (let ((?x274 (+ (* 216 (* k!2 c!3 m!1 m!1)) ?x660 ?x691 ?x747 ?x655 ?x661 (* 648 (* k!2 c!3 m!1)) ?x357 ?x659 ?x658 ?x302 (* 18 (* k!2 c!3 m!1 m!1 m!1)) (* 108 (* k!2 k!2 c!3 m!1)) ?x348 ?x226 ?x176 ?x483 ?x524 (* 9 (* k!2 k!2 c!3 m!1 m!1)) ?x484 ?x491 (* 324 (* k!2 k!2 c!3)))))
 (let ((?x475 (+ ?x115 (* (- 3) k!2) ?x237 (* (- 3) c!3) (* 2 n!0))))
 (let (($x203 (not (= (+ k!2 (* (- 3) (* n!0 n!0)) m!1 (* (- 9) n!0)) 6))))
 (let ((?x344 (* k!2 k!2)))
 (let ((?x225 (* m!1 m!1)))
 (let ((?x270 (+ (* 2 (* k!2 m!1)) (* (- 32) k!2) ?x225 ?x658 ?x344 (* (- 27) c!3) (* (- 9) (* c!3 n!0)) (* (- 5) m!1) (* 9 n!0))))
 (let (($x174 (not $x359)))
 (let (($x335 (or $x174 (not (= ?x270 (- 13))) $x203 (not (= ?x475 (- 2))) (not (= (* ?x274 ?x428) 0)))))
 (let ((?x182 (* (- 3) n!0)))
 (let ((?x425 (* n!0 n!0)))
 (let ((?x426 (* (- 3) ?x425)))
 (let ((?x435 (+ k!2 ?x426 ?x182)))
 (let (($x673 (= ?x435 0)))
 (let ((?x424 (* (- 2) n!0)))
 (let ((?x422 (* 3 c!3)))
 (let ((?x407 (* (- 1) ?x237)))
 (let ((?x503 (+ k!2 ?x407 ?x422 ?x424)))
 (let (($x664 (= ?x503 0)))
 (let ((?x163 (* (- 9) n!0)))
 (let ((?x398 (* c!3 n!0)))
 (let ((?x330 (* 9 ?x398)))
 (let ((?x250 (* 18 c!3)))
 (let ((?x685 (* (- 1) ?x344)))
 (let ((?x161 (* 5 k!2)))
 (let ((?x502 (+ ?x161 ?x685 ?x250 ?x330 ?x163)))
 (let (($x492 (= ?x502 4)))
 (let (($x286 (and $x359 $x492 $x664 $x673 $x335)))
 (let ((?x421 (+ ?x655 ?x226 ?x658 ?x659 ?x660 ?x661 ?x691 (* 324 (* c!3 k!2 k!2)) ?x747 (* 108 (* c!3 k!2 k!2 m!1)) ?x357 ?x302 ?x176 (* 216 (* c!3 k!2 m!1 m!1)) (* 648 (* c!3 k!2 m!1)) (* 9 (* c!3 k!2 k!2 m!1 m!1)) ?x524 (* 18 (* c!3 k!2 m!1 m!1 m!1)) ?x483 ?x348 ?x484 ?x491)))
 (let ((?x647 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x163 ?x685 (* 9 ?x237) ?x330 (* (- 2) (* k!2 m!1)) (* (- 1) ?x225))))
 (let (($x198 (or $x174 (not (= (+ k!2 m!1 ?x163 ?x426) 6)) (not (= ?x647 13)) (not (= (+ ?x422 (* 3 k!2) ?x424 ?x407 (* (- 1) ?x115)) 2)) (not (= (* ?x421 ?x428) 0)))))
 (let (($x584 (and $x359 (= (+ ?x250 ?x161 ?x163 ?x685 ?x330) 4) (= (+ ?x422 k!2 ?x424 ?x407) 0) (= (+ k!2 ?x182 ?x426) 0) $x198)))
 (let (($x663 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x125 (* (- 6) n)))
 (let ((?x131 (+ (- 6) m ?x125)))
 (let ((?x632 (* 9 (* k m m m m))))
 (let ((?x630 (* 9 (* c m m m m))))
 (let ((?x620 (* 9 (* k k k m m))))
 (let ((?x618 (* 9 (* c k k m m))))
 (let ((?x396 (* m n)))
 (let ((?x670 (* (- 9) ?x396)))
 (let ((?x52 (* k n)))
 (let ((?x427 (* (- 9) ?x52)))
 (let ((?x667 (* (- 9) m)))
 (let ((?x433 (* (- 9) k)))
 (let ((?x727 (+ ?x433 ?x667 ?x427 (* 324 (* k m m)) (* 108 (* k m m m)) (* 648 (* k k m)) (* 216 (* k k m m)) (* 324 (* c k k)) ?x670 (* 108 (* c k k m)) (* 108 (* c m m m)) (* 324 (* c m m)) (* 324 (* k k k)) (* 216 (* c k m m)) (* 648 (* c k m)) ?x618 ?x620 (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x630 ?x632 (* 108 (* k k k m)))))
 (let ((?x262 (* (- 1) ?x52)))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let (($x577 (not (= (+ ?x259 (* 3 k) ?x261 ?x262 (* (- 1) ?x396)) 2))))
 (let ((?x159 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x459 (* 5 m)))
 (let ((?x547 (+ (* 27 c) (* 32 k) ?x459 ?x221 ?x222 (* 9 ?x52) ?x159 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x551 (not (= ?x547 13))))
 (let (($x142 (= (+ m ?x125) 6)))
 (let (($x360 (not $x142)))
 (let (($x144 (or $x360 (not (= (+ k m ?x221 (* (- 3) (* n n))) 6)) $x551 $x577 (not (= (* ?x727 ?x131) 0)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x264 (= (+ ?x259 k ?x261 ?x262) 0)))
 (let (($x219 (= (+ (* 18 c) (* 5 k) ?x221 ?x222 ?x159) 4)))
 (and $x142 $x219 $x264 $x300 $x144))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x326 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x125 (* (- 6) n)))
 (let ((?x131 (+ (- 6) m ?x125)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x353 (+ 6 m)))
 (let ((?x638 (+ (* 9 (* ?x353 ?x353 ?x74 ?x74 ?x71)) (* (- 9) (* (+ 1 n) ?x74)))))
 (let (($x648 (not (= (* ?x638 ?x131) 0))))
 (let ((?x221 (* (- 9) n)))
 (let ((?x459 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x553 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) ?x71)) ?x459 ?x221 (* (- 1) (* ?x74 ?x74)))))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let ((?x402 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) ?x74)) m ?x261)))
 (let (($x142 (= (+ m ?x125) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x180 (* (- 1) m)))
 (let ((?x379 (* (- 1) k)))
 (let (($x278 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x379 ?x180 ?x61) (- 3))))
 (let (($x289 (not $x278)))
 (let (($x523 (= (+ (* 3 (* n n)) ?x379 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x142 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x221 ?x222) 4) (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x523 (or $x289 $x360 (not (= ?x402 2)) (not (= ?x553 13)) $x648))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x400 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x125 (* (- 6) n)))
 (let ((?x131 (+ (- 6) m ?x125)))
 (let ((?x632 (* 9 (* k m m m m))))
 (let ((?x630 (* 9 (* c m m m m))))
 (let ((?x620 (* 9 (* k k k m m))))
 (let ((?x618 (* 9 (* c k k m m))))
 (let ((?x396 (* m n)))
 (let ((?x670 (* (- 9) ?x396)))
 (let ((?x52 (* k n)))
 (let ((?x427 (* (- 9) ?x52)))
 (let ((?x667 (* (- 9) m)))
 (let ((?x433 (* (- 9) k)))
 (let ((?x727 (+ ?x433 ?x667 ?x427 (* 324 (* k m m)) (* 108 (* k m m m)) (* 648 (* k k m)) (* 216 (* k k m m)) (* 324 (* c k k)) ?x670 (* 108 (* c k k m)) (* 108 (* c m m m)) (* 324 (* c m m)) (* 324 (* k k k)) (* 216 (* c k m m)) (* 648 (* c k m)) ?x618 ?x620 (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x630 ?x632 (* 108 (* k k k m)))))
 (let ((?x262 (* (- 1) ?x52)))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let (($x577 (not (= (+ ?x259 (* 3 k) ?x261 ?x262 (* (- 1) ?x396)) 2))))
 (let ((?x159 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x459 (* 5 m)))
 (let ((?x547 (+ (* 27 c) (* 32 k) ?x459 ?x221 ?x222 (* 9 ?x52) ?x159 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x551 (not (= ?x547 13))))
 (let (($x142 (= (+ m ?x125) 6)))
 (let (($x360 (not $x142)))
 (let (($x144 (or $x360 (not (= (+ k m ?x221 (* (- 3) (* n n))) 6)) $x551 $x577 (not (= (* ?x727 ?x131) 0)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x264 (= (+ ?x259 k ?x261 ?x262) 0)))
 (let (($x219 (= (+ (* 18 c) (* 5 k) ?x221 ?x222 ?x159) 4)))
 (let (($x713 (and $x142 $x219 $x264 $x300 $x144)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x353 (+ 6 m)))
 (let ((?x638 (+ (* 9 (* ?x353 ?x353 ?x74 ?x74 ?x71)) (* (- 9) (* (+ 1 n) ?x74)))))
 (let (($x648 (not (= (* ?x638 ?x131) 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x553 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) ?x71)) ?x459 ?x221 (* (- 1) (* ?x74 ?x74)))))
 (let ((?x402 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) ?x74)) m ?x261)))
 (let ((?x61 (* 3 n)))
 (let ((?x180 (* (- 1) m)))
 (let ((?x379 (* (- 1) k)))
 (let (($x278 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x379 ?x180 ?x61) (- 3))))
 (let (($x289 (not $x278)))
 (let (($x523 (= (+ (* 3 (* n n)) ?x379 ?x61) 0)))
 (let (($x172 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x221 ?x222) 4)))
 (let (($x245 (and $x142 $x172 (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x523 (or $x289 $x360 (not (= ?x402 2)) (not (= ?x553 13)) $x648))))
 (rewrite (= $x245 $x713))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x173 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x481 (* (- 18) c)))
 (let ((?x354 (+ ?x481 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x125 (* (- 6) n)))
 (let ((?x131 (+ (- 6) m ?x125)))
 (let ((?x432 (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 (+ c k)))))
 (let (($x648 (not (= (* (+ ?x432 (* (- 9) (* (+ 1 n) ?x74))) ?x131) 0))))
 (let (($x142 (= (+ m ?x125) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x180 (* (- 1) m)))
 (let ((?x379 (* (- 1) k)))
 (let (($x278 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x379 ?x180 ?x61) (- 3))))
 (let (($x289 (not $x278)))
 (let ((?x56 (* 2 n)))
 (let ((?x390 (+ 1 n)))
 (let ((?x436 (* ?x390 ?x74)))
 (let ((?x366 (* (- 3) c)))
 (let (($x440 (or (not (= (+ ?x366 (* (- 4) k) ?x436 ?x180 ?x56) (- 2))) $x289 $x360 $x648 (not (= ?x354 (- 13))))))
 (let (($x523 (= (+ (* 3 (* n n)) ?x379 ?x61) 0)))
 (let (($x132 (= (+ ?x481 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x142 $x132 (= (+ ?x366 (* n k) ?x379 ?x56) 0) $x523 $x440)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x532 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x125 (* (- 6) n)))
 (let ((?x131 (+ (- 6) m ?x125)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x353 (+ 6 m)))
 (let ((?x638 (+ (* 9 (* ?x353 ?x353 ?x74 ?x74 ?x71)) (* (- 9) (* (+ 1 n) ?x74)))))
 (let (($x648 (not (= (* ?x638 ?x131) 0))))
 (let ((?x221 (* (- 9) n)))
 (let ((?x459 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x553 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) ?x71)) ?x459 ?x221 (* (- 1) (* ?x74 ?x74)))))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let ((?x402 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) ?x74)) m ?x261)))
 (let (($x142 (= (+ m ?x125) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x180 (* (- 1) m)))
 (let ((?x379 (* (- 1) k)))
 (let (($x278 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x379 ?x180 ?x61) (- 3))))
 (let (($x289 (not $x278)))
 (let (($x523 (= (+ (* 3 (* n n)) ?x379 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x245 (and $x142 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x221 ?x222) 4) (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x523 (or $x289 $x360 (not (= ?x402 2)) (not (= ?x553 13)) $x648))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x481 (* (- 18) c)))
 (let ((?x354 (+ ?x481 (* (- 23) k) (* (- 9) (* (+ 1 n) ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x390 (+ 1 n)))
 (let ((?x436 (* ?x390 ?x74)))
 (let ((?x366 (* (- 3) c)))
 (let (($x440 (or (not (= (+ ?x366 (* (- 4) k) ?x436 ?x180 ?x56) (- 2))) $x289 $x360 $x648 (not (= ?x354 (- 13))))))
 (let (($x132 (= (+ ?x481 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x166 (and $x142 $x132 (= (+ ?x366 (* n k) ?x379 ?x56) 0) $x523 $x440)))
 (rewrite (= $x166 $x245))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x98 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x101 (- (* 9 ?x71 ?x74 ?x74 ?x98 ?x98) (* 9 ?x74 (+ n 1)))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let (($x105 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 (+ n 1)) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x101) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x105)))))))))))))))) :qid k!38))
 ))
 (let ((?x110 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x481 (* (- 18) c)))
 (let ((?x354 (+ ?x481 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x125 (* (- 6) n)))
 (let ((?x131 (+ (- 6) m ?x125)))
 (let ((?x432 (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 (+ c k)))))
 (let (($x648 (not (= (* (+ ?x432 (* (- 9) (* (+ 1 n) ?x74))) ?x131) 0))))
 (let (($x142 (= (+ m ?x125) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x180 (* (- 1) m)))
 (let ((?x379 (* (- 1) k)))
 (let (($x278 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x379 ?x180 ?x61) (- 3))))
 (let (($x289 (not $x278)))
 (let ((?x56 (* 2 n)))
 (let ((?x390 (+ 1 n)))
 (let ((?x436 (* ?x390 ?x74)))
 (let ((?x366 (* (- 3) c)))
 (let (($x440 (or (not (= (+ ?x366 (* (- 4) k) ?x436 ?x180 ?x56) (- 2))) $x289 $x360 $x648 (not (= ?x354 (- 13))))))
 (let (($x523 (= (+ (* 3 (* n n)) ?x379 ?x61) 0)))
 (let (($x132 (= (+ ?x481 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x166 (and $x142 $x132 (= (+ ?x366 (* n k) ?x379 ?x56) 0) $x523 $x440)))
 (let ((?x101 (- (* 9 (+ c k) ?x74 ?x74 (+ m 6) (+ m 6)) (* 9 ?x74 (+ n 1)))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x105 (or (not (= ?x68 0)) (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x101) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x106 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x105)))
 (rewrite (= $x106 $x166))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x498 (mp (mp @x108 (quant-intro (proof-bind ?x110) (= $x107 $x173)) $x173) (rewrite (= $x173 $x173)) $x173)))
 (let ((@x488 (mp (mp @x498 (quant-intro (proof-bind ?x532) (= $x173 $x326)) $x326) (quant-intro (proof-bind ?x400) (= $x326 $x663)) $x663)))
 (let ((@x675 (mp (mp~ @x488 (sk (~ $x663 $x584)) $x584) (rewrite (= $x584 $x286)) $x286)))
 (let ((@x148 (and-elim @x675 $x359)))
 (let ((@x251 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x174 $x294)) @x148 $x294)))
 (let (($x291 (>= ?x358 6)))
 (let ((@x514 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x174 $x291)) @x148 $x291)))
 (let (($x395 (<= ?x435 0)))
 (let ((@x325 (and-elim @x675 $x673)))
 (let ((@x254 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x673) $x395)) @x325 $x395)))
 (let (($x501 (>= ?x435 0)))
 (let ((@x249 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x673) $x501)) @x325 $x501)))
 (let (($x373 (<= ?x502 4)))
 (let ((@x194 (and-elim @x675 $x492)))
 (let ((@x754 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x492) $x373)) @x194 $x373)))
 (let (($x284 (>= ?x502 4)))
 (let ((@x150 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x492) $x284)) @x194 $x284)))
 (let (($x288 (<= ?x503 0)))
 (let ((@x387 (and-elim @x675 $x664)))
 (let ((@x164 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x664) $x288)) @x387 $x288)))
 (let (($x716 (>= ?x503 0)))
 (let ((@x309 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x664) $x716)) @x387 $x716)))
 (let ((@x1536 ((_ th-lemma arith) @x251 (hypothesis (>= (+ m!1 ?x182) 18)) @x514 @x251 @x514 @x251 @x249 @x254 @x514 @x251 @x249 @x254 @x514 @x251 @x150 @x754 @x514 @x251 @x309 @x164 @x514 @x251 false)))
 (let ((@x1460 ((_ th-lemma arith) @x249 @x251 (hypothesis (>= (+ m!1 ?x182) 10)) (lemma @x1536 (not (>= (+ m!1 ?x182) 18))) @x249 @x254 @x514 @x251 @x249 @x254 @x249 @x254 @x150 @x754 @x309 @x164 @x249 @x254 false)))
 (let (($x789 (<= c!3 1)))
 (let ((@x815 (hypothesis $x789)))
 (let (($x1302 (<= c!3 0)))
 (let ((@x1176 (hypothesis $x1302)))
 (let (($x138 (>= c!3 0)))
 (let ((?x140 (* (- 1) ?x425)))
 (let ((?x879 (+ (* 2 k!2) (* 6 c!3) (* 3 ?x398) ?x140 (* (- 4) n!0))))
 (let (($x874 (>= ?x879 4)))
 (let (($x701 (not $x138)))
 (let ((@x702 (hypothesis $x701)))
 (let (($x876 (<= m!1 6)))
 (let (($x1045 (not $x876)))
 (let ((@x1042 (hypothesis $x876)))
 (let (($x388 (>= ?x344 0)))
 (let ((@x403 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x388)) false) $x388)))
 (let (($x840 (>= ?x398 1)))
 (let (($x714 (not $x840)))
 (let (($x214 (<= m!1 0)))
 (let (($x1002 (not $x214)))
 (let (($x256 (>= n!0 0)))
 (let (($x634 (<= ?x475 (- 2))))
 (let (($x769 (not $x634)))
 (let (($x384 (>= ?x475 (- 2))))
 (let ((@x208 ((_ th-lemma arith) (hypothesis (not $x384)) @x514 @x251 @x309 @x164 @x249 @x254 false)))
 (let ((@x376 (lemma @x208 $x384)))
 (let ((@x676 ((_ th-lemma arith) @x514 @x251 @x249 @x254 @x309 @x164 @x376 (hypothesis $x634) false)))
 (let (($x266 (not $x256)))
 (let ((@x268 (hypothesis $x266)))
 (let (($x236 (>= ?x398 4)))
 (let (($x528 (>= ?x398 3)))
 (let ((@x770 (hypothesis $x769)))
 (let ((?x695 (+ (* 4 k!2) (* 12 c!3) (* 5 ?x398) ?x140 (* (- 8) n!0))))
 (let (($x748 (not $x528)))
 (let ((@x709 (hypothesis $x748)))
 (let (($x209 (>= n!0 (- 1))))
 (let (($x780 (not $x209)))
 (let (($x742 (>= c!3 1)))
 (let ((@x774 (unit-resolution ((_ th-lemma arith assign-bounds -1 -6) (or $x214 (not $x294) $x256)) @x268 @x251 $x214)))
 (let (($x698 (>= m!1 0)))
 (let (($x697 (not $x742)))
 (let ((@x763 (hypothesis $x697)))
 (let ((@x136 (hypothesis $x138)))
 (let ((@x753 ((_ th-lemma arith) @x309 @x164 @x249 @x254 @x309 @x164 @x136 @x763 @x309 @x164 @x309 @x164 @x309 @x164 @x249 @x254 @x249 @x254 @x136 @x763 @x249 @x254 @x136 @x763 @x309 @x164 @x309 @x164 @x150 @x754 @x514 @x251 @x249 @x254 @x249 @x254 @x136 @x763 false)))
 (let ((@x775 (unit-resolution (lemma @x753 (or $x701 $x742)) @x763 $x701)))
 (let ((@x706 ((_ th-lemma arith gomory-cut -1/5 1/5) (hypothesis (not $x698)) @x514 (<= n!0 (- 2)))))
 (let ((@x764 ((_ th-lemma arith farkas 1/3 1/3 1/3 1/3 1/3 1/3 7/3 7/3 7/3 7/3 3 3 3 3 3 3 3 3 3 3 1 1 1) @x763 @x268 @x709 @x702 @x706 @x164 @x763 @x268 @x709 @x702 @x763 @x268 @x709 @x702 @x706 @x763 @x268 @x709 @x702 @x706 @x249 @x268 @x709 false)))
 (let ((@x776 (unit-resolution (lemma @x764 (or $x138 $x742 $x256 $x528 $x698)) @x775 @x268 @x709 @x763 $x698)))
 (let ((@x777 ((_ th-lemma arith farkas -3/2 1/6 1/3 1/2 -1/2 3 1 1 1 1 1) @x309 @x776 @x251 @x774 @x770 @x775 @x309 @x776 @x774 @x770 @x268 false)))
 (let ((@x350 (unit-resolution (lemma @x777 (or $x742 $x634 $x256 $x528)) @x709 @x268 @x770 $x742)))
 (let ((@x258 (hypothesis $x209)))
 (let ((@x782 (lemma ((_ th-lemma arith farkas 1/2 3/2 1/4 1/4 1/4 3/4 1) @x249 @x268 @x258 @x268 @x164 (hypothesis $x742) @x258 false) (or $x780 $x256 $x697))))
 (let ((@x310 ((_ th-lemma arith) @x251 (unit-resolution @x782 @x350 @x268 $x780) ((_ th-lemma arith gomory-cut 1/2 1/2 1/2 -3/4) @x249 @x150 @x403 @x709 (>= ?x695 2)) @x249 @x254 @x150 @x754 @x249 @x254 @x150 @x754 @x150 @x754 @x249 @x254 @x514 @x251 @x150 @x754 @x309 @x164 @x249 @x254 @x249 @x254 @x150 @x754 false)))
 (let (($x809 (<= c!3 (- 2))))
 (let (($x559 (not $x809)))
 (let (($x801 (>= c!3 (- 2))))
 (let (($x312 (>= ?x237 (- 3))))
 (let ((@x738 (hypothesis (not $x312))))
 (let ((@x581 ((_ th-lemma arith gomory-cut 1 1/2 1/2) @x249 @x738 @x268 (>= (+ k!2 (* (- 2) ?x425) ?x424) 1))))
 (let ((@x784 ((_ th-lemma arith) @x738 @x164 @x268 @x581 @x254 @x581 @x249 @x254 @x249 @x254 @x309 @x164 @x249 @x254 @x249 @x254 @x309 @x164 @x150 @x754 false)))
 (let ((@x759 (unit-resolution (lemma @x784 (or $x312 $x256)) @x268 $x312)))
 (let (($x758 (not $x801)))
 (let ((@x137 (hypothesis $x758)))
 (let ((@x677 ((_ th-lemma arith) @x137 @x759 @x309 @x268 @x249 @x268 @x759 @x137 @x759 @x309 @x268 false)))
 (let ((@x212 (hypothesis $x809)))
 (let ((@x642 (hypothesis $x801)))
 (let ((@x276 ((_ th-lemma arith) @x249 @x254 @x642 @x212 @x309 @x164 @x249 @x254 @x249 @x254 @x642 @x212 @x642 @x212 @x642 @x212 @x642 @x212 @x309 @x164 @x309 @x164 @x249 @x254 @x642 @x212 @x642 @x212 @x642 @x212 @x150 @x754 false)))
 (let ((@x736 (unit-resolution (lemma @x276 (or $x559 $x758)) (unit-resolution (lemma @x677 (or $x801 $x256)) @x268 $x801) $x559)))
 (let ((@x807 (hypothesis $x528)))
 (let ((@x826 (hypothesis (not $x236))))
 (let ((@x818 ((_ th-lemma arith) @x309 @x164 @x309 @x164 @x150 @x754 @x736 @x807 @x268 @x736 @x807 @x268 @x736 @x807 @x268 @x736 @x807 @x268 @x736 @x807 @x268 @x736 @x807 @x268 @x826 @x736 @x807 @x268 @x807 @x736 @x268 @x249 @x254 @x826 @x736 @x807 @x268 @x807 @x736 @x268 false)))
 (let ((@x690 (unit-resolution (lemma @x818 (or $x236 $x748 $x256)) (unit-resolution (lemma @x310 (or $x528 $x256 $x634)) @x268 @x770 $x528) @x268 $x236)))
 (let ((@x656 ((_ th-lemma arith) @x690 @x736 @x268 @x690 @x736 @x268 @x736 @x268 @x759 @x249 @x254 @x736 @x690 @x268 @x736 @x690 @x268 false)))
 (let ((@x1005 (unit-resolution ((_ th-lemma arith assign-bounds 1 6) (or $x1002 (not $x291) $x266)) @x514 (or $x1002 $x266))))
 (let ((@x1006 (unit-resolution @x1005 (unit-resolution (lemma @x656 (or $x256 $x634)) (lemma @x676 $x769) $x256) $x1002)))
 (let ((@x1009 (lemma ((_ th-lemma arith farkas 1/6 -1/6 1 1) @x251 @x1006 (hypothesis $x840) @x702 false) (or $x714 $x138))))
 (let ((@x1024 (unit-resolution @x1009 @x702 $x714)))
 (let ((@x1044 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 0 -18/5 6/5 -2/5 1) @x514 @x1024 @x702 @x514 @x1042 @x309 @x376 @x1024 @x702 ((_ th-lemma arith gomory-cut 1/2 1/2 1/2) @x150 @x403 @x249 (>= ?x879 2)) @x254 @x1042 false)))
 (let ((@x1030 ((_ th-lemma arith farkas 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1) @x249 @x150 @x150 @x403 @x1024 @x702 @x251 (unit-resolution (lemma @x1044 (or $x1045 $x138)) @x702 $x1045) (hypothesis (not $x874)) false)))
 (let ((@x846 ((_ th-lemma arith) @x702 (unit-resolution (lemma @x1030 (or $x874 $x138)) @x702 $x874) @x249 @x254 @x249 @x254 @x249 @x254 @x150 @x754 @x309 @x164 @x249 @x254 false)))
 (let ((@x1048 (lemma @x846 $x138)))
 (let ((@x850 ((_ th-lemma arith) @x249 @x254 @x150 @x754 @x249 @x254 @x1048 @x1176 @x1048 @x1176 @x249 @x254 @x1048 @x1176 @x249 @x254 @x309 @x164 @x1048 @x1176 @x249 @x254 @x514 @x251 @x514 @x251 @x1048 @x1176 false)))
 (let ((@x1260 (lemma @x850 (not $x1302))))
 (let ((@x866 ((_ th-lemma arith) @x1260 @x815 @x1260 @x815 @x249 @x254 @x1260 @x815 @x249 @x254 @x1260 @x815 @x1260 @x815 @x1260 @x815 @x1260 @x815 @x249 @x254 @x150 @x754 @x1260 @x815 @x1260 @x815 @x309 @x164 @x1260 @x815 false)))
 ((_ th-lemma arith) (lemma @x866 (not $x789)) (lemma @x1460 (not (>= (+ m!1 ?x182) 10))) @x514 @x251 @x249 @x254 @x514 @x251 @x514 @x251 @x309 @x164 @x249 @x254 @x249 @x254 @x150 @x754 @x249 @x254 @x514 @x251 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 108
 :arith-assert-diseq        22
 :arith-assert-lower        1234
 :arith-assert-upper        516
 :arith-bound-prop          22
 :arith-branch-var          34
 :arith-conflicts           56
 :arith-eq-adapter          19
 :arith-fixed-eqs           170
 :arith-gcd-tests           400
 :arith-gomory-cuts         24
 :arith-grobner             57
 :arith-ineq-splits         34
 :arith-max-min             6700
 :arith-nonlinear-bounds    708
 :arith-nonlinear-horner    520
 :arith-num-rows            23
 :arith-offset-eqs          1
 :arith-patches             102
 :arith-patches_succ        34
 :arith-pivots              728
 :arith-pseudo-nonlinear    226
 :arith-row-summations      4125
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    23
 :conflicts                 64
 :decisions                 312
 :del-clause                112
 :final-checks              211
 :max-memory                4.04
 :memory                    3.33
 :minimized-lits            9
 :mk-bool-var               256
 :mk-clause                 172
 :num-allocs                5945838
 :num-checks                1
 :propagations              284
 :rlimit-count              307713
 :time                      0.12
 :total-time                0.13)
