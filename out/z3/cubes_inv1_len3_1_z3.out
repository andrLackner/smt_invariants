unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let (($x439 (<= n!0 (- 1))))
 (let ((?x685 (* (- 1) k!2)))
 (let ((?x857 (* n!0 n!0)))
 (let ((?x749 (* 3 ?x857)))
 (let ((?x748 (+ (* 3 n!0) ?x749 ?x685)))
 (let (($x227 (<= ?x748 0)))
 (let (($x746 (= ?x748 0)))
 (let ((?x506 (* (- 42) (* k!2 k!2 k!2))))
 (let ((?x789 (* 648 (* c!3 k!2))))
 (let ((?x794 (* 324 (* c!3 c!3))))
 (let ((?x753 (* 2 (* m!1 m!1 m!1))))
 (let ((?x205 (* (- 84) (* c!3 k!2 k!2))))
 (let ((?x408 (* 2 (* c!3 c!3 m!1 m!1))))
 (let ((?x277 (* k!2 k!2)))
 (let ((?x805 (* 336 ?x277)))
 (let ((?x237 (* m!1 m!1)))
 (let ((?x559 (* 12 ?x237)))
 (let ((?x539 (* (- 42) (* c!3 c!3 k!2))))
 (let ((?x473 (* 66 (* c!3 c!3 m!1))))
 (let ((?x308 (+ (* 24 (* m!1 k!2)) (* (- 7) (* c!3 c!3 m!1 k!2)) ?x473 ?x539 (* 9 (* n!0 m!1 m!1 k!2 k!2)) (* 648 (* n!0 c!3 k!2)) ?x559 ?x805 ?x408 ?x205 ?x753 (* 68 (* m!1 k!2 k!2)) ?x794 (* 324 (* n!0 c!3 c!3)) (* 132 (* c!3 m!1 k!2)) ?x789 (* (- 14) (* c!3 m!1 k!2 k!2)) ?x506 (* (- 7) (* m!1 k!2 k!2 k!2)) (* 4 (* c!3 m!1 m!1 k!2)) (* 2 (* m!1 m!1 k!2 k!2)) (* 9 (* n!0 c!3 c!3 m!1 m!1)) (* 18 (* n!0 c!3 m!1 m!1 k!2)) (* 108 (* n!0 c!3 c!3 m!1)) (* 110 (* n!0 m!1 k!2 k!2)) (* 2 (* n!0 m!1 m!1 m!1)) (* 4 (* n!0 m!1 m!1 k!2)) (* 216 (* n!0 c!3 m!1 k!2)) (* 336 (* n!0 k!2 k!2)) (* 4 (* m!1 m!1 k!2)) (* 24 (* n!0 m!1 k!2)) (* 12 (* n!0 m!1 m!1)))))
 (let ((?x164 (* (- 3) c!3)))
 (let ((?x682 (* 2 n!0)))
 (let ((?x116 (* n!0 k!2)))
 (let ((?x152 (* (- 1) m!1)))
 (let ((?x153 (+ (* 6 n!0) ?x152)))
 (let (($x221 (= ?x153 (- 6))))
 (let (($x739 (not $x221)))
 (let ((?x154 (* 32 k!2)))
 (let ((?x379 (* 5 m!1)))
 (let ((?x438 (* 27 c!3)))
 (let ((?x412 (* (- 9) n!0)))
 (let ((?x332 (* (- 1) ?x277)))
 (let ((?x158 (* (- 1) ?x237)))
 (let ((?x229 (* n!0 c!3)))
 (let ((?x124 (* 9 ?x229)))
 (let ((?x771 (+ (* 9 ?x116) (* (- 2) (* m!1 k!2)) ?x124 ?x158 ?x332 ?x412 ?x438 ?x379 ?x154)))
 (let (($x787 (or (not (= ?x771 13)) $x739 (not (= (+ (* 9 n!0) ?x152 ?x749 ?x685) (- 6))) (not (= (+ ?x116 ?x682 ?x164 (* n!0 m!1) (* (- 3) k!2)) (- 2))) (not (= (* (+ (- 6) (* (- 6) n!0) m!1) ?x308) 0)))))
 (let ((?x720 (+ ?x116 ?x682 ?x164 ?x685)))
 (let (($x721 (= ?x720 0)))
 (let ((?x411 (* 5 k!2)))
 (let ((?x508 (* 18 c!3)))
 (let ((?x120 (+ ?x124 ?x332 ?x412 ?x508 ?x411)))
 (let (($x141 (= ?x120 4)))
 (let (($x211 (and $x221 $x141 $x721 $x746 $x787)))
 (let ((?x950 (+ ?x805 (* 324 (* c!3 c!3 n!0)) ?x789 ?x794 ?x506 (* 68 (* k!2 k!2 m!1)) ?x205 ?x473 ?x539 (* 24 (* k!2 m!1)) ?x559 (* 132 (* c!3 k!2 m!1)) (* (- 7) (* c!3 c!3 k!2 m!1)) (* (- 14) (* c!3 k!2 k!2 m!1)) (* (- 7) (* k!2 k!2 k!2 m!1)) ?x408 (* 4 (* c!3 k!2 m!1 m!1)) (* 2 (* k!2 k!2 m!1 m!1)) (* 9 (* c!3 c!3 m!1 m!1 n!0)) (* 18 (* c!3 k!2 m!1 m!1 n!0)) (* 9 (* k!2 k!2 m!1 m!1 n!0)) (* 108 (* c!3 c!3 m!1 n!0)) (* 110 (* k!2 k!2 m!1 n!0)) (* 4 (* k!2 m!1 m!1 n!0)) (* 2 (* m!1 m!1 m!1 n!0)) (* 648 (* c!3 k!2 n!0)) (* 216 (* c!3 k!2 m!1 n!0)) (* 336 (* k!2 k!2 n!0)) ?x753 (* 24 (* k!2 m!1 n!0)) (* 4 (* k!2 m!1 m!1)) (* 12 (* m!1 m!1 n!0)))))
 (let ((?x270 (* k!2 n!0)))
 (let ((?x176 (* (- 1) ?x270)))
 (let ((?x269 (* (- 2) n!0)))
 (let ((?x427 (* 3 c!3)))
 (let (($x123 (= (+ ?x427 (* 3 k!2) ?x269 ?x176 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x356 (* 9 (* c!3 n!0))))
 (let ((?x468 (+ ?x438 ?x154 ?x379 ?x412 ?x332 (* 9 ?x270) ?x356 (* (- 2) (* k!2 m!1)) ?x158)))
 (let (($x494 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x412 (* (- 3) ?x857)) 6)) (not (= ?x468 13)) (not $x123) (not (= (* (+ (- 6) m!1 (* (- 6) n!0)) ?x950) 0)))))
 (let (($x820 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x518 (and $x820 (= (+ ?x508 ?x411 ?x412 ?x332 ?x356) 4) (= (+ ?x427 k!2 ?x269 ?x176) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x857)) 0) $x494)))
 (let (($x137 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x718 (* 2 (* m m m n))))
 (let ((?x678 (* 9 (* k k m m n))))
 (let ((?x672 (* 9 (* c c m m n))))
 (let ((?x592 (* (- 7) (* k k k m))))
 (let ((?x582 (* (- 7) (* c c k m))))
 (let ((?x1063 (+ (* 336 (* k k)) (* 324 (* c c n)) (* 648 (* c k)) (* 324 (* c c)) (* (- 42) (* k k k)) (* 68 (* k k m)) (* (- 84) (* c k k)) (* 66 (* c c m)) (* (- 42) (* c c k)) (* 24 (* k m)) (* 12 (* m m)) (* 132 (* c k m)) ?x582 (* (- 14) (* c k k m)) ?x592 (* 2 (* c c m m)) (* 4 (* c k m m)) (* 2 (* k k m m)) ?x672 (* 18 (* c k m m n)) ?x678 (* 108 (* c c m n)) (* 110 (* k k m n)) (* 4 (* k m m n)) ?x718 (* 648 (* c k n)) (* 216 (* c k m n)) (* 336 (* k k n)) (* 2 (* m m m)) (* 24 (* k m n)) (* 4 (* k m m)) (* 12 (* m m n)))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let ((?x52 (* k n)))
 (let ((?x265 (* (- 1) ?x52)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let (($x572 (= (+ ?x262 (* 3 k) ?x264 ?x265 (* (- 1) (* m n))) 2)))
 (let (($x580 (not $x572)))
 (let ((?x162 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x550 (+ (* 27 c) (* 32 k) ?x462 ?x224 ?x225 (* 9 ?x52) ?x162 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x554 (not (= ?x550 13))))
 (let (($x145 (= (+ m ?x128) 6)))
 (let (($x363 (not $x145)))
 (let (($x928 (or $x363 (not (= (+ k m ?x224 (* (- 3) (* n n))) 6)) $x554 $x580 (not (= (* ?x134 ?x1063) 0)))))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x267 (= (+ ?x262 k ?x264 ?x265) 0)))
 (let (($x222 (= (+ (* 18 c) (* 5 k) ?x224 ?x225 ?x162) 4)))
 (and $x145 $x222 $x267 $x303 $x928)))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x416 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let ((?x284 (+ ?x262 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x264)))
 (let ((?x306 (* 2 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x71 (+ c k)))
 (let ((?x435 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x236 (+ (* (- 7) (* ?x435 (+ k m) ?x71 ?x71)) (* 9 (* ?x464 ?x435 ?x435 ?x71 ?x71)) ?x306)))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x290 (not (= (* ?x134 ?x236) 0))))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x185 (+ ?x37 (* 23 k) (* 9 (* ?x464 ?x71)) ?x462 ?x224 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x61 (* 3 n)))
 (let ((?x309 (* (- 1) m)))
 (let ((?x402 (* (- 1) k)))
 (let (($x258 (not (= (+ (* 3 (* ?x464 ?x464)) ?x402 ?x309 ?x61) (- 3)))))
 (let (($x368 (= (+ (* 3 (* n n)) ?x402 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x145 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x224 ?x225) 4) (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x368 (or $x258 (not (= ?x185 13)) $x290 (not (= ?x284 2)) $x363))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x138 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x718 (* 2 (* m m m n))))
 (let ((?x678 (* 9 (* k k m m n))))
 (let ((?x672 (* 9 (* c c m m n))))
 (let ((?x592 (* (- 7) (* k k k m))))
 (let ((?x582 (* (- 7) (* c c k m))))
 (let ((?x1063 (+ (* 336 (* k k)) (* 324 (* c c n)) (* 648 (* c k)) (* 324 (* c c)) (* (- 42) (* k k k)) (* 68 (* k k m)) (* (- 84) (* c k k)) (* 66 (* c c m)) (* (- 42) (* c c k)) (* 24 (* k m)) (* 12 (* m m)) (* 132 (* c k m)) ?x582 (* (- 14) (* c k k m)) ?x592 (* 2 (* c c m m)) (* 4 (* c k m m)) (* 2 (* k k m m)) ?x672 (* 18 (* c k m m n)) ?x678 (* 108 (* c c m n)) (* 110 (* k k m n)) (* 4 (* k m m n)) ?x718 (* 648 (* c k n)) (* 216 (* c k m n)) (* 336 (* k k n)) (* 2 (* m m m)) (* 24 (* k m n)) (* 4 (* k m m)) (* 12 (* m m n)))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let ((?x52 (* k n)))
 (let ((?x265 (* (- 1) ?x52)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let (($x572 (= (+ ?x262 (* 3 k) ?x264 ?x265 (* (- 1) (* m n))) 2)))
 (let (($x580 (not $x572)))
 (let ((?x162 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x550 (+ (* 27 c) (* 32 k) ?x462 ?x224 ?x225 (* 9 ?x52) ?x162 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x554 (not (= ?x550 13))))
 (let (($x145 (= (+ m ?x128) 6)))
 (let (($x363 (not $x145)))
 (let (($x928 (or $x363 (not (= (+ k m ?x224 (* (- 3) (* n n))) 6)) $x554 $x580 (not (= (* ?x134 ?x1063) 0)))))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x267 (= (+ ?x262 k ?x264 ?x265) 0)))
 (let (($x222 (= (+ (* 18 c) (* 5 k) ?x224 ?x225 ?x162) 4)))
 (let (($x985 (and $x145 $x222 $x267 $x303 $x928)))
 (let ((?x284 (+ ?x262 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x264)))
 (let ((?x306 (* 2 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x71 (+ c k)))
 (let ((?x435 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x236 (+ (* (- 7) (* ?x435 (+ k m) ?x71 ?x71)) (* 9 (* ?x464 ?x435 ?x435 ?x71 ?x71)) ?x306)))
 (let (($x290 (not (= (* ?x134 ?x236) 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x185 (+ ?x37 (* 23 k) (* 9 (* ?x464 ?x71)) ?x462 ?x224 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x61 (* 3 n)))
 (let ((?x309 (* (- 1) m)))
 (let ((?x402 (* (- 1) k)))
 (let (($x258 (not (= (+ (* 3 (* ?x464 ?x464)) ?x402 ?x309 ?x61) (- 3)))))
 (let (($x368 (= (+ (* 3 (* n n)) ?x402 ?x61) 0)))
 (let (($x175 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x224 ?x225) 4)))
 (let (($x278 (and $x145 $x175 (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x368 (or $x258 (not (= ?x185 13)) $x290 (not (= ?x284 2)) $x363))))
 (rewrite (= $x278 $x985)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x434 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x484 (* (- 18) c)))
 (let ((?x288 (+ ?x484 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x71 (+ c k)))
 (let ((?x435 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x236 (+ (* (- 7) (* ?x435 ?x74 ?x71 ?x71)) (* 9 (* ?x464 ?x435 ?x435 ?x71 ?x71)) (* 2 (* ?x464 ?x435 ?x74 ?x74)))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x290 (not (= (* ?x134 ?x236) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x309 (* (- 1) m)))
 (let ((?x402 (* (- 1) k)))
 (let (($x258 (not (= (+ (* 3 (* ?x464 ?x464)) ?x402 ?x309 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x552 (* ?x464 ?x74)))
 (let ((?x514 (* (- 3) c)))
 (let (($x234 (or (not (= (+ ?x514 (* (- 4) k) ?x552 ?x309 ?x56) (- 2))) $x258 $x290 (not (= ?x288 (- 13))) $x363)))
 (let (($x368 (= (+ (* 3 (* n n)) ?x402 ?x61) 0)))
 (let (($x393 (= (+ ?x484 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x145 $x393 (= (+ ?x514 (* n k) ?x402 ?x56) 0) $x368 $x234))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x397 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let ((?x284 (+ ?x262 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x264)))
 (let ((?x306 (* 2 (* (+ 1 n) (+ 6 m) (+ k m) (+ k m)))))
 (let ((?x71 (+ c k)))
 (let ((?x435 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x236 (+ (* (- 7) (* ?x435 (+ k m) ?x71 ?x71)) (* 9 (* ?x464 ?x435 ?x435 ?x71 ?x71)) ?x306)))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x290 (not (= (* ?x134 ?x236) 0))))
 (let ((?x224 (* (- 9) n)))
 (let ((?x462 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x185 (+ ?x37 (* 23 k) (* 9 (* ?x464 ?x71)) ?x462 ?x224 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x61 (* 3 n)))
 (let ((?x309 (* (- 1) m)))
 (let ((?x402 (* (- 1) k)))
 (let (($x258 (not (= (+ (* 3 (* ?x464 ?x464)) ?x402 ?x309 ?x61) (- 3)))))
 (let (($x368 (= (+ (* 3 (* n n)) ?x402 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x278 (and $x145 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x224 ?x225) 4) (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x368 (or $x258 (not (= ?x185 13)) $x290 (not (= ?x284 2)) $x363))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x484 (* (- 18) c)))
 (let ((?x288 (+ ?x484 (* (- 23) k) (* (- 9) (* ?x464 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x552 (* ?x464 ?x74)))
 (let ((?x514 (* (- 3) c)))
 (let (($x234 (or (not (= (+ ?x514 (* (- 4) k) ?x552 ?x309 ?x56) (- 2))) $x258 $x290 (not (= ?x288 (- 13))) $x363)))
 (let (($x393 (= (+ ?x484 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x280 (and $x145 $x393 (= (+ ?x514 (* n k) ?x402 ?x56) 0) $x368 $x234)))
 (rewrite (= $x280 $x278))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x110 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x100 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x104 (+ (* (- 7) (+ c k) (+ c k) ?x74 ?x100) (* 9 (+ c k) (+ c k) ?x100 ?x100 ?x66) (* 2 ?x74 ?x74 ?x100 ?x66))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 ?x66))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) ?x66)) (* 5 ?x74))))
 (let (($x108 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x68 ?x104) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x108))))))))))))))) :qid k!38))
 ))
 (let ((?x436 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x484 (* (- 18) c)))
 (let ((?x288 (+ ?x484 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x71 (+ c k)))
 (let ((?x435 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x236 (+ (* (- 7) (* ?x435 ?x74 ?x71 ?x71)) (* 9 (* ?x464 ?x435 ?x435 ?x71 ?x71)) (* 2 (* ?x464 ?x435 ?x74 ?x74)))))
 (let ((?x128 (* (- 6) n)))
 (let ((?x134 (+ (- 6) m ?x128)))
 (let (($x290 (not (= (* ?x134 ?x236) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x309 (* (- 1) m)))
 (let ((?x402 (* (- 1) k)))
 (let (($x258 (not (= (+ (* 3 (* ?x464 ?x464)) ?x402 ?x309 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x552 (* ?x464 ?x74)))
 (let ((?x514 (* (- 3) c)))
 (let (($x234 (or (not (= (+ ?x514 (* (- 4) k) ?x552 ?x309 ?x56) (- 2))) $x258 $x290 (not (= ?x288 (- 13))) $x363)))
 (let (($x368 (= (+ (* 3 (* n n)) ?x402 ?x61) 0)))
 (let (($x393 (= (+ ?x484 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x280 (and $x145 $x393 (= (+ ?x514 (* n k) ?x402 ?x56) 0) $x368 $x234)))
 (let ((?x104 (+ (* (- 7) ?x71 ?x71 ?x74 (+ m 6)) (* 9 ?x71 ?x71 (+ m 6) (+ m 6) (+ n 1)) (* 2 ?x74 ?x74 (+ m 6) (+ n 1)))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let (($x108 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 (+ n 1)) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x104) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x109 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x108)))
 (rewrite (= $x109 $x280))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x111 (asserted $x110)))
 (let ((@x501 (mp (mp @x111 (quant-intro (proof-bind ?x436) (= $x110 $x434)) $x434) (rewrite (= $x434 $x434)) $x434)))
 (let ((@x535 (mp (mp @x501 (quant-intro (proof-bind ?x397) (= $x434 $x416)) $x416) (quant-intro (proof-bind ?x138) (= $x416 $x137)) $x137)))
 (let ((@x738 (mp (mp~ @x535 (sk (~ $x137 $x518)) $x518) (rewrite (= $x518 $x211)) $x211)))
 (let ((@x756 (and-elim @x738 $x746)))
 (let ((@x773 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x746) $x227)) @x756 $x227)))
 (let (($x223 (>= ?x748 0)))
 (let ((@x194 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x746) $x223)) @x756 $x223)))
 (let (($x127 (<= ?x120 4)))
 (let ((@x768 (and-elim @x738 $x141)))
 (let ((@x875 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x141) $x127)) @x768 $x127)))
 (let (($x118 (>= ?x120 4)))
 (let ((@x878 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x141) $x118)) @x768 $x118)))
 (let (($x228 (<= ?x720 0)))
 (let ((@x187 (and-elim @x738 $x721)))
 (let ((@x905 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x721) $x228)) @x187 $x228)))
 (let (($x156 (>= ?x720 0)))
 (let ((@x926 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x721) $x156)) @x187 $x156)))
 (let (($x795 (<= ?x153 (- 6))))
 (let ((@x737 (and-elim @x738 $x221)))
 (let ((@x209 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x739 $x795)) @x737 $x795)))
 (let (($x793 (>= ?x153 (- 6))))
 (let ((@x170 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x739 $x793)) @x737 $x793)))
 (let (($x1217 (<= c!3 (- 1))))
 (let (($x348 (<= c!3 0)))
 (let (($x232 (<= c!3 1)))
 (let (($x1081 (<= c!3 2)))
 (let (($x413 (<= c!3 3)))
 (let ((@x1246 ((_ th-lemma arith) (hypothesis (not $x413)) @x194 @x773 @x926 @x905 @x194 @x773 @x194 @x773 @x878 @x875 false)))
 (let ((@x390 (hypothesis $x413)))
 (let (($x947 (not $x1081)))
 (let ((@x478 (hypothesis $x947)))
 (let ((@x1250 ((_ th-lemma arith) @x194 @x773 @x194 @x773 @x194 @x773 @x926 @x905 @x478 @x390 @x478 @x390 @x926 @x905 @x926 @x905 @x926 @x905 @x878 @x875 @x194 @x773 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x170 @x209 @x194 @x773 @x926 @x905 @x478 @x390 @x478 @x390 @x194 @x773 @x926 @x905 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 @x478 @x390 false)))
 (let ((@x1422 (unit-resolution (lemma @x1250 (or (not $x413) $x1081)) (lemma @x1246 $x413) $x1081)))
 (let ((@x344 (hypothesis $x1081)))
 (let (($x1084 (not $x232)))
 (let ((@x945 (hypothesis $x1084)))
 (let ((@x832 ((_ th-lemma arith) @x194 @x773 @x170 @x209 @x170 @x209 @x170 @x209 @x945 @x344 @x945 @x344 @x945 @x344 @x170 @x209 @x926 @x905 @x945 @x344 @x945 @x344 @x945 @x344 @x878 @x875 @x945 @x344 false)))
 (let ((@x149 (hypothesis $x232)))
 (let ((@x825 (hypothesis (not $x348))))
 (let ((@x231 ((_ th-lemma arith) @x194 @x773 @x170 @x209 @x825 @x149 @x825 @x149 @x825 @x149 @x825 @x149 @x825 @x149 @x170 @x209 @x878 @x875 @x825 @x149 @x825 @x149 @x926 @x905 @x170 @x209 false)))
 (let ((@x1537 (unit-resolution (lemma @x231 (or $x1084 $x348)) (unit-resolution (lemma @x832 (or $x947 $x232)) @x1422 $x232) $x348)))
 (let ((@x1538 (hypothesis (not $x1217))))
 (let ((@x1542 ((_ th-lemma arith) @x1538 @x1537 @x194 @x773 @x1538 @x1537 @x1538 @x1537 @x926 @x905 @x1538 @x1537 @x194 @x773 @x926 @x905 @x878 @x875 @x194 @x773 @x1538 @x1537 false)))
 (let ((@x1543 (lemma @x1542 $x1217)))
 (let ((@x1094 ((_ th-lemma arith) @x1543 @x209 (hypothesis (not $x439)) @x194 @x773 @x170 @x209 @x194 @x773 @x926 @x905 @x878 @x875 @x194 @x773 false)))
 (let ((@x335 (lemma @x1094 $x439)))
 (let (($x140 (>= ?x277 0)))
 (let (($x381 (>= m!1 0)))
 (let ((@x930 (hypothesis (not $x381))))
 (let ((?x173 (* m!1 k!2)))
 (let (($x370 (>= ?x173 0)))
 (let ((@x1009 ((_ th-lemma arith) @x930 @x209 (hypothesis (not $x370)) @x930 @x170 @x209 @x194 @x773 @x878 @x875 @x878 @x875 @x170 @x209 @x170 @x209 @x170 @x209 @x926 @x905 @x926 @x905 @x194 @x773 @x926 @x905 @x194 @x773 @x878 @x875 @x194 @x773 false)))
 (let ((@x129 ((_ th-lemma arith) @x930 @x209 (unit-resolution (lemma @x1009 (or $x370 $x381)) @x930 $x370) @x930 @x773 @x930 @x209 false)))
 (let ((@x1007 (lemma @x129 $x381)))
 (let ((@x1080 ((_ th-lemma arith) @x1543 (hypothesis (>= (+ ?x229 (* 2 c!3) (* 2 ?x857)) 2)) @x170 @x1007 @x335 @x170 @x1007 false)))
 (let ((@x966 (lemma @x1080 (not (>= (+ ?x229 (* 2 c!3) (* 2 ?x857)) 2)))))
 (let (($x742 (>= ?x857 0)))
 ((_ th-lemma arith farkas -1/2 3/2 -1/6 -5/6 -1/6 1) (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x742)) false) $x742) @x966 @x878 @x194 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x140)) false) $x140) @x335 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 125
 :arith-assert-diseq        33
 :arith-assert-lower        1380
 :arith-assert-upper        374
 :arith-bound-prop          6
 :arith-branch-var          25
 :arith-conflicts           43
 :arith-eq-adapter          10
 :arith-fixed-eqs           165
 :arith-gcd-tests           260
 :arith-gomory-cuts         16
 :arith-grobner             57
 :arith-ineq-splits         25
 :arith-max-min             8109
 :arith-nonlinear-bounds    448
 :arith-nonlinear-horner    516
 :arith-num-rows            20
 :arith-offset-eqs          8
 :arith-patches             97
 :arith-patches_succ        47
 :arith-pivots              802
 :arith-pseudo-nonlinear    171
 :arith-row-summations      3398
 :arith-tableau-max-columns 97
 :arith-tableau-max-rows    20
 :conflicts                 47
 :decisions                 173
 :del-clause                84
 :final-checks              179
 :max-memory                4.03
 :memory                    3.30
 :minimized-lits            2
 :mk-bool-var               177
 :mk-clause                 137
 :num-allocs                4549055
 :num-checks                1
 :propagations              190
 :rlimit-count              280893
 :time                      0.08
 :total-time                0.09)
