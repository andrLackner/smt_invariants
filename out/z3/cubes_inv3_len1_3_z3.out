unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x437 (* n!0 c!3)))
 (let ((?x384 (* (- 9) ?x437)))
 (let ((?x381 (* (- 5) k!2)))
 (let ((?x336 (* k!2 k!2)))
 (let ((?x131 (* 9 n!0)))
 (let ((?x497 (+ ?x131 ?x336 (* (- 18) c!3) ?x381 ?x384)))
 (let (($x487 (<= ?x497 (- 4))))
 (let (($x408 (= ?x497 (- 4))))
 (let ((?x382 (* (- 1) m!1)))
 (let ((?x174 (* 6 n!0)))
 (let ((?x349 (+ ?x174 ?x382)))
 (let (($x348 (= ?x349 (- 6))))
 (let (($x503 (not $x348)))
 (let ((?x345 (* m!1 m!1)))
 (let ((?x152 (+ ?x131 ?x336 (* (- 5) m!1) ?x345 (* (- 27) c!3) (* (- 32) k!2) ?x384 (* 2 (* m!1 k!2)) (* (- 9) (* n!0 k!2)))))
 (let ((?x564 (* n!0 k!2)))
 (let ((?x466 (* n!0 m!1)))
 (let ((?x531 (* (- 3) k!2)))
 (let ((?x521 (* (- 3) c!3)))
 (let ((?x310 (* 2 n!0)))
 (let ((?x317 (+ c!3 k!2)))
 (let ((?x509 (+ 1 n!0)))
 (let ((?x200 (* ?x509 ?x509 (+ m!1 k!2) ?x317 (+ 2 ?x310 ?x521 ?x531 ?x466 ?x564))))
 (let (($x193 (not (= (+ (* 3 (* n!0 n!0)) ?x131 ?x382 (* (- 1) k!2)) (- 6)))))
 (let (($x465 (or (not (= (+ ?x310 ?x521 ?x531 ?x466 ?x564) (- 2))) $x193 (not (= ?x200 0)) (not (= ?x152 (- 13))) $x503)))
 (let ((?x566 (* (- 1) k!2)))
 (let ((?x277 (* n!0 n!0)))
 (let ((?x379 (* 3 ?x277)))
 (let ((?x318 (+ ?x379 (* 3 n!0) ?x566)))
 (let (($x375 (= ?x318 0)))
 (let ((?x568 (+ ?x310 ?x521 ?x566 ?x564)))
 (let (($x395 (= ?x568 0)))
 (let (($x194 (and $x348 $x408 $x395 $x375 $x465)))
 (let ((?x559 (* k!2 n!0)))
 (let ((?x544 (* (- 1) ?x559)))
 (let ((?x553 (* (- 2) n!0)))
 (let ((?x562 (* 3 c!3)))
 (let (($x322 (= (+ ?x562 (* 3 k!2) ?x553 ?x544 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x505 (* 9 (* c!3 n!0))))
 (let ((?x383 (* (- 1) ?x336)))
 (let ((?x240 (* (- 9) n!0)))
 (let ((?x443 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x240 ?x383 (* 9 ?x559) ?x505 (* (- 2) (* k!2 m!1)) (* (- 1) ?x345))))
 (let ((?x530 (* ?x509 ?x509 (+ k!2 m!1) ?x317 (+ 2 ?x521 ?x531 ?x310 ?x559 (* m!1 n!0)))))
 (let (($x534 (or (not (= ?x530 0)) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x240 (* (- 3) ?x277)) 6)) (not (= ?x443 13)) (not $x322))))
 (let (($x311 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x533 (and $x311 (= (+ (* 18 c!3) (* 5 k!2) ?x240 ?x383 ?x505) 4) (= (+ ?x562 k!2 ?x553 ?x544) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x277)) 0) $x534)))
 (let (($x302 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x367 (* m n)))
 (let ((?x56 (* 2 n)))
 (let ((?x226 (* (- 3) c)))
 (let ((?x532 (+ 2 ?x226 (* (- 3) k) ?x56 ?x52 ?x367)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x400 (or (not (= (* ?x308 ?x308 ?x74 ?x71 ?x532) 0)) $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 $x400))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x285 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x231 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x56 (* 2 n)))
 (let ((?x405 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x535 (* ?x308 ?x74)))
 (let ((?x241 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let ((?x71 (+ c k)))
 (let (($x274 (= (* ?x308 ?x308 ?x74 ?x71 (+ 2 ?x226 ?x241 ?x535 ?x405 ?x56)) 0)))
 (let (($x290 (not $x274)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x251 (= (+ (* 3 (* ?x308 ?x308)) (* (- 1) k) ?x405 (* 3 n)) (- 3))))
 (let (($x262 (not $x251)))
 (let (($x177 (or $x262 (not (= (+ ?x255 (* 4 k) (* (- 1) ?x535) m ?x257) 2)) $x290 (not (= ?x231 13)) $x356)))
 (let (($x225 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x225 $x177)))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x320 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x367 (* m n)))
 (let ((?x56 (* 2 n)))
 (let ((?x226 (* (- 3) c)))
 (let ((?x532 (+ 2 ?x226 (* (- 3) k) ?x56 ?x52 ?x367)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x400 (or (not (= (* ?x308 ?x308 ?x74 ?x71 ?x532) 0)) $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x307 (and $x138 $x215 $x260 $x296 $x400)))
 (let ((?x37 (* 18 c)))
 (let ((?x231 (+ ?x37 (* 23 k) (* 9 (* ?x308 ?x71)) ?x430 ?x217 (* (- 1) (* ?x74 ?x74)))))
 (let ((?x696 (* ?x308 ?x308 ?x74 ?x71 (+ 2 ?x226 (* (- 4) k) (* ?x308 ?x74) (* (- 1) m) ?x56))))
 (let (($x290 (not (= ?x696 0))))
 (let (($x107 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x308 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x405 (* (- 1) m)))
 (let ((?x366 (* (- 1) k)))
 (let (($x262 (not (= (+ (* 3 (* ?x308 ?x308)) ?x366 ?x405 ?x61) (- 3)))))
 (let (($x225 (= (+ (* 3 (* n n)) ?x366 ?x61) 0)))
 (let (($x168 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x560 (and $x138 $x168 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x225 (or $x262 (not $x107) $x290 (not (= ?x231 13)) $x356))))
 (rewrite (= $x560 $x307))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x520 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x323 (+ ?x454 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x405 (* (- 1) m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x535 (* ?x308 ?x74)))
 (let ((?x241 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x71 (+ c k)))
 (let (($x274 (= (* ?x308 ?x308 ?x74 ?x71 (+ 2 ?x226 ?x241 ?x535 ?x405 ?x56)) 0)))
 (let (($x290 (not $x274)))
 (let (($x251 (= (+ (* 3 (* ?x308 ?x308)) (* (- 1) k) ?x405 (* 3 n)) (- 3))))
 (let (($x262 (not $x251)))
 (let (($x694 (or $x262 $x290 $x356 (not (= (+ ?x226 ?x241 ?x535 ?x405 ?x56) (- 2))) (not (= ?x323 (- 13))))))
 (let (($x225 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x362 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x362 (= (+ ?x226 (* n k) (* (- 1) k) ?x56) 0) $x225 $x694)))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x228 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x231 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x56 (* 2 n)))
 (let ((?x405 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x535 (* ?x308 ?x74)))
 (let ((?x241 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let ((?x71 (+ c k)))
 (let (($x274 (= (* ?x308 ?x308 ?x74 ?x71 (+ 2 ?x226 ?x241 ?x535 ?x405 ?x56)) 0)))
 (let (($x290 (not $x274)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x251 (= (+ (* 3 (* ?x308 ?x308)) (* (- 1) k) ?x405 (* 3 n)) (- 3))))
 (let (($x262 (not $x251)))
 (let (($x177 (or $x262 (not (= (+ ?x255 (* 4 k) (* (- 1) ?x535) m ?x257) 2)) $x290 (not (= ?x231 13)) $x356)))
 (let (($x225 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x560 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x225 $x177)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x323 (+ ?x454 (* (- 23) k) (* (- 9) (* ?x308 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let (($x694 (or $x262 $x290 $x356 (not (= (+ ?x226 ?x241 ?x535 ?x405 ?x56) (- 2))) (not (= ?x323 (- 13))))))
 (let (($x362 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x269 (and $x138 $x362 (= (+ ?x226 (* n k) (* (- 1) k) ?x56) 0) $x225 $x694)))
 (rewrite (= $x269 $x560))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x66 (+ n 1)))
 (let ((?x71 (+ c k)))
 (let ((?x50 (- 3)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x101 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x50 ?x71 ?x74 ?x66 ?x66 ?x89) 0)))))
 (let (($x58 (= (+ (- (+ (* ?x50 c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101)))))))))))))) :qid k!38))
 ))
 (let ((?x524 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x323 (+ ?x454 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x405 (* (- 1) m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x535 (* ?x308 ?x74)))
 (let ((?x241 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x71 (+ c k)))
 (let (($x274 (= (* ?x308 ?x308 ?x74 ?x71 (+ 2 ?x226 ?x241 ?x535 ?x405 ?x56)) 0)))
 (let (($x290 (not $x274)))
 (let (($x251 (= (+ (* 3 (* ?x308 ?x308)) (* (- 1) k) ?x405 (* 3 n)) (- 3))))
 (let (($x262 (not $x251)))
 (let (($x694 (or $x262 $x290 $x356 (not (= (+ ?x226 ?x241 ?x535 ?x405 ?x56) (- 2))) (not (= ?x323 (- 13))))))
 (let (($x225 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x362 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x269 (and $x138 $x362 (= (+ ?x226 (* n k) (* (- 1) k) ?x56) 0) $x225 $x694)))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x66 (+ n 1)))
 (let ((?x50 (- 3)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x101 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x50 ?x71 ?x74 ?x66 ?x66 ?x89) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* ?x50 c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101)))
 (rewrite (= $x102 $x269))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x469 (mp (mp @x104 (quant-intro (proof-bind ?x524) (= $x103 $x520)) $x520) (rewrite (= $x520 $x520)) $x520)))
 (let ((@x586 (mp (mp @x469 (quant-intro (proof-bind ?x228) (= $x520 $x285)) $x285) (quant-intro (proof-bind ?x320) (= $x285 $x302)) $x302)))
 (let ((@x473 (mp (mp~ @x586 (sk (~ $x302 $x533)) $x533) (rewrite (= $x533 $x194)) $x194)))
 (let ((@x197 (and-elim @x473 $x408)))
 (let ((@x444 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x408) $x487)) @x197 $x487)))
 (let (($x495 (>= ?x497 (- 4))))
 (let ((@x116 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x408) $x495)) @x197 $x495)))
 (let (($x172 (<= ?x568 0)))
 (let ((@x192 (and-elim @x473 $x395)))
 (let ((@x316 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x395) $x172)) @x192 $x172)))
 (let (($x406 (>= ?x568 0)))
 (let ((@x410 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x395) $x406)) @x192 $x406)))
 (let (($x371 (<= ?x318 0)))
 (let ((@x602 (and-elim @x473 $x375)))
 (let ((@x185 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x375) $x371)) @x602 $x371)))
 (let (($x587 (>= ?x318 0)))
 (let ((@x199 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x375) $x587)) @x602 $x587)))
 (let (($x1682 (<= c!3 1)))
 (let ((@x1680 (hypothesis $x1682)))
 (let (($x1677 (<= n!0 7)))
 (let ((@x1702 (hypothesis $x1677)))
 (let (($x457 (>= ?x349 (- 6))))
 (let ((@x198 (and-elim @x473 $x348)))
 (let ((@x387 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x503 $x457)) @x198 $x457)))
 (let (($x584 (<= ?x349 (- 6))))
 (let ((@x460 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x503 $x584)) @x198 $x584)))
 (let (($x1598 (<= m!1 42)))
 (let ((@x1683 (hypothesis $x1598)))
 (let (($x1668 (<= n!0 5)))
 (let ((@x1675 (hypothesis $x1668)))
 (let (($x1650 (<= n!0 4)))
 (let ((@x1671 (hypothesis $x1650)))
 (let (($x1115 (<= m!1 18)))
 (let ((@x1159 (hypothesis $x1115)))
 (let (($x1123 (<= ?x509 2)))
 (let ((@x1114 (hypothesis $x1123)))
 (let (($x335 (<= n!0 0)))
 (let (($x163 (not $x335)))
 (let ((@x743 (hypothesis $x335)))
 (let ((?x146 (+ (* 4 ?x277) ?x174 ?x336 (* (- 4) c!3) (* (- 2) k!2) (* (- 2) ?x437))))
 (let (($x149 (>= ?x146 0)))
 (let (($x483 (>= k!2 0)))
 (let ((@x162 (hypothesis (not $x483))))
 (let ((@x124 ((_ th-lemma arith) @x162 @x162 @x116 @x444 @x116 @x444 @x410 @x316 @x410 @x316 @x116 @x444 @x199 @x185 @x410 @x316 false)))
 (let ((@x125 (lemma @x124 $x483)))
 (let ((@x208 (lemma ((_ th-lemma arith farkas -4/7 9/7 -12/7 -2/7) @x125 (hypothesis (not $x149)) @x199 @x116 false) $x149)))
 (let (($x456 (<= k!2 0)))
 (let ((@x209 (hypothesis $x456)))
 (let ((@x648 (lemma ((_ th-lemma arith farkas -4/3 -4/9 -2/9 -7/9 -7/9 1) @x185 @x209 @x444 @x125 @x209 @x208 false) (not $x456))))
 (let (($x484 (>= ?x564 0)))
 (let (($x578 (<= n!0 (- 2))))
 (let ((@x746 (hypothesis (not $x484))))
 (let (($x575 (>= ?x146 4)))
 (let ((@x644 ((_ th-lemma arith) @x208 @x208 (hypothesis (not $x575)) @x199 @x185 @x116 @x444 @x199 @x185 @x116 @x444 @x199 @x185 @x387 @x460 @x199 @x185 @x199 @x185 @x410 @x316 @x199 @x185 false)))
 (let ((@x596 (lemma @x644 $x575)))
 (let ((@x653 (hypothesis (not $x578))))
 (let ((@x766 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 -1/3 -1/3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x185 @x648 @x596 @x444 @x746 @x410 @x743 @x648 @x746 @x410 @x743 @x199 @x648 @x653 @x185 @x648 @x596 @x444 @x746 @x410 @x743 @x648 @x746 @x410 @x743 @x653 @x185 @x648 @x596 @x444 @x746 @x410 @x743 @x648 @x746 @x410 @x743 false)))
 (let ((@x744 (unit-resolution (lemma @x766 (or $x578 $x484 $x163)) @x746 @x743 $x578)))
 (let ((?x890 (+ (* 12 ?x277) (* 31 n!0) (* 3 ?x336) (* (- 42) c!3) (* (- 15) k!2) (* (- 16) ?x437))))
 (let ((@x897 ((_ th-lemma arith gomory-cut 4/11 3/10 3/11 -7/11 7/11 1/10 -7/10) @x199 @x596 @x116 @x746 @x410 @x648 @x744 (>= ?x890 17))))
 (let ((@x756 ((_ th-lemma arith) @x897 @x185 @x444 @x746 @x410 @x897 @x744 @x387 @x460 @x199 @x185 @x199 @x185 @x116 @x444 @x199 @x185 @x116 @x444 @x410 @x316 @x199 @x185 @x116 @x444 @x199 @x185 false)))
 (let ((@x914 ((_ th-lemma arith farkas -1 1/3 1/3 1 1 1) @x743 @x199 @x648 (unit-resolution (lemma @x756 (or $x484 $x163)) @x743 $x484) @x648 @x743 false)))
 (let ((@x1010 (lemma @x914 $x163)))
 (let ((@x896 ((_ th-lemma arith farkas 8/3 -5/9 5/3 5/3 1 1 1/9 -1/9 -1/9 -1 1 1) @x1114 @x199 @x1010 @x1114 @x1010 @x1114 @x444 @x1010 @x185 @x410 @x1010 @x1114 false)))
 (let ((@x1128 (lemma @x896 (not $x1123))))
 (let ((@x1387 ((_ th-lemma arith) @x1128 @x1159 @x460 @x1128 @x1159 @x460 @x410 @x316 @x410 @x316 @x199 @x185 @x1128 @x1159 @x460 @x199 @x185 @x199 @x185 @x1128 @x1159 @x460 @x1128 @x1159 @x460 @x116 @x444 false)))
 (let ((@x1388 (lemma @x1387 (not $x1115))))
 (let (($x1369 (<= n!0 3)))
 (let ((@x1409 (hypothesis $x1369)))
 (let ((@x1410 ((_ th-lemma arith farkas -35 1 150 150 24 -15 1 1 1 1 1 1 1) @x185 @x116 @x1388 @x387 @x1409 @x316 @x185 @x1388 @x387 @x199 @x1409 @x1388 @x387 false)))
 (let ((@x1412 (lemma @x1410 (not $x1369))))
 (let (($x1540 (>= ?x277 17)))
 (let ((@x1400 ((_ th-lemma arith) @x1412 (hypothesis (not $x1540)) @x199 @x185 @x116 @x444 @x199 @x185 @x199 @x185 @x116 @x444 @x199 @x185 @x116 @x444 @x410 @x316 @x116 @x444 false)))
 (let ((@x1548 (lemma @x1400 $x1540)))
 (let ((@x1674 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) @x1548 @x1412 @x1671 @x1412 @x1671 false) (not $x1650))))
 (let ((@x1651 ((_ th-lemma arith gcd-test -14/3 -14/3 4/3 4/3 -4 -4 -4 -4 -4 -1/3 -1/3 -1/3 -1/3 1/3 1/3) @x1674 @x1675 @x199 @x185 @x1674 @x1674 @x1675 @x1674 @x1675 @x1674 @x1675 @x1674 @x1675 @x410 @x316 false)))
 (let ((@x1679 (lemma @x1651 (not $x1668))))
 (let ((@x1691 ((_ th-lemma arith) @x1679 @x1683 @x460 @x1679 @x1683 @x460 @x185 @x1679 @x460 @x387 @x199 @x1679 @x1683 @x460 @x116 @x444 @x387 @x460 @x460 @x1679 @x1683 @x410 @x316 @x1679 @x1683 @x460 @x1679 @x1683 @x460 @x1679 @x1683 @x460 @x199 @x185 false)))
 (let ((@x1703 ((_ th-lemma arith gomory-cut 1/5 1/5) (lemma @x1691 (not $x1598)) @x387 (>= n!0 7))))
 (let ((@x1704 ((_ th-lemma arith gcd-test -29/3 -29/3 3 3 -9 -9 -9 -9 -9 1/3 1/3 -1/3 -1/3 -1/3 -1/3) @x1703 @x1702 @x199 @x185 @x1703 @x1703 @x1702 @x1703 @x1702 @x410 @x316 @x1703 @x1702 @x1703 @x1702 false)))
 (let ((@x1706 (lemma @x1704 (not $x1677))))
 (let (($x1587 (>= ?x437 257)))
 (let ((@x1657 (hypothesis (not $x1587))))
 (let ((?x1647 (+ ?x379 (* 8 n!0) ?x336 (* (- 12) c!3) (* (- 4) k!2) (* (- 4) ?x437) (* 3 ?x564))))
 (let (($x1401 (<= k!2 60)))
 (let ((@x1503 (hypothesis $x1401)))
 (let ((@x1504 ((_ th-lemma arith gcd-test 1/9 1/9 1/9 1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -2/3 -2/3 2/3 2/3 2/3 2/3 2/3 2/3) @x199 @x185 @x116 @x444 @x185 @x1412 @x1503 @x185 @x1412 @x1503 @x185 @x1412 @x1503 @x185 @x1412 @x1503 @x410 @x316 @x185 @x1412 @x1503 @x185 @x1412 @x1503 false)))
 (let ((@x1519 (lemma @x1504 (not $x1401))))
 (let ((@x1662 ((_ th-lemma arith gomory-cut 1/5 1/5 3/4 3/5 -1/8 -1/8 -9/8 3/8 3/4 1/8 1/4) @x199 @x116 @x1548 @x410 @x185 @x444 @x1657 @x1548 @x410 @x1519 @x1519 (>= ?x1647 2506))))
 (let ((@x1643 ((_ th-lemma arith) @x1662 @x1657 @x1412 @x199 @x185 @x116 @x444 @x199 @x185 @x410 @x316 @x410 @x316 @x199 @x185 @x199 @x185 @x116 @x444 false)))
 (let ((@x1642 (lemma @x1643 $x1587)))
 (let ((?x1741 (+ (* 5 ?x277) (* 10 n!0) (* 2 ?x336) (* (- 10) c!3) ?x381 (* (- 5) ?x437))))
 (let (($x1709 (not (<= k!2 61))))
 (let ((@x1739 (unit-resolution ((_ th-lemma arith assign-bounds 1 3 3) (or $x1709 (not $x371) (not $x1540) $x1369)) @x1412 @x1548 @x185 $x1709)))
 (let ((@x1744 ((_ th-lemma arith gomory-cut 1/2 1/5 3/5 3/5 3/10 3/10 3/10 2/5 2/5 2/5 2/5 2/5) @x199 @x116 @x1642 @x1706 @x1642 @x1706 @x1680 @x316 @x1706 @x1739 @x1680 @x1642 (>= ?x1741 1352068))))
 (let ((@x1745 ((_ th-lemma arith) @x1680 @x444 @x1642 @x1706 @x1744 @x185 @x1680 @x444 @x1642 @x1706 @x1744 @x185 @x1680 @x444 @x1642 @x1706 @x1680 @x1642 @x1706 @x1680 false)))
 ((_ th-lemma arith) (lemma @x1745 (not $x1682)) @x116 @x444 @x199 @x185 @x116 @x444 @x199 @x185 @x116 @x444 @x116 @x444 @x116 @x444 @x199 @x185 @x410 @x316 @x116 @x444 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 66
 :arith-assert-diseq        51
 :arith-assert-lower        697
 :arith-assert-upper        287
 :arith-bound-prop          9
 :arith-branch-var          42
 :arith-conflicts           56
 :arith-eq-adapter          14
 :arith-fixed-eqs           91
 :arith-gcd-tests           468
 :arith-gomory-cuts         34
 :arith-grobner             52
 :arith-ineq-splits         42
 :arith-max-min             3487
 :arith-nonlinear-bounds    118
 :arith-nonlinear-horner    557
 :arith-num-rows            18
 :arith-offset-eqs          6
 :arith-patches             97
 :arith-patches_succ        13
 :arith-pivots              1016
 :arith-pseudo-nonlinear    75
 :arith-row-summations      7100
 :arith-tableau-max-columns 58
 :arith-tableau-max-rows    18
 :conflicts                 61
 :decisions                 361
 :del-clause                71
 :final-checks              210
 :max-memory                4.37
 :memory                    3.34
 :minimized-lits            7
 :mk-bool-var               221
 :mk-clause                 86
 :num-allocs                183600344
 :num-checks                1
 :propagations              327
 :rlimit-count              355784
 :time                      1.15
 :total-time                1.16)
