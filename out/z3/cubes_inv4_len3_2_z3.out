unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let (($x121 (<= k!2 0)))
 (let ((?x871 (* k!2 n!0)))
 (let ((?x482 (* (- 1) ?x871)))
 (let ((?x731 (* (- 2) n!0)))
 (let ((?x113 (* 3 c!3)))
 (let ((?x133 (* 3 k!2)))
 (let ((?x428 (+ ?x133 ?x113 ?x731 (* (- 1) (* n!0 m!1)) ?x482)))
 (let (($x157 (>= ?x428 2)))
 (let (($x776 (not $x157)))
 (let ((?x720 (+ k!2 ?x113 ?x731 ?x482)))
 (let (($x368 (<= ?x720 0)))
 (let (($x873 (= ?x720 0)))
 (let ((?x877 (* n!0 n!0)))
 (let ((?x392 (* 3 ?x877)))
 (let ((?x510 (* (- 1) m!1)))
 (let ((?x407 (* 9 n!0)))
 (let ((?x356 (* (- 1) k!2)))
 (let ((?x346 (* (- 6) ?x877)))
 (let ((?x862 (+ k!2 c!3)))
 (let ((?x176 (+ k!2 m!1)))
 (let ((?x559 (+ 1 n!0)))
 (let ((?x840 (* (- 3) (* k!2 k!2 n!0 n!0))))
 (let ((?x893 (* (- 3) (* c!3 m!1))))
 (let ((?x416 (* (- 6) (* k!2 k!2 n!0))))
 (let ((?x483 (* (- 12) n!0)))
 (let ((?x384 (* k!2 k!2)))
 (let ((?x175 (* (- 3) ?x384)))
 (let ((?x197 (* k!2 m!1)))
 (let ((?x198 (* (- 3) ?x197)))
 (let ((?x453 (+ (- 6) ?x198 ?x175 (* (- 6) (* c!3 n!0 m!1)) ?x483 ?x416 (* (- 3) (* k!2 c!3)) ?x893 ?x840 (* (- 3) (* k!2 n!0 n!0 m!1)) (* (- 6) (* k!2 c!3 n!0)) (* (- 1) (* ?x559 ?x559 ?x176 ?x176 ?x862 ?x862)) ?x346 (* (- 3) (* c!3 n!0 n!0 m!1)) (* (- 3) (* k!2 c!3 n!0 n!0)) (* (- 6) (* k!2 n!0 m!1)))))
 (let ((?x418 (+ (* 6 n!0) ?x510)))
 (let (($x409 (= ?x418 (- 6))))
 (let (($x729 (not $x409)))
 (let ((?x472 (* c!3 n!0)))
 (let ((?x495 (* (- 9) ?x472)))
 (let ((?x442 (* m!1 m!1)))
 (let ((?x875 (+ (* 2 ?x197) ?x384 (* (- 32) k!2) (* (- 27) c!3) ?x407 ?x442 (* (- 5) m!1) ?x495 (* (- 9) ?x871))))
 (let (($x413 (or (not (= ?x428 2)) (not (= ?x875 (- 13))) $x729 (not (= (+ k!2 (* (- 9) n!0) m!1 (* (- 3) ?x877)) 6)) (not (= (* ?x453 (+ 6 ?x356 ?x407 ?x510 ?x392)) 0)))))
 (let ((?x800 (* (- 3) ?x877)))
 (let ((?x806 (+ k!2 (* (- 3) n!0) ?x800)))
 (let (($x167 (= ?x806 0)))
 (let ((?x716 (+ ?x384 (* (- 5) k!2) (* (- 18) c!3) ?x407 ?x495)))
 (let (($x725 (= ?x716 (- 4))))
 (let (($x885 (and $x409 $x725 $x873 $x167 $x413)))
 (let ((?x445 (* 9 ?x472)))
 (let ((?x461 (* (- 1) ?x384)))
 (let ((?x315 (* (- 9) n!0)))
 (let ((?x325 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x315 ?x461 (* 9 ?x871) ?x445 (* (- 2) ?x197) (* (- 1) ?x442))))
 (let ((?x785 (+ (- 6) ?x483 ?x175 ?x346 (* (- 1) (* ?x559 ?x559 ?x176 ?x176 (+ c!3 k!2) (+ c!3 k!2))) ?x198 (* (- 3) (* c!3 k!2 n!0 n!0)) ?x840 (* (- 3) (* c!3 m!1 n!0 n!0)) (* (- 3) (* k!2 m!1 n!0 n!0)) (* (- 3) (* c!3 k!2)) ?x893 (* (- 6) (* c!3 k!2 n!0)) ?x416 (* (- 6) (* c!3 m!1 n!0)) (* (- 6) (* k!2 m!1 n!0)))))
 (let (($x790 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (* ?x785 (+ 6 ?x356 ?x510 ?x407 ?x392)) 0)) (not (= ?x325 13)) (not (= (+ ?x113 ?x133 ?x731 ?x482 (* (- 1) (* m!1 n!0))) 2)) (not (= (+ k!2 m!1 ?x315 ?x800) 6)))))
 (let (($x385 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x430 (and $x385 (= (+ (* 18 c!3) (* 5 k!2) ?x315 ?x461 ?x445) 4) (= (+ ?x113 k!2 ?x731 ?x482) 0) $x167 $x790)))
 (let (($x206 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x882 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x546 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x554 (not $x546)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x524 (+ (* 27 c) (* 32 k) ?x436 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x528 (not (= ?x524 13))))
 (let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x45 (* 9 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x906 (* (- 6) (* k m n))))
 (let ((?x905 (* (- 6) (* c m n))))
 (let ((?x904 (* (- 6) (* k k n))))
 (let ((?x903 (* (- 6) (* c k n))))
 (let ((?x858 (* (- 3) (* c m))))
 (let ((?x851 (* (- 3) (* c k))))
 (let ((?x897 (* (- 3) (* k m n n))))
 (let ((?x894 (* (- 3) (* c m n n))))
 (let ((?x891 (* (- 3) (* k k n n))))
 (let ((?x888 (* (- 3) (* c k n n))))
 (let ((?x486 (* k m)))
 (let ((?x861 (* (- 3) ?x486)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x832 (+ 1 n)))
 (let ((?x448 (* (- 1) (* ?x832 ?x832 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x755 (* (- 6) ?x271)))
 (let ((?x854 (* (- 3) ?x46)))
 (let ((?x764 (* (- 12) n)))
 (let ((?x366 (+ (- 6) ?x764 ?x854 ?x755 ?x448 ?x861 ?x888 ?x891 ?x894 ?x897 ?x851 ?x858 ?x903 ?x904 ?x905 ?x906)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let (($x367 (or $x362 (not (= (* ?x366 (+ 6 ?x239 ?x477 ?x45 ?x272)) 0)) $x528 $x554 $x882)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (and $x144 $x221 $x266 $x302 $x367)))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x843 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x455 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x832 (+ 1 n)))
 (let ((?x834 (* ?x832 ?x832)))
 (let ((?x793 (* 3 ?x834)))
 (let (($x471 (not (= (+ ?x793 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x448 (* (- 1) (* ?x832 ?x832 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x775 (* (+ ?x448 (* (- 6) ?x834) (* (- 3) (* ?x832 ?x832 ?x74 ?x71))) (+ 3 ?x793 ?x239 ?x477 ?x61))))
 (let (($x383 (not (= ?x775 0))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x467 (= (+ ?x261 (* 4 k) (* (- 1) (* ?x832 ?x74)) m ?x263) 2)))
 (let (($x865 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x865 (or (not $x467) $x362 $x383 $x471 (not (= ?x455 13))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x870 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x882 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x546 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x554 (not $x546)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x524 (+ (* 27 c) (* 32 k) ?x436 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x528 (not (= ?x524 13))))
 (let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x45 (* 9 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x906 (* (- 6) (* k m n))))
 (let ((?x905 (* (- 6) (* c m n))))
 (let ((?x904 (* (- 6) (* k k n))))
 (let ((?x903 (* (- 6) (* c k n))))
 (let ((?x858 (* (- 3) (* c m))))
 (let ((?x851 (* (- 3) (* c k))))
 (let ((?x897 (* (- 3) (* k m n n))))
 (let ((?x894 (* (- 3) (* c m n n))))
 (let ((?x891 (* (- 3) (* k k n n))))
 (let ((?x888 (* (- 3) (* c k n n))))
 (let ((?x486 (* k m)))
 (let ((?x861 (* (- 3) ?x486)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x832 (+ 1 n)))
 (let ((?x448 (* (- 1) (* ?x832 ?x832 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x755 (* (- 6) ?x271)))
 (let ((?x854 (* (- 3) ?x46)))
 (let ((?x764 (* (- 12) n)))
 (let ((?x366 (+ (- 6) ?x764 ?x854 ?x755 ?x448 ?x861 ?x888 ?x891 ?x894 ?x897 ?x851 ?x858 ?x903 ?x904 ?x905 ?x906)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let (($x367 (or $x362 (not (= (* ?x366 (+ 6 ?x239 ?x477 ?x45 ?x272)) 0)) $x528 $x554 $x882)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (let (($x796 (and $x144 $x221 $x266 $x302 $x367)))
 (let ((?x37 (* 18 c)))
 (let ((?x455 (+ ?x37 (* 23 k) (* 9 (* ?x832 ?x71)) ?x436 ?x223 (* (- 1) (* ?x74 ?x74)))))
 (let (($x471 (not (= (+ (* 3 (* ?x832 ?x832)) ?x239 ?x477 (* 3 n)) (- 3)))))
 (let ((?x775 (* (+ ?x448 (* (- 6) (* ?x832 ?x832)) (* (- 3) (* ?x832 ?x832 ?x74 ?x71))) (+ 3 (* 3 (* ?x832 ?x832)) ?x239 ?x477 (* 3 n)))))
 (let (($x383 (not (= ?x775 0))))
 (let (($x467 (= (+ ?x261 (* 4 k) (* (- 1) (* ?x832 ?x74)) m ?x263) 2)))
 (let (($x865 (= (+ ?x272 ?x239 (* 3 n)) 0)))
 (let (($x398 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x223 ?x224) 4)))
 (let (($x517 (and $x144 $x398 (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x865 (or (not $x467) $x362 $x383 $x471 (not (= ?x455 13))))))
 (rewrite (= $x517 $x796))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x889 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x131 (* (- 18) c)))
 (let ((?x465 (+ ?x131 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x832 (+ 1 n)))
 (let ((?x834 (* ?x832 ?x832)))
 (let ((?x793 (* 3 ?x834)))
 (let (($x471 (not (= (+ ?x793 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x896 (* ?x832 ?x74)))
 (let ((?x503 (* (- 3) c)))
 (let ((?x448 (* (- 1) (* ?x832 ?x832 ?x74 ?x74 (+ c k) (+ c k)))))
 (let ((?x775 (* (+ ?x448 (* (- 6) ?x834) (* (- 3) (* ?x832 ?x832 ?x74 (+ c k)))) (+ 3 ?x793 ?x239 ?x477 ?x61))))
 (let (($x383 (not (= ?x775 0))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let (($x446 (or $x362 $x383 (not (= (+ ?x503 (* (- 4) k) ?x896 ?x477 ?x56) (- 2))) $x471 (not (= ?x465 (- 13))))))
 (let (($x865 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let (($x439 (= (+ ?x131 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x144 $x439 (= (+ ?x503 (* n k) ?x239 ?x56) 0) $x865 $x446)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x898 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x455 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x832 (+ 1 n)))
 (let ((?x834 (* ?x832 ?x832)))
 (let ((?x793 (* 3 ?x834)))
 (let (($x471 (not (= (+ ?x793 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x448 (* (- 1) (* ?x832 ?x832 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x775 (* (+ ?x448 (* (- 6) ?x834) (* (- 3) (* ?x832 ?x832 ?x74 ?x71))) (+ 3 ?x793 ?x239 ?x477 ?x61))))
 (let (($x383 (not (= ?x775 0))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x467 (= (+ ?x261 (* 4 k) (* (- 1) (* ?x832 ?x74)) m ?x263) 2)))
 (let (($x865 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x517 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x865 (or (not $x467) $x362 $x383 $x471 (not (= ?x455 13))))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x131 (* (- 18) c)))
 (let ((?x465 (+ ?x131 (* (- 23) k) (* (- 9) (* ?x832 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x896 (* ?x832 ?x74)))
 (let ((?x503 (* (- 3) c)))
 (let (($x446 (or $x362 $x383 (not (= (+ ?x503 (* (- 4) k) ?x896 ?x477 ?x56) (- 2))) $x471 (not (= ?x465 (- 13))))))
 (let (($x439 (= (+ ?x131 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x511 (and $x144 $x439 (= (+ ?x503 (* n k) ?x239 ?x56) 0) $x865 $x446)))
 (rewrite (= $x511 $x517)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x102 (- (* (- 1) ?x71 ?x71 ?x74 ?x74 ?x66 ?x66) (* 6 ?x66 ?x66))))
 (let ((?x95 (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x107 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x95 (- ?x102 (* 3 ?x71 ?x74 ?x66 ?x66))) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x107))))))))))))))) :qid k!38))
 ))
 (let ((?x812 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x131 (* (- 18) c)))
 (let ((?x465 (+ ?x131 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x832 (+ 1 n)))
 (let ((?x834 (* ?x832 ?x832)))
 (let ((?x793 (* 3 ?x834)))
 (let (($x471 (not (= (+ ?x793 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x896 (* ?x832 ?x74)))
 (let ((?x503 (* (- 3) c)))
 (let ((?x448 (* (- 1) (* ?x832 ?x832 ?x74 ?x74 (+ c k) (+ c k)))))
 (let ((?x775 (* (+ ?x448 (* (- 6) ?x834) (* (- 3) (* ?x832 ?x832 ?x74 (+ c k)))) (+ 3 ?x793 ?x239 ?x477 ?x61))))
 (let (($x383 (not (= ?x775 0))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let (($x446 (or $x362 $x383 (not (= (+ ?x503 (* (- 4) k) ?x896 ?x477 ?x56) (- 2))) $x471 (not (= ?x465 (- 13))))))
 (let (($x865 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let (($x439 (= (+ ?x131 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x511 (and $x144 $x439 (= (+ ?x503 (* n k) ?x239 ?x56) 0) $x865 $x446)))
 (let ((?x66 (+ n 1)))
 (let ((?x71 (+ c k)))
 (let ((?x102 (- (* (- 1) ?x71 ?x71 ?x74 ?x74 ?x66 ?x66) (* 6 ?x66 ?x66))))
 (let ((?x95 (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x107 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x95 (- ?x102 (* 3 ?x71 ?x74 ?x66 ?x66))) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x108 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x107)))
 (rewrite (= $x108 $x511))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x341 (mp (mp @x110 (quant-intro (proof-bind ?x812) (= $x109 $x889)) $x889) (rewrite (= $x889 $x889)) $x889)))
 (let ((@x357 (mp (mp @x341 (quant-intro (proof-bind ?x898) (= $x889 $x843)) $x843) (quant-intro (proof-bind ?x870) (= $x843 $x206)) $x206)))
 (let ((@x798 (mp (mp~ @x357 (sk (~ $x206 $x430)) $x430) (rewrite (= $x430 $x885)) $x885)))
 (let ((@x393 (and-elim @x798 $x873)))
 (let ((@x735 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x873) $x368)) @x393 $x368)))
 (let (($x364 (>= ?x720 0)))
 (let ((@x334 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x873) $x364)) @x393 $x364)))
 (let (($x443 (<= ?x428 2)))
 (let ((?x803 (+ k!2 ?x315 m!1 ?x800)))
 (let (($x508 (<= ?x803 6)))
 (let (($x902 (>= ?x418 (- 6))))
 (let ((@x817 (and-elim @x798 $x409)))
 (let ((@x319 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x729 $x902)) @x817 $x902)))
 (let (($x359 (<= ?x806 0)))
 (let ((@x795 (and-elim @x798 $x167)))
 (let ((@x424 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or $x508 (not $x359) (not $x902))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x167) $x359)) @x795 $x359) @x319 $x508)))
 (let (($x396 (>= ?x803 6)))
 (let (($x835 (>= ?x806 0)))
 (let (($x789 (<= ?x418 (- 6))))
 (let ((@x307 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x729 $x789)) @x817 $x789)))
 (let ((@x718 ((_ th-lemma arith farkas -1 -1 1) (hypothesis (not $x396)) @x307 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x167) $x835)) @x795 $x835) false)))
 (let ((@x726 (lemma @x718 $x396)))
 (let ((@x255 ((_ th-lemma arith) (hypothesis (not $x443)) @x319 @x307 @x319 @x307 @x334 @x735 @x726 @x424 false)))
 (let ((@x977 ((_ th-lemma arith) @x319 @x307 @x726 @x424 @x319 @x307 @x726 @x424 @x726 @x424 @x319 @x307 @x319 @x307 (hypothesis $x157) (lemma @x255 $x443) @x334 @x735 false)))
 (let (($x259 (>= ?x871 5)))
 (let (($x166 (not $x259)))
 (let ((@x563 (hypothesis (not $x121))))
 (let (($x740 (<= m!1 12)))
 (let (($x145 (<= n!0 2)))
 (let (($x147 (<= n!0 3)))
 (let (($x886 (<= ?x716 (- 4))))
 (let ((@x318 (and-elim @x798 $x725)))
 (let ((@x497 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x725) $x886)) @x318 $x886)))
 (let (($x808 (>= ?x716 (- 4))))
 (let ((@x500 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x725) $x808)) @x318 $x808)))
 (let ((@x958 ((_ th-lemma arith) (hypothesis (not $x147)) @x726 @x424 @x319 @x307 @x334 @x735 @x319 @x307 @x500 @x497 @x319 @x307 false)))
 (let ((@x724 (hypothesis $x147)))
 (let (($x782 (not $x145)))
 (let ((@x119 (hypothesis $x782)))
 (let ((@x822 ((_ th-lemma arith farkas 1 35 35 255 24 15 1 1 1 1 1 1 1) @x500 @x319 @x726 @x119 @x724 @x334 @x319 @x726 @x119 @x307 @x424 @x119 @x724 false)))
 (let ((@x146 (unit-resolution (lemma @x822 (or (not $x147) $x145)) (lemma @x958 $x147) $x145)))
 (let ((@x488 (hypothesis $x145)))
 (let (($x829 (not $x740)))
 (let ((@x141 (hypothesis $x829)))
 (let ((@x258 ((_ th-lemma arith gcd-test -2 -2 -2 -2 -2 -2 -2 -2 -4/3 -4/3 -4/3 -4/3 -4/9 -4/9 -8/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3) @x319 @x141 @x319 @x141 @x488 @x319 @x141 @x488 @x319 @x307 @x726 @x424 @x319 @x141 @x488 @x319 @x141 @x488 @x319 @x141 @x488 @x334 @x735 false)))
 (let ((@x827 (hypothesis $x740)))
 (let ((@x490 (hypothesis $x259)))
 (let (($x210 (>= (+ k!2 c!3 ?x731 (* (- 2) ?x877)) 3)))
 (let ((@x228 (unit-resolution (hypothesis (not $x210)) ((_ th-lemma arith gomory-cut 1/2 1/2 1 1 1 1) @x490 @x334 @x490 @x563 @x319 @x726 $x210) false)))
 (let ((@x828 ((_ th-lemma arith farkas 1/2 1/3 1/6 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 1 1 1 1) @x307 @x424 @x827 @x307 @x735 @x424 (unit-resolution (lemma @x228 (or $x210 $x166 $x121)) @x490 @x563 $x210) @x827 @x490 @x563 @x307 @x827 @x490 @x563 @x307 @x827 false)))
 (let ((@x741 (unit-resolution (lemma @x828 (or $x829 $x166 $x121)) (unit-resolution (lemma @x258 (or $x782 $x740)) @x146 $x740) (or $x166 $x121))))
 (let (($x231 (>= (+ k!2 ?x731 (* (- 2) ?x877)) 1)))
 (let ((@x152 (unit-resolution (hypothesis (not $x231)) ((_ th-lemma arith gomory-cut 1/2 1 1) @x563 @x319 @x726 $x231) false)))
 (let ((@x777 (hypothesis $x776)))
 (let (($x825 (>= c!3 0)))
 (let (($x576 (>= ?x472 (- 1))))
 (let (($x128 (not $x825)))
 (let ((@x757 (hypothesis $x128)))
 (let ((@x542 ((_ th-lemma arith) @x757 (hypothesis (not $x576)) @x757 @x500 @x497 @x319 @x307 @x334 @x735 @x500 @x497 @x500 @x497 @x319 @x307 @x726 @x424 @x500 @x497 false)))
 (let ((@x768 (unit-resolution (lemma @x542 (or $x576 $x825)) @x757 $x576)))
 (let (($x758 (<= m!1 0)))
 (let (($x557 (not $x758)))
 (let ((@x459 ((_ th-lemma arith gomory-cut 1/2 1 1) @x563 @x726 @x319 $x231)))
 (let (($x788 (>= n!0 (- 1))))
 (let ((@x492 (hypothesis (not $x788))))
 (let ((@x342 ((_ th-lemma arith) @x492 @x492 @x319 @x307 @x726 @x424 @x319 @x307 @x319 @x307 @x334 @x735 @x334 @x735 @x726 @x424 @x319 @x307 @x500 @x497 @x726 @x424 false)))
 (let ((@x343 (lemma @x342 $x788)))
 (let ((@x913 (hypothesis $x231)))
 (let ((@x778 ((_ th-lemma arith farkas -1 1 6 -4 -4 1 1 1) @x777 @x334 @x913 @x424 @x307 @x307 @x343 (hypothesis $x758) false)))
 (let ((@x354 (unit-resolution (lemma @x778 (or $x557 $x157 (not $x231))) @x459 @x777 $x557)))
 (let ((@x274 ((_ th-lemma arith farkas 5/9 2/3 2/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/3 5/9 1/9 1/9 1/9 1/9 3 1 1 1 1 1 1 1 1) @x307 @x757 @x768 @x777 @x334 @x459 @x424 @x307 @x354 @x757 @x768 @x777 @x334 @x459 @x424 @x307 @x354 @x757 @x768 @x424 @x459 @x424 @x307 @x497 @x757 @x777 @x334 @x459 @x424 @x307 @x354 @x757 @x768 false)))
 (let ((@x169 (hypothesis $x166)))
 (let ((@x170 (hypothesis $x825)))
 (let ((@x171 ((_ th-lemma arith farkas 3 3 3 3 3 3 3 3 3 3 3 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x777 @x334 @x913 @x307 @x424 @x307 @x170 @x169 @x735 @x913 @x424 @x319 @x726 @x777 @x334 @x913 @x307 @x424 @x307 @x170 @x169 @x735 @x913 @x424 @x913 @x307 @x424 @x169 @x777 @x334 @x913 @x307 @x424 @x307 @x170 @x169 @x735 @x913 @x424 @x913 @x307 @x424 @x169 @x777 @x334 @x913 @x307 @x424 @x307 @x170 @x169 @x735 @x913 @x424 @x913 @x307 @x424 @x169 @x169 false)))
 (let ((@x819 (unit-resolution (lemma @x171 (or $x259 $x157 (not $x231) $x128)) (unit-resolution (lemma @x274 (or $x825 $x157 $x121)) @x777 @x563 $x825) @x777 (unit-resolution (lemma @x152 (or $x231 $x121)) @x563 $x231) (unit-resolution @x741 @x563 $x166) false)))
 (let ((@x933 (unit-resolution (lemma @x819 (or $x157 $x121)) (lemma @x977 $x776) $x121)))
 (let (($x129 (>= k!2 0)))
 (let ((@x540 ((_ th-lemma arith) @x319 @x307 (hypothesis (not $x129)) @x726 @x319 @x343 @x726 @x424 @x319 @x307 @x319 @x307 @x334 @x735 @x726 @x424 @x726 @x424 @x319 @x307 @x500 @x497 @x334 @x735 false)))
 (let ((@x389 (lemma @x540 $x129)))
 ((_ th-lemma arith gcd-test 2/3 2/3 2/3 2/3 2/3 2/3 1/9 1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9) @x389 @x933 @x389 @x933 @x334 @x735 @x500 @x497 @x389 @x933 @x389 @x933 @x389 @x933 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 59
 :arith-assert-diseq        14
 :arith-assert-lower        518
 :arith-assert-upper        220
 :arith-bound-prop          7
 :arith-branch-var          13
 :arith-conflicts           24
 :arith-eq-adapter          11
 :arith-fixed-eqs           85
 :arith-gcd-tests           136
 :arith-gomory-cuts         9
 :arith-grobner             17
 :arith-ineq-splits         13
 :arith-max-min             2101
 :arith-nonlinear-bounds    218
 :arith-nonlinear-horner    199
 :arith-num-rows            23
 :arith-offset-eqs          7
 :arith-patches             33
 :arith-patches_succ        7
 :arith-pivots              370
 :arith-pseudo-nonlinear    119
 :arith-row-summations      2540
 :arith-tableau-max-columns 64
 :arith-tableau-max-rows    23
 :conflicts                 31
 :decisions                 128
 :del-clause                80
 :final-checks              77
 :max-memory                3.84
 :memory                    3.25
 :minimized-lits            5
 :mk-bool-var               111
 :mk-clause                 87
 :num-allocs                2280082
 :num-checks                1
 :propagations              91
 :rlimit-count              120094
 :time                      0.03
 :total-time                0.04)
