unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(proof
(let (($x553 (>= c!3 0)))
 (let (($x324 (not $x553)))
 (let (($x944 (= c!3 0)))
 (let (($x568 (not $x944)))
 (let ((?x408 (* (- 1) m!1)))
 (let ((?x467 (* n!0 n!0)))
 (let ((?x507 (* 3 ?x467)))
 (let ((?x430 (* (- 1) k!2)))
 (let ((?x443 (* 9 n!0)))
 (let ((?x613 (+ ?x443 ?x430 ?x507 ?x408)))
 (let (($x754 (<= ?x613 (- 6))))
 (let ((?x395 (+ (* 6 n!0) ?x408)))
 (let (($x536 (<= ?x395 (- 6))))
 (let (($x401 (= ?x395 (- 6))))
 (let (($x929 (not $x401)))
 (let ((?x766 (* k!2 k!2)))
 (let ((?x214 (* m!1 m!1)))
 (let ((?x728 (+ (* 2 (* k!2 m!1)) ?x214 (* (- 9) (* n!0 c!3)) (* (- 9) (* n!0 k!2)) ?x443 (* (- 32) k!2) ?x766 (* (- 5) m!1) (* (- 27) c!3))))
 (let ((?x455 (* (- 3) c!3)))
 (let ((?x157 (* (- 3) k!2)))
 (let ((?x457 (* 2 n!0)))
 (let ((?x423 (* n!0 k!2)))
 (let ((?x323 (* n!0 m!1)))
 (let ((?x158 (* 12 m!1)))
 (let ((?x662 (* (- 5) (* k!2 m!1 m!1))))
 (let ((?x486 (* 37 (* k!2 k!2 k!2))))
 (let ((?x421 (+ k!2 c!3)))
 (let ((?x230 (+ k!2 m!1)))
 (let ((?x611 (+ 6 m!1)))
 (let ((?x184 (+ 1 n!0)))
 (let ((?x201 (* 7 (* k!2 k!2 m!1 m!1))))
 (let ((?x159 (* 36 n!0)))
 (let ((?x750 (* 32 (* k!2 k!2 m!1))))
 (let ((?x335 (* 7 (* k!2 k!2 k!2 m!1))))
 (let ((?x673 (+ 36 (* 7 (* n!0 k!2 k!2 m!1 m!1)) (* 14 (* n!0 k!2 k!2 m!1 c!3)) ?x335 (* 7 (* k!2 m!1 c!3 c!3)) (* 42 (* k!2 c!3 c!3)) ?x214 (* 7 (* n!0 k!2 k!2 k!2 m!1)) (* 14 (* n!0 k!2 m!1 m!1 c!3)) (* 42 (* n!0 k!2 k!2 m!1)) (* 7 (* n!0 m!1 m!1 c!3 c!3)) (* 12 ?x323) (* 42 (* m!1 c!3 c!3)) ?x750 (* 74 (* k!2 m!1 c!3)) ?x159 ?x201 (* 84 (* n!0 k!2 m!1 c!3)) (* 42 (* n!0 k!2 k!2 k!2)) (* 8 (* ?x184 ?x184 ?x611 ?x230 ?x421 ?x421)) (* 84 (* n!0 k!2 k!2 c!3)) ?x486 (* 79 (* k!2 k!2 c!3)) (* 42 (* n!0 k!2 c!3 c!3)) (* 14 (* k!2 k!2 m!1 c!3)) ?x662 ?x158 (* 14 (* k!2 m!1 m!1 c!3)) (* 7 (* m!1 m!1 c!3 c!3)) (* 42 (* n!0 m!1 c!3 c!3)) (* (- 5) (* m!1 m!1 c!3)) (* n!0 m!1 m!1) (* 7 (* n!0 k!2 m!1 c!3 c!3)))))
 (let (($x135 (or (not (= (+ ?x323 ?x423 ?x457 ?x157 ?x455) (- 2))) (not (= (* ?x673 (+ 2 ?x323 ?x423 ?x457 ?x157 ?x455)) 0)) (not (= ?x613 (- 6))) (not (= ?x728 (- 13))) $x929)))
 (let ((?x520 (+ (* 3 n!0) ?x430 ?x507)))
 (let (($x440 (= ?x520 0)))
 (let ((?x243 (+ ?x423 ?x457 ?x430 ?x455)))
 (let (($x248 (= ?x243 0)))
 (let ((?x898 (* 18 c!3)))
 (let ((?x687 (* (- 1) ?x766)))
 (let ((?x897 (* 5 k!2)))
 (let ((?x767 (* (- 9) n!0)))
 (let ((?x937 (+ (* 9 (* n!0 c!3)) ?x767 ?x897 ?x687 ?x898)))
 (let (($x516 (= ?x937 4)))
 (let (($x459 (and $x401 $x516 $x248 $x440 $x135)))
 (let ((?x454 (+ 36 ?x158 ?x159 (* 7 (* c!3 c!3 m!1 m!1)) (* 42 (* c!3 c!3 m!1)) (* 42 (* c!3 c!3 k!2 n!0)) (* 8 (* ?x184 ?x184 ?x611 ?x230 (+ c!3 k!2) (+ c!3 k!2))) (* 84 (* c!3 k!2 k!2 n!0)) (* 12 (* m!1 n!0)) (* 84 (* c!3 k!2 m!1 n!0)) (* 14 (* c!3 k!2 k!2 m!1)) (* 14 (* c!3 k!2 m!1 m!1)) (* 42 (* c!3 c!3 m!1 n!0)) ?x214 (* 42 (* c!3 c!3 k!2)) (* 7 (* c!3 c!3 k!2 m!1 n!0)) (* 14 (* c!3 k!2 k!2 m!1 n!0)) (* 7 (* k!2 k!2 k!2 m!1 n!0)) (* 7 (* c!3 c!3 m!1 m!1 n!0)) (* 14 (* c!3 k!2 m!1 m!1 n!0)) (* 7 (* k!2 k!2 m!1 m!1 n!0)) (* 79 (* c!3 k!2 k!2)) ?x486 (* 74 (* c!3 k!2 m!1)) ?x750 (* (- 5) (* c!3 m!1 m!1)) ?x662 (* 42 (* k!2 k!2 k!2 n!0)) (* 7 (* c!3 c!3 k!2 m!1)) ?x335 (* 42 (* k!2 k!2 m!1 n!0)) (* m!1 m!1 n!0) ?x201)))
 (let (($x359 (= (* ?x454 (+ 2 ?x455 ?x157 ?x457 (* k!2 n!0) (* m!1 n!0))) 0)))
 (let ((?x475 (* k!2 n!0)))
 (let ((?x693 (* (- 1) ?x475)))
 (let ((?x406 (* (- 2) n!0)))
 (let ((?x763 (* 3 c!3)))
 (let (($x213 (= (+ ?x763 (* 3 k!2) ?x406 ?x693 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x188 (* 9 (* c!3 n!0))))
 (let ((?x173 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x767 ?x687 (* 9 ?x475) ?x188 (* (- 2) (* k!2 m!1)) (* (- 1) ?x214))))
 (let (($x369 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= ?x173 13)) (not $x213) (not $x359) (not (= (+ k!2 m!1 ?x767 (* (- 3) ?x467)) 6)))))
 (let (($x899 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x473 (and $x899 (= (+ ?x898 ?x897 ?x767 ?x687 ?x188) 4) (= (+ ?x763 k!2 ?x406 ?x693) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x467)) 0) $x369)))
 (let (($x943 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x965 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x376 (* m n)))
 (let ((?x52 (* k n)))
 (let ((?x56 (* 2 n)))
 (let ((?x235 (* (- 3) c)))
 (let ((?x541 (+ 2 ?x235 (* (- 3) k) ?x56 ?x52 ?x376)))
 (let ((?x911 (* m m n)))
 (let ((?x739 (* (- 5) (* k m m))))
 (let ((?x736 (* (- 5) (* c m m))))
 (let ((?x661 (* 7 (* k k m m n))))
 (let ((?x655 (* 7 (* c c m m n))))
 (let ((?x653 (* 7 (* k k k m n))))
 (let ((?x647 (* 7 (* c c k m n))))
 (let ((?x490 (* m m)))
 (let ((?x934 (* 12 ?x376)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x233 (+ 6 m)))
 (let ((?x546 (+ 1 n)))
 (let ((?x338 (* 8 (* ?x546 ?x546 ?x233 ?x74 ?x71 ?x71))))
 (let ((?x925 (* 36 n)))
 (let ((?x143 (+ 36 (* 12 m) ?x925 (* 7 (* c c m m)) (* 42 (* c c m)) (* 42 (* c c k n)) ?x338 (* 84 (* c k k n)) ?x934 (* 84 (* c k m n)) (* 14 (* c k k m)) (* 14 (* c k m m)) (* 42 (* c c m n)) ?x490 (* 42 (* c c k)) ?x647 (* 14 (* c k k m n)) ?x653 ?x655 (* 14 (* c k m m n)) ?x661 (* 79 (* c k k)) (* 37 (* k k k)) (* 74 (* c k m)) (* 32 (* k k m)) ?x736 ?x739 (* 42 (* k k k n)) (* 7 (* c c k m)) (* 7 (* k k k m)) (* 42 (* k k m n)) ?x911 (* 7 (* k k m m)))))
 (let ((?x267 (* (- 1) ?x52)))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x557 (not (= (+ ?x264 (* 3 k) ?x266 ?x267 (* (- 1) ?x376)) 2))))
 (let ((?x164 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x527 (+ (* 27 c) (* 32 k) ?x439 ?x226 ?x227 (* 9 ?x52) ?x164 (* (- 2) (* k m)) (* (- 1) ?x490))))
 (let (($x531 (not (= ?x527 13))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x269 (= (+ ?x264 k ?x266 ?x267) 0)))
 (let (($x224 (= (+ (* 18 c) (* 5 k) ?x226 ?x227 ?x164) 4)))
 (and $x147 $x224 $x269 $x305 (or $x365 $x531 $x557 (not (= (* ?x143 ?x541) 0)) $x965)))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x419 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x414 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x439 ?x226 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let ((?x396 (+ ?x264 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x266)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x61 (* 3 n)))
 (let ((?x433 (* (- 1) m)))
 (let ((?x370 (* (- 1) k)))
 (let (($x353 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x370 ?x433 ?x61) (- 3))))
 (let (($x358 (not $x353)))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x546 (+ 1 n)))
 (let ((?x378 (* ?x546 ?x74)))
 (let ((?x163 (* (- 4) k)))
 (let ((?x235 (* (- 3) c)))
 (let ((?x338 (* 8 (* ?x546 ?x546 (+ 6 m) ?x74 (+ c k) (+ c k)))))
 (let ((?x181 (+ (* 7 (* ?x546 (+ 6 m) ?x74 (+ c k) (+ c k))) (* (- 5) (* ?x74 ?x74 (+ c k))) ?x338 (* ?x546 (+ 6 m) (+ 6 m)))))
 (let (($x326 (not (= (* ?x181 (+ 2 ?x235 ?x163 ?x378 ?x433 ?x56)) 0))))
 (let (($x441 (= (+ (* 3 (* n n)) ?x370 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x147 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x226 ?x227) 4) (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x441 (or $x326 $x358 $x365 (not (= ?x396 2)) (not (= ?x414 13))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x295 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x965 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x376 (* m n)))
 (let ((?x52 (* k n)))
 (let ((?x56 (* 2 n)))
 (let ((?x235 (* (- 3) c)))
 (let ((?x541 (+ 2 ?x235 (* (- 3) k) ?x56 ?x52 ?x376)))
 (let ((?x911 (* m m n)))
 (let ((?x739 (* (- 5) (* k m m))))
 (let ((?x736 (* (- 5) (* c m m))))
 (let ((?x661 (* 7 (* k k m m n))))
 (let ((?x655 (* 7 (* c c m m n))))
 (let ((?x653 (* 7 (* k k k m n))))
 (let ((?x647 (* 7 (* c c k m n))))
 (let ((?x490 (* m m)))
 (let ((?x934 (* 12 ?x376)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x233 (+ 6 m)))
 (let ((?x546 (+ 1 n)))
 (let ((?x338 (* 8 (* ?x546 ?x546 ?x233 ?x74 ?x71 ?x71))))
 (let ((?x925 (* 36 n)))
 (let ((?x143 (+ 36 (* 12 m) ?x925 (* 7 (* c c m m)) (* 42 (* c c m)) (* 42 (* c c k n)) ?x338 (* 84 (* c k k n)) ?x934 (* 84 (* c k m n)) (* 14 (* c k k m)) (* 14 (* c k m m)) (* 42 (* c c m n)) ?x490 (* 42 (* c c k)) ?x647 (* 14 (* c k k m n)) ?x653 ?x655 (* 14 (* c k m m n)) ?x661 (* 79 (* c k k)) (* 37 (* k k k)) (* 74 (* c k m)) (* 32 (* k k m)) ?x736 ?x739 (* 42 (* k k k n)) (* 7 (* c c k m)) (* 7 (* k k k m)) (* 42 (* k k m n)) ?x911 (* 7 (* k k m m)))))
 (let ((?x267 (* (- 1) ?x52)))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x557 (not (= (+ ?x264 (* 3 k) ?x266 ?x267 (* (- 1) ?x376)) 2))))
 (let ((?x164 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x527 (+ (* 27 c) (* 32 k) ?x439 ?x226 ?x227 (* 9 ?x52) ?x164 (* (- 2) (* k m)) (* (- 1) ?x490))))
 (let (($x531 (not (= ?x527 13))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x269 (= (+ ?x264 k ?x266 ?x267) 0)))
 (let (($x224 (= (+ (* 18 c) (* 5 k) ?x226 ?x227 ?x164) 4)))
 (let (($x985 (and $x147 $x224 $x269 $x305 (or $x365 $x531 $x557 (not (= (* ?x143 ?x541) 0)) $x965))))
 (let ((?x37 (* 18 c)))
 (let ((?x414 (+ ?x37 (* 23 k) (* 9 (* ?x546 ?x71)) ?x439 ?x226 (* (- 1) (* ?x74 ?x74)))))
 (let (($x435 (= (+ ?x264 (* 4 k) (* (- 1) (* ?x546 ?x74)) m ?x266) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x433 (* (- 1) m)))
 (let ((?x370 (* (- 1) k)))
 (let (($x358 (not (= (+ (* 3 (* ?x546 ?x546)) ?x370 ?x433 ?x61) (- 3)))))
 (let ((?x181 (+ (* 7 (* ?x546 ?x233 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x338 (* ?x546 ?x233 ?x233))))
 (let (($x567 (= (* ?x181 (+ 2 ?x235 (* (- 4) k) (* ?x546 ?x74) ?x433 ?x56)) 0)))
 (let (($x326 (not $x567)))
 (let (($x441 (= (+ (* 3 (* n n)) ?x370 ?x61) 0)))
 (let (($x603 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x226 ?x227) 4)))
 (let (($x418 (and $x147 $x603 (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x441 (or $x326 $x358 $x365 (not $x435) (not (= ?x414 13))))))
 (rewrite (= $x418 $x985)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x318 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x670 (* (- 18) c)))
 (let ((?x715 (+ ?x670 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x433 (* (- 1) m)))
 (let ((?x546 (+ 1 n)))
 (let ((?x378 (* ?x546 ?x74)))
 (let ((?x163 (* (- 4) k)))
 (let ((?x235 (* (- 3) c)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x353 (= (+ (* 3 (* ?x546 ?x546)) (* (- 1) k) ?x433 (* 3 n)) (- 3))))
 (let (($x358 (not $x353)))
 (let ((?x338 (* 8 (* ?x546 ?x546 (+ 6 m) ?x74 (+ c k) (+ c k)))))
 (let ((?x181 (+ (* 7 (* ?x546 (+ 6 m) ?x74 (+ c k) (+ c k))) (* (- 5) (* ?x74 ?x74 (+ c k))) ?x338 (* ?x546 (+ 6 m) (+ 6 m)))))
 (let (($x326 (not (= (* ?x181 (+ 2 ?x235 ?x163 ?x378 ?x433 ?x56)) 0))))
 (let (($x393 (or $x326 $x358 $x365 (not (= (+ ?x235 ?x163 ?x378 ?x433 ?x56) (- 2))) (not (= ?x715 (- 13))))))
 (let (($x441 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x329 (= (+ ?x670 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x147 $x329 (= (+ ?x235 (* n k) (* (- 1) k) ?x56) 0) $x441 $x393)))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x416 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x414 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x439 ?x226 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let ((?x396 (+ ?x264 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x266)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x61 (* 3 n)))
 (let ((?x433 (* (- 1) m)))
 (let ((?x370 (* (- 1) k)))
 (let (($x353 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x370 ?x433 ?x61) (- 3))))
 (let (($x358 (not $x353)))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x546 (+ 1 n)))
 (let ((?x378 (* ?x546 ?x74)))
 (let ((?x163 (* (- 4) k)))
 (let ((?x235 (* (- 3) c)))
 (let ((?x338 (* 8 (* ?x546 ?x546 (+ 6 m) ?x74 (+ c k) (+ c k)))))
 (let ((?x181 (+ (* 7 (* ?x546 (+ 6 m) ?x74 (+ c k) (+ c k))) (* (- 5) (* ?x74 ?x74 (+ c k))) ?x338 (* ?x546 (+ 6 m) (+ 6 m)))))
 (let (($x326 (not (= (* ?x181 (+ 2 ?x235 ?x163 ?x378 ?x433 ?x56)) 0))))
 (let (($x441 (= (+ (* 3 (* n n)) ?x370 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x418 (and $x147 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x226 ?x227) 4) (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x441 (or $x326 $x358 $x365 (not (= ?x396 2)) (not (= ?x414 13))))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x670 (* (- 18) c)))
 (let ((?x715 (+ ?x670 (* (- 23) k) (* (- 9) (* ?x546 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x393 (or $x326 $x358 $x365 (not (= (+ ?x235 ?x163 ?x378 ?x433 ?x56) (- 2))) (not (= ?x715 (- 13))))))
 (let (($x329 (= (+ ?x670 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x511 (and $x147 $x329 (= (+ ?x235 (* n k) ?x370 ?x56) 0) $x441 $x393)))
 (rewrite (= $x511 $x418))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x106 (+ (- (* 7 ?x71 ?x71 ?x74 ?x99 ?x66) (* 5 ?x71 ?x74 ?x74)) (* 8 ?x71 ?x71 ?x74 ?x99 ?x66 ?x66) (* ?x99 ?x99 ?x66))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x110 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x89 ?x106) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x110))))))))))))))) :qid k!38))
 ))
 (let ((?x115 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x670 (* (- 18) c)))
 (let ((?x715 (+ ?x670 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x433 (* (- 1) m)))
 (let ((?x546 (+ 1 n)))
 (let ((?x378 (* ?x546 ?x74)))
 (let ((?x163 (* (- 4) k)))
 (let ((?x235 (* (- 3) c)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x353 (= (+ (* 3 (* ?x546 ?x546)) (* (- 1) k) ?x433 (* 3 n)) (- 3))))
 (let (($x358 (not $x353)))
 (let ((?x338 (* 8 (* ?x546 ?x546 (+ 6 m) ?x74 (+ c k) (+ c k)))))
 (let ((?x181 (+ (* 7 (* ?x546 (+ 6 m) ?x74 (+ c k) (+ c k))) (* (- 5) (* ?x74 ?x74 (+ c k))) ?x338 (* ?x546 (+ 6 m) (+ 6 m)))))
 (let (($x326 (not (= (* ?x181 (+ 2 ?x235 ?x163 ?x378 ?x433 ?x56)) 0))))
 (let (($x393 (or $x326 $x358 $x365 (not (= (+ ?x235 ?x163 ?x378 ?x433 ?x56) (- 2))) (not (= ?x715 (- 13))))))
 (let (($x441 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x329 (= (+ ?x670 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x511 (and $x147 $x329 (= (+ ?x235 (* n k) (* (- 1) k) ?x56) 0) $x441 $x393)))
 (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x106 (+ (- (* 7 ?x71 ?x71 ?x74 ?x99 ?x66) (* 5 ?x71 ?x74 ?x74)) (* 8 ?x71 ?x71 ?x74 ?x99 ?x66 ?x66) (* ?x99 ?x99 ?x66))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x110 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x89 ?x106) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x111 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x110)))
 (rewrite (= $x111 $x511))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x113 (asserted $x112)))
 (let ((@x344 (mp (mp @x113 (quant-intro (proof-bind ?x115) (= $x112 $x318)) $x318) (rewrite (= $x318 $x318)) $x318)))
 (let ((@x150 (mp (mp @x344 (quant-intro (proof-bind ?x416) (= $x318 $x419)) $x419) (quant-intro (proof-bind ?x295) (= $x419 $x943)) $x943)))
 (let ((@x930 (mp (mp~ @x150 (sk (~ $x943 $x473)) $x473) (rewrite (= $x473 $x459)) $x459)))
 (let ((@x909 (and-elim @x930 $x401)))
 (let ((@x134 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x929 $x536)) @x909 $x536)))
 (let (($x939 (<= ?x520 0)))
 (let ((@x254 (and-elim @x930 $x440)))
 (let ((@x932 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x754 (not $x939) (not $x536))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x440) $x939)) @x254 $x939) @x134 $x754)))
 (let (($x758 (>= ?x613 (- 6))))
 (let (($x574 (>= ?x520 0)))
 (let (($x491 (>= ?x395 (- 6))))
 (let ((@x923 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x929 $x491)) @x909 $x491)))
 (let ((@x760 ((_ th-lemma arith farkas -1 1 1) (hypothesis (not $x758)) @x923 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x440) $x574)) @x254 $x574) false)))
 (let ((@x759 (lemma @x760 $x758)))
 (let (($x399 (<= c!3 0)))
 (let ((@x281 (hypothesis $x944)))
 (let ((@x738 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x568 $x399)) @x281 $x399)))
 (let ((@x208 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x568 $x553)) @x281 $x553)))
 (let (($x938 (<= ?x937 4)))
 (let ((@x478 (and-elim @x930 $x516)))
 (let ((@x506 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x516) $x938)) @x478 $x938)))
 (let (($x500 (>= ?x937 4)))
 (let ((@x409 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x516) $x500)) @x478 $x500)))
 (let (($x503 (<= ?x243 0)))
 (let ((@x371 (and-elim @x930 $x248)))
 (let ((@x179 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x248) $x503)) @x371 $x503)))
 (let (($x556 (>= ?x243 0)))
 (let ((@x447 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x248) $x556)) @x371 $x556)))
 (let ((@x678 ((_ th-lemma arith) @x409 @x506 @x759 @x932 @x208 @x738 @x759 @x932 @x409 @x506 @x923 @x134 @x447 @x179 @x409 @x506 @x208 @x738 @x208 @x738 @x409 @x506 @x923 @x134 @x759 @x932 @x923 @x134 @x208 @x738 @x923 @x134 @x759 @x932 false)))
 (let (($x980 (<= c!3 1)))
 (let ((@x671 ((_ th-lemma arith) (hypothesis (not $x980)) @x923 @x134 @x759 @x932 @x759 @x932 @x923 @x134 @x759 @x932 @x447 @x179 @x409 @x506 @x923 @x134 @x923 @x134 @x759 @x932 false)))
 (let ((@x357 (hypothesis $x980)))
 (let (($x554 (not $x399)))
 (let ((@x431 (hypothesis $x554)))
 (let ((@x437 ((_ th-lemma arith) @x409 @x506 @x447 @x179 @x431 @x357 @x447 @x179 @x431 @x357 @x431 @x357 @x431 @x357 @x431 @x357 @x431 @x357 @x431 @x357 @x447 @x179 @x923 @x134 @x923 @x134 @x759 @x932 @x431 @x357 @x431 @x357 @x431 @x357 @x431 @x357 @x431 @x357 false)))
 (let ((@x570 (unit-resolution (lemma @x437 (or (not $x980) $x399)) (lemma @x671 $x980) $x399)))
 (let ((@x983 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x944 $x554 $x324)) @x570 (lemma @x678 $x568) $x324)))
 (let (($x1704 (>= c!3 (- 1))))
 (let (($x1650 (<= k!2 0)))
 (let (($x1229 (not $x1650)))
 (let (($x290 (>= k!2 0)))
 (let (($x692 (<= n!0 (- 2))))
 (let (($x374 (>= n!0 0)))
 (let (($x280 (not $x374)))
 (let (($x593 (<= n!0 0)))
 (let ((@x1641 ((_ th-lemma arith) (hypothesis (>= (+ n!0 (* (- 2) c!3)) 3)) @x923 @x134 @x923 @x134 @x759 @x932 @x759 @x932 @x759 @x932 @x447 @x179 @x447 @x179 @x923 @x134 @x447 @x179 @x923 @x134 @x759 @x932 @x409 @x506 @x923 @x134 false)))
 (let ((@x1649 (lemma @x1641 (not (>= (+ n!0 (* (- 2) c!3)) 3)))))
 (let ((@x1629 (unit-resolution ((_ th-lemma arith assign-bounds 1 1/2) (or $x593 $x553 (>= (+ n!0 (* (- 2) c!3)) 3))) @x983 @x1649 $x593)))
 (let (($x333 (= n!0 0)))
 (let (($x288 (not $x333)))
 (let ((@x578 (hypothesis $x333)))
 (let ((@x707 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x288 $x593)) @x578 $x593)))
 (let ((@x684 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x288 $x374)) @x578 $x374)))
 (let ((@x277 (lemma ((_ th-lemma arith farkas 1/3 1/3 3 3 5/3 5/3 5/3 1) @x707 @x409 @x684 @x707 @x684 @x707 @x447 @x983 false) $x288)))
 (let ((@x1677 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x333 (not $x593) $x280)) @x277 (or (not $x593) $x280))))
 (let (($x488 (>= ?x766 0)))
 (let ((@x242 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x488)) false) $x488)))
 (let ((@x282 (hypothesis $x280)))
 (let (($x992 (not $x692)))
 (let ((@x291 (hypothesis $x992)))
 (let ((@x994 ((_ th-lemma arith farkas 5 15 15 15 15 5 6 9 1 9 9 1) @x134 @x291 @x282 @x291 @x282 @x759 @x282 @x983 @x409 @x291 @x282 @x242 false)))
 (let ((@x1613 (unit-resolution (lemma @x994 (or $x692 $x374)) (unit-resolution @x1677 @x1629 $x280) $x692)))
 (let ((@x710 (hypothesis $x692)))
 (let (($x1013 (not $x290)))
 (let ((@x465 (hypothesis $x1013)))
 (let ((@x257 ((_ th-lemma arith) @x923 @x465 @x710 @x932 @x465 @x923 @x465 @x710 @x932 @x923 @x932 false)))
 (let ((@x1640 (hypothesis $x1650)))
 (let ((@x1575 (hypothesis $x290)))
 (let ((@x1228 ((_ th-lemma arith gcd-test 2/3 2/3 2/3 2/3 -1/9 -1/9 1/9 1/9 -2/3 -2/3 -1/9 -1/9 -1/9 -1/9 -1/9) @x1575 @x1640 @x1575 @x1640 @x923 @x134 @x759 @x932 @x447 @x179 @x409 @x506 @x242 @x1575 @x1640 false)))
 (let ((@x1647 (unit-resolution (lemma @x1228 (or $x1229 $x1013)) (unit-resolution (lemma @x257 (or $x290 $x992)) @x1613 $x290) $x1229)))
 (let ((@x1592 (hypothesis (not $x1704))))
 (let ((@x1664 (lemma ((_ th-lemma arith farkas -2 1 1 -1 1 1 1) @x1649 @x447 @x1647 @x1592 @x1592 @x1649 @x1647 false) $x1704)))
 ((_ th-lemma arith) @x923 @x134 @x923 @x134 @x923 @x134 @x923 @x134 @x1664 @x983 @x1664 @x983 @x1664 @x983 @x1664 @x983 @x1664 @x983 @x409 @x506 @x447 @x179 @x1664 @x983 @x1664 @x983 @x1664 @x983 @x1664 @x983 @x923 @x134 @x759 @x932 @x1664 @x983 @x1664 @x983 @x1664 @x983 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 105
 :arith-assert-diseq        52
 :arith-assert-lower        574
 :arith-assert-upper        575
 :arith-bound-prop          3
 :arith-branch-var          22
 :arith-conflicts           38
 :arith-eq-adapter          19
 :arith-fixed-eqs           157
 :arith-gcd-tests           197
 :arith-gomory-cuts         16
 :arith-grobner             31
 :arith-ineq-splits         22
 :arith-max-min             5586
 :arith-nonlinear-bounds    316
 :arith-nonlinear-horner    359
 :arith-num-rows            18
 :arith-offset-eqs          9
 :arith-patches             49
 :arith-patches_succ        5
 :arith-pivots              800
 :arith-pseudo-nonlinear    134
 :arith-row-summations      4779
 :arith-tableau-max-columns 90
 :arith-tableau-max-rows    18
 :conflicts                 41
 :decisions                 233
 :del-clause                131
 :final-checks              124
 :max-memory                4.06
 :memory                    3.32
 :minimized-lits            17
 :mk-bool-var               238
 :mk-clause                 160
 :num-allocs                3587058
 :num-checks                1
 :propagations              245
 :rlimit-count              270491
 :time                      0.07
 :total-time                0.08)
