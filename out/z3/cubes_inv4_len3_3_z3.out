unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let (($x153 (<= c!3 0)))
 (let (($x406 (>= c!3 1)))
 (let (($x550 (not $x406)))
 (let (($x515 (<= c!3 1)))
 (let (($x123 (<= c!3 2)))
 (let ((?x530 (* k!2 k!2)))
 (let ((?x437 (* n!0 c!3)))
 (let ((?x243 (* (- 9) ?x437)))
 (let ((?x241 (* (- 5) k!2)))
 (let ((?x335 (* 9 n!0)))
 (let ((?x244 (+ ?x335 ?x241 (* (- 18) c!3) ?x243 ?x530)))
 (let (($x533 (<= ?x244 (- 4))))
 (let (($x248 (= ?x244 (- 4))))
 (let ((?x454 (* m!1 m!1)))
 (let ((?x130 (+ ?x335 (* (- 9) (* n!0 k!2)) (* (- 32) k!2) (* (- 27) c!3) (* 2 (* k!2 m!1)) ?x243 ?x454 (* (- 5) m!1) ?x530)))
 (let ((?x247 (* (- 1) m!1)))
 (let ((?x583 (* (- 1) k!2)))
 (let ((?x357 (* n!0 n!0)))
 (let ((?x334 (* 3 ?x357)))
 (let ((?x338 (+ ?x335 ?x334 ?x583 ?x247)))
 (let ((?x384 (* (- 3) c!3)))
 (let ((?x257 (* n!0 k!2)))
 (let ((?x353 (* 2 n!0)))
 (let ((?x238 (+ (* 6 n!0) ?x247)))
 (let (($x313 (= ?x238 (- 6))))
 (let (($x292 (not $x313)))
 (let ((?x284 (* 3 ?x530)))
 (let ((?x190 (* 3 (* c!3 m!1))))
 (let ((?x410 (* k!2 m!1)))
 (let ((?x156 (* 3 ?x410)))
 (let ((?x345 (* 42 (* k!2 k!2 m!1))))
 (let ((?x408 (* 4 ?x357)))
 (let ((?x211 (* 42 (* k!2 k!2 k!2))))
 (let ((?x600 (* 7 (* k!2 k!2 k!2 m!1))))
 (let ((?x233 (* c!3 c!3 m!1)))
 (let ((?x235 (* 42 ?x233)))
 (let ((?x208 (* 7 (* c!3 c!3 m!1 m!1))))
 (let ((?x493 (* 7 (* k!2 k!2 m!1 m!1))))
 (let ((?x278 (* 8 n!0)))
 (let ((?x464 (+ 4 ?x278 ?x493 (* 84 (* k!2 c!3 m!1)) ?x208 ?x235 ?x600 (* 42 (* k!2 c!3 c!3)) ?x211 ?x408 (* 84 (* k!2 k!2 c!3)) ?x345 ?x156 (* 3 (* k!2 c!3)) ?x190 (* 14 (* k!2 k!2 c!3 m!1)) ?x284 (* 14 (* k!2 c!3 m!1 m!1)) (* 7 (* k!2 c!3 c!3 m!1)))))
 (let (($x415 (or (not (= (* ?x464 (+ 6 ?x335 ?x334 ?x583 ?x247)) 0)) $x292 (not (= (+ ?x353 ?x257 (* (- 3) k!2) ?x384 (* n!0 m!1)) (- 2))) (not (= ?x338 (- 6))) (not (= ?x130 (- 13))))))
 (let ((?x500 (+ (* 3 n!0) ?x334 ?x583)))
 (let (($x380 (= ?x500 0)))
 (let ((?x133 (+ ?x353 ?x257 ?x583 ?x384)))
 (let (($x425 (= ?x133 0)))
 (let (($x387 (and $x313 $x248 $x425 $x380 $x415)))
 (let ((?x246 (* k!2 n!0)))
 (let ((?x151 (* (- 1) ?x246)))
 (let ((?x503 (* (- 2) n!0)))
 (let ((?x525 (* 3 c!3)))
 (let (($x442 (= (+ ?x525 (* 3 k!2) ?x503 ?x151 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x268 (* 9 (* c!3 n!0))))
 (let ((?x536 (* (- 1) ?x530)))
 (let ((?x401 (* (- 9) n!0)))
 (let ((?x160 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x401 ?x536 (* 9 ?x246) ?x268 (* (- 2) ?x410) (* (- 1) ?x454))))
 (let ((?x449 (+ 4 ?x278 ?x284 ?x345 ?x408 (* 84 (* c!3 k!2 k!2)) ?x211 ?x235 ?x156 (* 84 (* c!3 k!2 m!1)) (* 42 (* c!3 c!3 k!2)) (* 7 (* c!3 c!3 k!2 m!1)) (* 14 (* c!3 k!2 k!2 m!1)) ?x600 ?x208 (* 14 (* c!3 k!2 m!1 m!1)) ?x493 (* 3 (* c!3 k!2)) ?x190)))
 (let (($x419 (or (not (= (+ k!2 m!1 ?x401 (* (- 3) ?x357)) 6)) (not (= (* ?x449 (+ 6 ?x583 ?x247 ?x335 ?x334)) 0)) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= ?x160 13)) (not $x442))))
 (let (($x654 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x364 (and $x654 (= (+ (* 18 c!3) (* 5 k!2) ?x401 ?x536 ?x268) 4) (= (+ ?x525 k!2 ?x503 ?x151) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x357)) 0) $x419)))
 (let (($x409 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x546 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x554 (not $x546)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x524 (+ (* 27 c) (* 32 k) ?x436 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x528 (not (= ?x524 13))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x45 (* 9 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x649 (* 3 (* c m))))
 (let ((?x646 (* 3 (* c k))))
 (let ((?x639 (* 7 (* k k m m))))
 (let ((?x633 (* 7 (* c c m m))))
 (let ((?x631 (* 7 (* k k k m))))
 (let ((?x625 (* 7 (* c c k m))))
 (let ((?x486 (* k m)))
 (let ((?x650 (* 3 ?x486)))
 (let ((?x578 (* 4 ?x271)))
 (let ((?x647 (* 3 ?x46)))
 (let ((?x306 (+ 4 (* 8 n) ?x647 (* 42 (* k k m)) ?x578 (* 84 (* c k k)) (* 42 (* k k k)) (* 42 (* c c m)) ?x650 (* 84 (* c k m)) (* 42 (* c c k)) ?x625 (* 14 (* c k k m)) ?x631 ?x633 (* 14 (* c k m m)) ?x639 ?x646 ?x649)))
 (let (($x162 (or (not (= (+ k m ?x223 (* (- 3) ?x271)) 6)) (not (= (* ?x306 (+ 6 ?x239 ?x477 ?x45 ?x272)) 0)) $x362 $x528 $x554)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (and $x144 $x221 $x266 $x302 $x162)))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x168 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x314 (+ 1 n)))
 (let ((?x382 (* ?x314 ?x314)))
 (let ((?x390 (* 3 ?x382)))
 (let (($x585 (not (= (+ ?x390 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x504 (= (+ ?x261 (* 4 k) (* (- 1) (* ?x314 (+ k m))) m ?x263) 2)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x312 (+ ?x37 (* 23 k) (* 9 (* ?x314 (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x282 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x276 (* (+ (* 4 ?x382) ?x282 (* 3 (* (+ k m) (+ c k)))) (+ 3 ?x390 ?x239 ?x477 ?x61))))
 (let (($x295 (not (= ?x276 0))))
 (let (($x434 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x434 (or $x295 $x362 (not (= ?x312 13)) (not $x504) $x585))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x389 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x546 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x554 (not $x546)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x524 (+ (* 27 c) (* 32 k) ?x436 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x528 (not (= ?x524 13))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x45 (* 9 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x649 (* 3 (* c m))))
 (let ((?x646 (* 3 (* c k))))
 (let ((?x639 (* 7 (* k k m m))))
 (let ((?x633 (* 7 (* c c m m))))
 (let ((?x631 (* 7 (* k k k m))))
 (let ((?x625 (* 7 (* c c k m))))
 (let ((?x486 (* k m)))
 (let ((?x650 (* 3 ?x486)))
 (let ((?x578 (* 4 ?x271)))
 (let ((?x647 (* 3 ?x46)))
 (let ((?x306 (+ 4 (* 8 n) ?x647 (* 42 (* k k m)) ?x578 (* 84 (* c k k)) (* 42 (* k k k)) (* 42 (* c c m)) ?x650 (* 84 (* c k m)) (* 42 (* c c k)) ?x625 (* 14 (* c k k m)) ?x631 ?x633 (* 14 (* c k m m)) ?x639 ?x646 ?x649)))
 (let (($x162 (or (not (= (+ k m ?x223 (* (- 3) ?x271)) 6)) (not (= (* ?x306 (+ 6 ?x239 ?x477 ?x45 ?x272)) 0)) $x362 $x528 $x554)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (let (($x216 (and $x144 $x221 $x266 $x302 $x162)))
 (let ((?x61 (* 3 n)))
 (let ((?x314 (+ 1 n)))
 (let ((?x382 (* ?x314 ?x314)))
 (let ((?x390 (* 3 ?x382)))
 (let (($x585 (not (= (+ ?x390 ?x239 ?x477 ?x61) (- 3)))))
 (let (($x504 (= (+ ?x261 (* 4 k) (* (- 1) (* ?x314 (+ k m))) m ?x263) 2)))
 (let ((?x37 (* 18 c)))
 (let ((?x312 (+ ?x37 (* 23 k) (* 9 (* ?x314 (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x282 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x276 (* (+ (* 4 ?x382) ?x282 (* 3 (* (+ k m) (+ c k)))) (+ 3 ?x390 ?x239 ?x477 ?x61))))
 (let (($x295 (not (= ?x276 0))))
 (let (($x434 (= (+ ?x272 ?x239 ?x61) 0)))
 (let (($x527 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x223 ?x224) 4)))
 (let (($x204 (and $x144 $x527 (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x434 (or $x295 $x362 (not (= ?x312 13)) (not $x504) $x585))))
 (rewrite (= $x204 $x216)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x567 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x314 (+ 1 n)))
 (let ((?x382 (* ?x314 ?x314)))
 (let ((?x390 (* 3 ?x382)))
 (let (($x585 (not (= (+ ?x390 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x496 (* ?x314 ?x74)))
 (let ((?x339 (* (- 3) c)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x294 (+ (* 4 ?x382) (* 7 (* (+ 6 m) ?x74 (+ c k) (+ c k))) (* 3 (* ?x74 (+ c k))))))
 (let (($x295 (not (= (* ?x294 (+ 3 ?x390 ?x239 ?x477 ?x61)) 0))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x460 (* (- 18) c)))
 (let ((?x240 (+ ?x460 (* (- 23) k) (* (- 9) (* ?x314 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x275 (or (not (= ?x240 (- 13))) $x295 $x362 (not (= (+ ?x339 (* (- 4) k) ?x496 ?x477 ?x56) (- 2))) $x585)))
 (let (($x434 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let (($x317 (= (+ ?x460 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x144 $x317 (= (+ ?x339 (* n k) ?x239 ?x56) 0) $x434 $x275))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x439 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x314 (+ 1 n)))
 (let ((?x382 (* ?x314 ?x314)))
 (let ((?x390 (* 3 ?x382)))
 (let (($x585 (not (= (+ ?x390 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x504 (= (+ ?x261 (* 4 k) (* (- 1) (* ?x314 (+ k m))) m ?x263) 2)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x312 (+ ?x37 (* 23 k) (* 9 (* ?x314 (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x282 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x276 (* (+ (* 4 ?x382) ?x282 (* 3 (* (+ k m) (+ c k)))) (+ 3 ?x390 ?x239 ?x477 ?x61))))
 (let (($x295 (not (= ?x276 0))))
 (let (($x434 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x204 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x434 (or $x295 $x362 (not (= ?x312 13)) (not $x504) $x585))))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x496 (* ?x314 ?x74)))
 (let ((?x339 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x460 (* (- 18) c)))
 (let ((?x240 (+ ?x460 (* (- 23) k) (* (- 9) (* ?x314 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x275 (or (not (= ?x240 (- 13))) $x295 $x362 (not (= (+ ?x339 (* (- 4) k) ?x496 ?x477 ?x56) (- 2))) $x585)))
 (let (($x317 (= (+ ?x460 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x289 (and $x144 $x317 (= (+ ?x339 (* n k) ?x239 ?x56) 0) $x434 $x275)))
 (rewrite (= $x289 $x204))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x103 (+ (* 4 (+ n 1) (+ n 1)) (* 7 (+ c k) (+ c k) (+ k m) (+ m 6)) (* 3 (+ c k) (+ k m)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) (+ k m)) (* 3 (+ n 1)))))
 (let ((?x74 (+ k m)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x107 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x95 ?x103) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x107))))))))))))))) :qid k!38))
 ))
 (let ((?x484 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x477 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x314 (+ 1 n)))
 (let ((?x382 (* ?x314 ?x314)))
 (let ((?x390 (* 3 ?x382)))
 (let (($x585 (not (= (+ ?x390 ?x239 ?x477 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x496 (* ?x314 ?x74)))
 (let ((?x339 (* (- 3) c)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x294 (+ (* 4 ?x382) (* 7 (* (+ 6 m) ?x74 (+ c k) (+ c k))) (* 3 (* ?x74 (+ c k))))))
 (let (($x295 (not (= (* ?x294 (+ 3 ?x390 ?x239 ?x477 ?x61)) 0))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x460 (* (- 18) c)))
 (let ((?x240 (+ ?x460 (* (- 23) k) (* (- 9) (* ?x314 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x275 (or (not (= ?x240 (- 13))) $x295 $x362 (not (= (+ ?x339 (* (- 4) k) ?x496 ?x477 ?x56) (- 2))) $x585)))
 (let (($x434 (= (+ (* 3 (* n n)) ?x239 ?x61) 0)))
 (let (($x317 (= (+ ?x460 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x289 (and $x144 $x317 (= (+ ?x339 (* n k) ?x239 ?x56) 0) $x434 $x275)))
 (let ((?x103 (+ (* 4 (+ n 1) (+ n 1)) (* 7 (+ c k) (+ c k) ?x74 (+ m 6)) (* 3 (+ c k) ?x74))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x107 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x95 ?x103) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x108 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x107)))
 (rewrite (= $x108 $x289)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x475 (mp (mp @x110 (quant-intro (proof-bind ?x484) (= $x109 $x567)) $x567) (rewrite (= $x567 $x567)) $x567)))
 (let ((@x351 (mp (mp @x475 (quant-intro (proof-bind ?x439) (= $x567 $x168)) $x168) (quant-intro (proof-bind ?x389) (= $x168 $x409)) $x409)))
 (let ((@x402 (mp (mp~ @x351 (sk (~ $x409 $x364)) $x364) (rewrite (= $x364 $x387)) $x387)))
 (let ((@x592 (and-elim @x402 $x248)))
 (let ((@x126 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x248) $x533)) @x592 $x533)))
 (let (($x260 (>= ?x244 (- 4))))
 (let ((@x641 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x248) $x260)) @x592 $x260)))
 (let (($x258 (<= ?x133 0)))
 (let ((@x508 (and-elim @x402 $x425)))
 (let ((@x117 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x425) $x258)) @x508 $x258)))
 (let (($x482 (>= ?x133 0)))
 (let ((@x228 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x425) $x482)) @x508 $x482)))
 (let (($x462 (<= ?x238 (- 6))))
 (let ((@x534 (and-elim @x402 $x313)))
 (let ((@x232 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x292 $x462)) @x534 $x462)))
 (let (($x198 (>= ?x238 (- 6))))
 (let ((@x121 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x292 $x198)) @x534 $x198)))
 (let (($x553 (<= ?x338 (- 6))))
 (let (($x346 (<= ?x500 0)))
 (let ((@x367 (and-elim @x402 $x380)))
 (let ((@x320 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x553 (not $x346) (not $x462))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x380) $x346)) @x367 $x346) @x232 $x553)))
 (let (($x511 (>= ?x338 (- 6))))
 (let (($x157 (>= ?x500 0)))
 (let ((@x341 ((_ th-lemma arith farkas -1 1 1) (hypothesis (not $x511)) @x121 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x380) $x157)) @x367 $x157) false)))
 (let ((@x315 (lemma @x341 $x511)))
 (let ((@x1244 ((_ th-lemma arith) (hypothesis (not $x123)) @x315 @x320 @x228 @x117 @x121 @x232 @x315 @x320 @x315 @x320 @x228 @x117 @x121 @x232 @x228 @x117 @x121 @x232 @x315 @x320 @x121 @x232 @x228 @x117 @x641 @x126 false)))
 (let ((@x862 (hypothesis $x123)))
 (let (($x446 (not $x515)))
 (let ((@x840 (hypothesis $x446)))
 (let ((@x864 ((_ th-lemma arith) @x840 @x862 @x840 @x862 @x121 @x232 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x315 @x320 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x641 @x126 @x641 @x126 @x641 @x126 @x121 @x232 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x840 @x862 @x228 @x117 @x840 @x862 @x840 @x862 @x641 @x126 false)))
 (let ((@x1266 (unit-resolution (lemma @x864 (or (not $x123) $x515)) (lemma @x1244 $x123) $x515)))
 (let ((@x595 (hypothesis $x515)))
 (let ((@x479 (hypothesis $x406)))
 (let ((@x597 ((_ th-lemma arith) @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x315 @x320 @x121 @x232 @x121 @x232 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x315 @x320 @x315 @x320 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x121 @x232 @x228 @x117 @x121 @x232 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x479 @x595 @x641 @x126 @x479 @x595 @x479 @x595 @x315 @x320 @x121 @x232 @x479 @x595 @x641 @x126 false)))
 (let ((@x1159 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x406 $x153)) (unit-resolution (lemma @x597 (or $x446 $x550)) @x1266 $x550) $x153)))
 (let (($x154 (>= c!3 0)))
 (let ((@x397 (hypothesis (not $x154))))
 (let (($x970 (>= ?x233 0)))
 (let (($x981 (not $x970)))
 (let (($x167 (>= ?x437 2)))
 (let ((@x139 (hypothesis (not $x167))))
 (let ((@x212 (hypothesis (not $x153))))
 (let (($x779 (<= n!0 1)))
 (let (($x787 (not $x779)))
 (let (($x772 (<= m!1 8)))
 (let (($x776 (not $x772)))
 (let (($x445 (<= m!1 7)))
 (let (($x659 (not $x445)))
 (let (($x517 (<= m!1 6)))
 (let (($x760 (not $x517)))
 (let ((@x686 (hypothesis $x517)))
 (let (($x175 (>= n!0 0)))
 (let (($x136 (>= k!2 0)))
 (let ((@x374 (hypothesis (not $x136))))
 (let ((@x196 (lemma ((_ th-lemma arith) @x374 @x121 @x320 @x320 @x374 @x121 @x320 @x374 @x121 false) $x136)))
 (let ((@x453 (hypothesis (not $x175))))
 (let (($x393 (>= ?x357 2)))
 (let (($x354 (not $x393)))
 (let ((@x146 ((_ th-lemma arith farkas 1/6 1/2 -1/6 -3/2 -1/6 1 1 1) @x121 (hypothesis $x393) @x320 @x139 @x126 @x228 @x453 @x196 false)))
 (let ((@x603 (unit-resolution (lemma @x146 (or $x354 $x167 $x175)) @x453 @x139 $x354)))
 (let ((@x140 ((_ th-lemma arith farkas 1/3 -1/18 -1/3 1/6 1/2 1/18 1/3 1/3 1 -1/3 1) @x453 @x196 @x228 @x453 @x139 @x126 @x117 @x232 (hypothesis $x354) @x315 @x397 false)))
 (let ((@x605 (unit-resolution (lemma @x140 (or $x393 $x175 $x167 $x154)) @x603 @x139 @x453 $x154)))
 (let ((@x215 (lemma ((_ th-lemma arith farkas 1 3 -2 1 1 1) @x196 @x212 @x453 @x228 @x453 @x196 false) (or $x153 $x175))))
 (let ((@x643 ((_ th-lemma arith farkas 3/2 -9/2 3/2 -3/2 3/2 3/2 9/2 9/2 1/2 1/2 1/2 1/2 1/2 1/2 9 1) @x121 @x453 @x196 @x232 @x315 @x320 @x605 (unit-resolution @x215 @x453 $x153) @x196 @x453 @x232 @x603 @x315 @x641 @x605 @x196 false)))
 (let ((@x685 (unit-resolution (lemma @x643 (or $x175 $x167)) @x139 $x175)))
 (let ((?x766 (+ (* 16 n!0) (* 3 ?x257) ?x334 ?x241 (* (- 15) c!3) (* (- 5) ?x437) ?x247 ?x530)))
 (let ((@x758 ((_ th-lemma arith gomory-cut 1/5 1/4 1/10 -1/10 3/5 -9/10 -1/10 3/4 1/4) @x121 @x315 @x121 @x320 @x228 @x139 @x126 @x228 @x641 (>= ?x766 (- 6)))))
 (let ((@x769 (lemma ((_ th-lemma arith farkas 1/4 1 1 1 -1/4 1/4 -1/4 1 1 1) @x320 @x685 @x686 @x232 @x228 @x126 @x758 @x685 @x686 @x232 false) (or $x760 $x167))))
 (let ((@x771 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x232 (hypothesis $x760) @x121 (hypothesis $x445) false) (or $x659 $x517))))
 (let ((@x778 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x232 (hypothesis $x659) @x121 (hypothesis $x772) false) (or $x776 $x445))))
 (let ((@x791 (unit-resolution @x778 (unit-resolution @x771 (unit-resolution @x769 @x139 $x760) $x659) $x776)))
 (let ((@x784 (hypothesis $x779)))
 (let ((@x785 (hypothesis $x776)))
 (let ((@x786 ((_ th-lemma arith gcd-test -1 -1 -1 -1 -1 -1 -1/9 -1/9 -2/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 1/3 1/3) @x785 @x121 @x784 @x785 @x121 @x784 @x785 @x121 @x784 @x785 @x121 @x784 @x785 @x121 @x784 @x228 @x117 false)))
 (let ((@x792 (unit-resolution (lemma @x786 (or $x787 $x772)) @x791 $x787)))
 (let ((@x596 (unit-resolution (lemma ((_ th-lemma arith farkas 1 1 1) @x139 @x792 @x212 false) (or $x153 $x167)) @x139 $x153)))
 (let (($x379 (<= k!2 7)))
 (let (($x812 (not $x379)))
 (let (($x780 (<= k!2 6)))
 (let (($x802 (not $x780)))
 (let ((@x799 (hypothesis $x780)))
 (let ((@x800 (hypothesis $x787)))
 (let ((@x801 ((_ th-lemma arith gcd-test 2/3 2/3 2/3 2/3 2/3 2/3 2/3 2/3 1/9 1/9 -1/9 -1/9 -2/3 -2/3 1/9 1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9) @x121 @x320 @x800 @x799 @x121 @x320 @x800 @x799 @x315 @x320 @x121 @x232 @x228 @x117 @x641 @x126 @x121 @x320 @x800 @x799 @x121 @x320 @x800 @x799 @x121 @x320 @x800 @x799 @x121 @x320 @x800 @x799 false)))
 (let ((@x809 (hypothesis $x379)))
 (let ((@x810 (hypothesis $x802)))
 (let ((@x814 (lemma ((_ th-lemma arith gcd-test 1/3 1/3 -1/3 -1/3 -1/3 -1/3 1/3 1/3) @x810 @x809 @x810 @x809 @x810 @x809 @x228 @x117 false) (or $x812 $x780))))
 (let ((@x249 (unit-resolution @x814 (unit-resolution (lemma @x801 (or $x802 $x779)) @x792 $x802) $x812)))
 (let ((@x207 (lemma ((_ th-lemma arith) @x249 @x249 @x792 @x596 @x126 @x596 false) $x167)))
 (let ((@x1007 ((_ th-lemma arith) @x121 @x232 @x121 @x232 @x315 @x320 @x315 @x320 (hypothesis $x970) @x397 @x121 @x207 @x397 @x121 @x232 @x315 @x320 @x228 @x117 @x121 @x232 @x641 @x126 @x121 @x232 false)))
 (let ((@x998 (unit-resolution (lemma @x1007 (or $x981 $x154)) @x397 $x981)))
 (let ((@x1003 ((_ th-lemma arith) @x998 @x397 @x998 @x397 @x121 @x232 @x121 @x232 @x315 @x320 @x641 @x126 @x228 @x117 false)))
 ((_ th-lemma arith farkas 1 1 1) @x207 (lemma @x1003 $x154) @x1159 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 67
 :arith-assert-diseq        24
 :arith-assert-lower        1017
 :arith-assert-upper        492
 :arith-bound-prop          4
 :arith-branch-var          25
 :arith-conflicts           47
 :arith-eq-adapter          12
 :arith-fixed-eqs           123
 :arith-gcd-tests           168
 :arith-gomory-cuts         8
 :arith-grobner             48
 :arith-ineq-splits         25
 :arith-max-min             4175
 :arith-nonlinear-bounds    371
 :arith-nonlinear-horner    369
 :arith-num-rows            20
 :arith-offset-eqs          6
 :arith-patches             58
 :arith-patches_succ        9
 :arith-pivots              401
 :arith-pseudo-nonlinear    146
 :arith-row-summations      1571
 :arith-tableau-max-columns 76
 :arith-tableau-max-rows    20
 :conflicts                 52
 :decisions                 333
 :del-clause                72
 :final-checks              162
 :max-memory                4.00
 :memory                    3.30
 :minimized-lits            4
 :mk-bool-var               292
 :mk-clause                 115
 :num-allocs                3196195
 :num-checks                1
 :propagations              243
 :rlimit-count              138941
 :time                      0.05
 :total-time                0.06)
