unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x417 (* (- 1) m!1)))
 (let ((?x413 (+ (* 6 n!0) ?x417)))
 (let (($x206 (<= ?x413 (- 6))))
 (let (($x713 (= ?x413 (- 6))))
 (let ((?x308 (* 2 m!1)))
 (let ((?x327 (* (- 36) (* c!3 c!3 m!1))))
 (let ((?x842 (+ k!2 c!3)))
 (let ((?x328 (+ k!2 m!1)))
 (let ((?x309 (+ 1 n!0)))
 (let ((?x319 (* (- 3) (* k!2 k!2 m!1 m!1))))
 (let ((?x482 (* 9 c!3)))
 (let ((?x387 (* 11 k!2)))
 (let ((?x367 (* (- 36) (* k!2 k!2 m!1))))
 (let ((?x340 (* k!2 k!2)))
 (let ((?x427 (* (- 108) ?x340)))
 (let ((?x450 (* (- 108) (* c!3 c!3))))
 (let ((?x826 (* (- 3) (* c!3 c!3 m!1 m!1))))
 (let ((?x818 (+ ?x826 (* (- 216) (* k!2 c!3)) (* (- 72) (* k!2 c!3 m!1)) ?x450 ?x427 ?x367 (* (- 6) (* k!2 c!3 m!1 m!1)) ?x387 ?x482 ?x319 (* 9 (* ?x309 ?x309 ?x328 ?x328 ?x842 ?x842)) ?x327 ?x308)))
 (let ((?x440 (* 9 n!0)))
 (let ((?x420 (* (- 1) k!2)))
 (let ((?x134 (* n!0 n!0)))
 (let ((?x137 (* 3 ?x134)))
 (let (($x791 (not $x713)))
 (let ((?x444 (* 5 m!1)))
 (let ((?x357 (* (- 9) n!0)))
 (let ((?x528 (* k!2 n!0)))
 (let ((?x885 (* 9 ?x528)))
 (let ((?x467 (* (- 2) (* k!2 m!1))))
 (let ((?x514 (* 27 c!3)))
 (let ((?x452 (* 32 k!2)))
 (let ((?x886 (* (- 1) (* m!1 m!1))))
 (let ((?x743 (* (- 1) ?x340)))
 (let ((?x832 (* 9 (* c!3 n!0))))
 (let ((?x844 (* (- 2) n!0)))
 (let ((?x439 (* (- 1) ?x528)))
 (let ((?x843 (* 3 c!3)))
 (let ((?x447 (* 3 k!2)))
 (let (($x794 (or (not (= (+ ?x137 ?x420 ?x440 ?x417) (- 6))) (not (= (+ ?x447 ?x843 ?x439 ?x844 (* (- 1) (* n!0 m!1))) 2)) (not (= (+ ?x832 ?x743 ?x886 ?x452 ?x514 ?x467 ?x885 ?x357 ?x444) 13)) $x791 (not (= (* (+ 6 ?x137 ?x420 ?x440 ?x417) ?x818) 0)))))
 (let ((?x734 (+ ?x137 ?x420 (* 3 n!0))))
 (let (($x822 (= ?x734 0)))
 (let ((?x852 (+ k!2 ?x843 ?x439 ?x844)))
 (let (($x865 (= ?x852 0)))
 (let ((?x860 (* 18 c!3)))
 (let ((?x859 (* 5 k!2)))
 (let ((?x753 (+ ?x832 ?x743 ?x859 ?x860 ?x357)))
 (let (($x381 (= ?x753 4)))
 (let (($x412 (and $x713 $x381 $x865 $x822 $x794)))
 (let ((?x365 (+ ?x482 ?x387 ?x308 ?x427 (* 9 (* ?x309 ?x309 ?x328 ?x328 (+ c!3 k!2) (+ c!3 k!2))) ?x826 (* (- 6) (* c!3 k!2 m!1 m!1)) ?x319 ?x450 (* (- 216) (* c!3 k!2)) ?x327 (* (- 72) (* c!3 k!2 m!1)) ?x367)))
 (let (($x770 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (* (+ 6 ?x420 ?x417 ?x440 ?x137) ?x365) 0)) (not (= (+ k!2 m!1 ?x357 (* (- 3) ?x134)) 6)) (not (= (+ ?x514 ?x452 ?x444 ?x357 ?x743 ?x885 ?x832 ?x467 ?x886) 13)) (not (= (+ ?x843 ?x447 ?x844 ?x439 (* (- 1) (* m!1 n!0))) 2)))))
 (let (($x785 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x151 (and $x785 (= (+ ?x860 ?x859 ?x357 ?x743 ?x832) 4) (= (+ ?x843 k!2 ?x844 ?x439) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x134)) 0) $x770)))
 (let (($x418 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x265 (* (- 1) ?x52)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let (($x547 (= (+ ?x262 (* 3 k) ?x264 ?x265 (* (- 1) (* m n))) 2)))
 (let (($x555 (not $x547)))
 (let ((?x162 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x437 (* 5 m)))
 (let ((?x525 (+ (* 27 c) (* 32 k) ?x437 ?x224 ?x225 (* 9 ?x52) ?x162 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x529 (not (= ?x525 13))))
 (let ((?x880 (* (- 36) (* k k m))))
 (let ((?x879 (* (- 72) (* c k m))))
 (let ((?x877 (* (- 36) (* c c m))))
 (let ((?x875 (* (- 216) (* c k))))
 (let ((?x805 (* (- 108) (* c c))))
 (let ((?x868 (* (- 3) (* k k m m))))
 (let ((?x881 (* (- 6) (* c k m m))))
 (let ((?x853 (* (- 3) (* c c m m))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x380 (+ 1 n)))
 (let ((?x391 (* 9 (* ?x380 ?x380 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x820 (* (- 108) ?x46)))
 (let ((?x718 (* 2 m)))
 (let ((?x726 (* 11 k)))
 (let ((?x712 (* 9 c)))
 (let ((?x204 (+ ?x712 ?x726 ?x718 ?x820 ?x391 ?x853 ?x881 ?x868 ?x805 ?x875 ?x877 ?x879 ?x880)))
 (let ((?x272 (* n n)))
 (let ((?x273 (* 3 ?x272)))
 (let ((?x45 (* 9 n)))
 (let ((?x478 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let (($x471 (or $x363 (not (= (* (+ 6 ?x240 ?x478 ?x45 ?x273) ?x204) 0)) (not (= (+ k m ?x224 (* (- 3) ?x272)) 6)) $x529 $x555)))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) ?x272)) 0)))
 (let (($x267 (= (+ ?x262 k ?x264 ?x265) 0)))
 (let (($x222 (= (+ (* 18 c) (* 5 k) ?x224 ?x225 ?x162) 4)))
 (and $x145 $x222 $x267 $x303 $x471)))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x821 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let ((?x825 (+ ?x262 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x264)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x437 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x800 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x437 ?x224 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x567 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x718 (* 2 m)))
 (let ((?x726 (* 11 k)))
 (let ((?x712 (* 9 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x380 (+ 1 n)))
 (let ((?x391 (* 9 (* ?x380 ?x380 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x61 (* 3 n)))
 (let ((?x478 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x407 (* 3 (* ?x380 ?x380))))
 (let (($x311 (= (* (+ 3 ?x407 ?x240 ?x478 ?x61) (+ ?x391 ?x712 ?x726 ?x718 ?x567)) 0)))
 (let (($x501 (not $x311)))
 (let (($x435 (not (= (+ ?x407 ?x240 ?x478 ?x61) (- 3)))))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let (($x410 (= (+ (* 3 (* n n)) ?x240 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x145 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x224 ?x225) 4) (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x410 (or $x363 $x435 $x501 (not (= ?x800 13)) (not (= ?x825 2)))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x745 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x265 (* (- 1) ?x52)))
 (let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let (($x547 (= (+ ?x262 (* 3 k) ?x264 ?x265 (* (- 1) (* m n))) 2)))
 (let (($x555 (not $x547)))
 (let ((?x162 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x437 (* 5 m)))
 (let ((?x525 (+ (* 27 c) (* 32 k) ?x437 ?x224 ?x225 (* 9 ?x52) ?x162 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x529 (not (= ?x525 13))))
 (let ((?x880 (* (- 36) (* k k m))))
 (let ((?x879 (* (- 72) (* c k m))))
 (let ((?x877 (* (- 36) (* c c m))))
 (let ((?x875 (* (- 216) (* c k))))
 (let ((?x805 (* (- 108) (* c c))))
 (let ((?x868 (* (- 3) (* k k m m))))
 (let ((?x881 (* (- 6) (* c k m m))))
 (let ((?x853 (* (- 3) (* c c m m))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x380 (+ 1 n)))
 (let ((?x391 (* 9 (* ?x380 ?x380 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x820 (* (- 108) ?x46)))
 (let ((?x718 (* 2 m)))
 (let ((?x726 (* 11 k)))
 (let ((?x712 (* 9 c)))
 (let ((?x204 (+ ?x712 ?x726 ?x718 ?x820 ?x391 ?x853 ?x881 ?x868 ?x805 ?x875 ?x877 ?x879 ?x880)))
 (let ((?x272 (* n n)))
 (let ((?x273 (* 3 ?x272)))
 (let ((?x45 (* 9 n)))
 (let ((?x478 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let (($x471 (or $x363 (not (= (* (+ 6 ?x240 ?x478 ?x45 ?x273) ?x204) 0)) (not (= (+ k m ?x224 (* (- 3) ?x272)) 6)) $x529 $x555)))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) ?x272)) 0)))
 (let (($x267 (= (+ ?x262 k ?x264 ?x265) 0)))
 (let (($x222 (= (+ (* 18 c) (* 5 k) ?x224 ?x225 ?x162) 4)))
 (let (($x504 (and $x145 $x222 $x267 $x303 $x471)))
 (let (($x837 (= (+ ?x262 (* 4 k) (* (- 1) (* ?x380 ?x74)) m ?x264) 2)))
 (let ((?x37 (* 18 c)))
 (let ((?x800 (+ ?x37 (* 23 k) (* 9 (* ?x380 ?x71)) ?x437 ?x224 (* (- 1) (* ?x74 ?x74)))))
 (let ((?x489 (+ ?x391 ?x712 ?x726 ?x718 (* (- 3) (* (+ 6 m) (+ 6 m) ?x71 ?x71)))))
 (let ((?x500 (* (+ 3 (* 3 (* ?x380 ?x380)) ?x240 ?x478 (* 3 n)) ?x489)))
 (let (($x501 (not (= ?x500 0))))
 (let (($x435 (not (= (+ (* 3 (* ?x380 ?x380)) ?x240 ?x478 (* 3 n)) (- 3)))))
 (let (($x410 (= (+ ?x273 ?x240 (* 3 n)) 0)))
 (let (($x882 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x224 ?x225) 4)))
 (let (($x557 (and $x145 $x882 (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x410 (or $x363 $x435 $x501 (not (= ?x800 13)) (not $x837)))))
 (rewrite (= $x557 $x504)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x750 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x567 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x718 (* 2 m)))
 (let ((?x726 (* 11 k)))
 (let ((?x712 (* 9 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x380 (+ 1 n)))
 (let ((?x391 (* 9 (* ?x380 ?x380 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x61 (* 3 n)))
 (let ((?x478 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x407 (* 3 (* ?x380 ?x380))))
 (let (($x311 (= (* (+ 3 ?x407 ?x240 ?x478 ?x61) (+ ?x391 ?x712 ?x726 ?x718 ?x567)) 0)))
 (let (($x501 (not $x311)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x208 (* (- 18) c)))
 (let ((?x455 (+ ?x208 (* (- 23) k) (* (- 9) (* ?x380 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let (($x435 (not (= (+ ?x407 ?x240 ?x478 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x759 (* ?x380 ?x74)))
 (let ((?x315 (* (- 3) c)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let (($x441 (or $x363 (not (= (+ ?x315 (* (- 4) k) ?x759 ?x478 ?x56) (- 2))) $x435 (not (= ?x455 (- 13))) $x501)))
 (let (($x410 (= (+ (* 3 (* n n)) ?x240 ?x61) 0)))
 (let (($x507 (= (+ ?x208 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x145 $x507 (= (+ ?x315 (* n k) ?x240 ?x56) 0) $x410 $x441)))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x799 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x264 (* (- 2) n)))
 (let ((?x262 (* 3 c)))
 (let ((?x825 (+ ?x262 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x264)))
 (let ((?x224 (* (- 9) n)))
 (let ((?x437 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x800 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x437 ?x224 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x567 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x718 (* 2 m)))
 (let ((?x726 (* 11 k)))
 (let ((?x712 (* 9 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x380 (+ 1 n)))
 (let ((?x391 (* 9 (* ?x380 ?x380 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x61 (* 3 n)))
 (let ((?x478 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x407 (* 3 (* ?x380 ?x380))))
 (let (($x311 (= (* (+ 3 ?x407 ?x240 ?x478 ?x61) (+ ?x391 ?x712 ?x726 ?x718 ?x567)) 0)))
 (let (($x501 (not $x311)))
 (let (($x435 (not (= (+ ?x407 ?x240 ?x478 ?x61) (- 3)))))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let (($x410 (= (+ (* 3 (* n n)) ?x240 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x225 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x557 (and $x145 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x224 ?x225) 4) (= (+ ?x262 (* (- 1) (* n k)) k ?x264) 0) $x410 (or $x363 $x435 $x501 (not (= ?x800 13)) (not (= ?x825 2))))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x208 (* (- 18) c)))
 (let ((?x455 (+ ?x208 (* (- 23) k) (* (- 9) (* ?x380 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x759 (* ?x380 ?x74)))
 (let ((?x315 (* (- 3) c)))
 (let (($x441 (or $x363 (not (= (+ ?x315 (* (- 4) k) ?x759 ?x478 ?x56) (- 2))) $x435 (not (= ?x455 (- 13))) $x501)))
 (let (($x507 (= (+ ?x208 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x477 (and $x145 $x507 (= (+ ?x315 (* n k) ?x240 ?x56) 0) $x410 $x441)))
 (rewrite (= $x477 $x557))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x110 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x102 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x66 (+ n 1)))
 (let ((?x74 (+ k m)))
 (let ((?x101 (+ (* 9 ?x71 ?x71 ?x74 ?x74 ?x66 ?x66) (* 9 ?x71) (* 2 ?x74))))
 (let ((?x95 (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x108 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x95 (- ?x101 (* 3 ?x71 ?x71 ?x102 ?x102))) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x108)))))))))))))))) :qid k!38))
 ))
 (let ((?x752 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x567 (* (- 3) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x718 (* 2 m)))
 (let ((?x726 (* 11 k)))
 (let ((?x712 (* 9 c)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x380 (+ 1 n)))
 (let ((?x391 (* 9 (* ?x380 ?x380 ?x74 ?x74 ?x71 ?x71))))
 (let ((?x61 (* 3 n)))
 (let ((?x478 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x407 (* 3 (* ?x380 ?x380))))
 (let (($x311 (= (* (+ 3 ?x407 ?x240 ?x478 ?x61) (+ ?x391 ?x712 ?x726 ?x718 ?x567)) 0)))
 (let (($x501 (not $x311)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x208 (* (- 18) c)))
 (let ((?x455 (+ ?x208 (* (- 23) k) (* (- 9) (* ?x380 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let (($x435 (not (= (+ ?x407 ?x240 ?x478 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x759 (* ?x380 ?x74)))
 (let ((?x315 (* (- 3) c)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (not $x145)))
 (let (($x441 (or $x363 (not (= (+ ?x315 (* (- 4) k) ?x759 ?x478 ?x56) (- 2))) $x435 (not (= ?x455 (- 13))) $x501)))
 (let (($x410 (= (+ (* 3 (* n n)) ?x240 ?x61) 0)))
 (let (($x507 (= (+ ?x208 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x477 (and $x145 $x507 (= (+ ?x315 (* n k) ?x240 ?x56) 0) $x410 $x441)))
 (let ((?x101 (+ (* 9 ?x71 ?x71 ?x74 ?x74 (+ n 1) (+ n 1)) (* 9 ?x71) (* 2 ?x74))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x105 (* ?x95 (- ?x101 (* 3 ?x71 ?x71 (+ m 6) (+ m 6))))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x108 (or $x70 (not (= (+ ?x78 (* 9 (+ n 1)) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= ?x105 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x109 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x108)))
 (rewrite (= $x109 $x477))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x111 (asserted $x110)))
 (let ((@x241 (mp (mp @x111 (quant-intro (proof-bind ?x752) (= $x110 $x750)) $x750) (rewrite (= $x750 $x750)) $x750)))
 (let ((@x747 (mp (mp @x241 (quant-intro (proof-bind ?x799) (= $x750 $x821)) $x821) (quant-intro (proof-bind ?x745) (= $x821 $x418)) $x418)))
 (let ((@x841 (mp (mp~ @x747 (sk (~ $x418 $x151)) $x151) (rewrite (= $x151 $x412)) $x412)))
 (let ((@x792 (and-elim @x841 $x713)))
 (let ((@x836 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x791 $x206)) @x792 $x206)))
 (let (($x205 (>= ?x413 (- 6))))
 (let ((@x828 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x791 $x205)) @x792 $x205)))
 (let (($x397 (<= ?x753 4)))
 (let ((@x871 (and-elim @x841 $x381)))
 (let ((@x202 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x381) $x397)) @x871 $x397)))
 (let (($x442 (>= ?x753 4)))
 (let ((@x398 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x381) $x442)) @x871 $x442)))
 (let (($x851 (<= ?x734 0)))
 (let ((@x845 (and-elim @x841 $x822)))
 (let ((@x392 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x822) $x851)) @x845 $x851)))
 (let (($x883 (>= ?x734 0)))
 (let ((@x373 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x822) $x883)) @x845 $x883)))
 (let (($x161 (<= ?x852 0)))
 (let ((@x130 (and-elim @x841 $x865)))
 (let ((@x760 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x865) $x161)) @x130 $x161)))
 (let (($x749 (>= ?x852 0)))
 (let ((@x516 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x865) $x749)) @x130 $x749)))
 (let (($x1181 (<= n!0 1)))
 (let ((@x1179 ((_ th-lemma arith) (hypothesis (not $x1181)) @x828 @x836 @x373 @x392 @x373 @x392 @x828 @x836 @x373 @x392 @x373 @x392 @x516 @x760 @x828 @x836 @x373 @x392 @x828 @x836 @x373 @x392 @x398 @x202 @x828 @x836 false)))
 (let (($x861 (>= m!1 0)))
 (let ((@x329 (hypothesis (not $x861))))
 (let ((@x200 ((_ th-lemma arith) @x329 @x329 @x373 @x392 @x398 @x202 @x398 @x202 @x398 @x202 @x373 @x392 @x373 @x392 @x516 @x760 @x373 @x392 @x828 @x836 @x398 @x202 @x373 @x392 @x398 @x202 false)))
 ((_ th-lemma arith) (lemma @x200 $x861) @x828 (lemma @x1179 $x1181) @x828 @x836 @x373 @x392 @x828 @x836 @x373 @x392 @x828 @x836 @x516 @x760 @x373 @x392 @x828 @x836 @x373 @x392 @x398 @x202 @x828 @x836 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 75
 :arith-assert-diseq        14
 :arith-assert-lower        599
 :arith-assert-upper        316
 :arith-bound-prop          11
 :arith-branch-var          17
 :arith-conflicts           35
 :arith-eq-adapter          9
 :arith-fixed-eqs           141
 :arith-gcd-tests           209
 :arith-gomory-cuts         10
 :arith-grobner             38
 :arith-ineq-splits         17
 :arith-max-min             3132
 :arith-nonlinear-bounds    202
 :arith-nonlinear-horner    427
 :arith-num-rows            20
 :arith-offset-eqs          5
 :arith-patches             49
 :arith-patches_succ        16
 :arith-pivots              643
 :arith-pseudo-nonlinear    127
 :arith-row-summations      4627
 :arith-tableau-max-columns 65
 :arith-tableau-max-rows    20
 :conflicts                 41
 :decisions                 145
 :del-clause                49
 :final-checks              126
 :max-memory                4.12
 :memory                    3.29
 :minimized-lits            6
 :mk-bool-var               167
 :mk-clause                 102
 :num-allocs                4962970
 :num-checks                1
 :propagations              107
 :rlimit-count              250765
 :time                      0.06
 :total-time                0.07)
