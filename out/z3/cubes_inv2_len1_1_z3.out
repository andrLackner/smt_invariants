unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x500 (* n!0 n!0)))
 (let ((?x555 (* 3 ?x500)))
 (let ((?x240 (* (- 1) k!2)))
 (let ((?x630 (* (- 1) m!1)))
 (let ((?x173 (* 9 n!0)))
 (let ((?x444 (+ ?x173 ?x630 ?x240 ?x555)))
 (let (($x540 (<= ?x444 (- 6))))
 (let ((?x632 (+ (* 6 n!0) ?x630)))
 (let (($x486 (<= ?x632 (- 6))))
 (let (($x228 (= ?x632 (- 6))))
 (let ((?x564 (* k!2 k!2)))
 (let ((?x450 (* n!0 k!2)))
 (let ((?x641 (* (- 9) ?x450)))
 (let ((?x340 (* n!0 c!3)))
 (let ((?x277 (* (- 9) ?x340)))
 (let ((?x193 (* m!1 m!1)))
 (let ((?x599 (+ ?x173 ?x193 (* 2 (* m!1 k!2)) (* (- 5) m!1) ?x277 (* (- 32) k!2) (* (- 27) c!3) ?x641 ?x564)))
 (let ((?x537 (* n!0 m!1)))
 (let ((?x575 (* (- 3) c!3)))
 (let ((?x239 (* 2 n!0)))
 (let ((?x282 (+ (* 9 (* n!0 m!1 c!3)) (* (- 3) (* m!1 m!1 k!2)) (* 5 ?x193) (* 27 (* m!1 c!3)) (* 37 (* m!1 k!2)) (* (- 1) (* k!2 k!2 k!2)) (* (- 13) m!1) (* (- 13) k!2) (* (- 1) (* m!1 m!1 m!1)) (* 9 (* n!0 m!1 k!2)) (* 9 (* n!0 k!2 k!2)) ?x641 (* 27 (* k!2 c!3)) (* (- 3) (* m!1 k!2 k!2)) (* (- 9) ?x537) (* 32 ?x564) (* 9 (* n!0 k!2 c!3)))))
 (let (($x230 (not $x228)))
 (let (($x195 (or $x230 (not (= ?x282 0)) (not (= (+ ?x239 (* (- 3) k!2) ?x575 ?x450 ?x537) (- 2))) (not (= ?x444 (- 6))) (not (= ?x599 (- 13))))))
 (let ((?x144 (+ (* 3 n!0) ?x240 ?x555)))
 (let (($x304 (= ?x144 0)))
 (let ((?x582 (+ ?x239 ?x240 ?x575 ?x450)))
 (let (($x584 (= ?x582 0)))
 (let ((?x377 (* (- 5) k!2)))
 (let ((?x365 (+ ?x173 ?x277 ?x377 (* (- 18) c!3) ?x564)))
 (let (($x390 (= ?x365 (- 4))))
 (let (($x580 (and $x228 $x390 $x584 $x304 $x195)))
 (let ((?x414 (* k!2 n!0)))
 (let ((?x274 (* (- 1) ?x414)))
 (let ((?x368 (* (- 2) n!0)))
 (let ((?x369 (* 3 c!3)))
 (let (($x386 (= (+ ?x369 (* 3 k!2) ?x368 ?x274 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x151 (* 9 (* c!3 n!0))))
 (let ((?x607 (* 9 ?x414)))
 (let ((?x355 (* (- 1) ?x564)))
 (let ((?x445 (* (- 9) n!0)))
 (let ((?x107 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x445 ?x355 ?x607 ?x151 (* (- 2) (* k!2 m!1)) (* (- 1) ?x193))))
 (let ((?x328 (* k!2 k!2 k!2)))
 (let ((?x371 (* m!1 m!1 m!1)))
 (let ((?x539 (+ (* 13 k!2) (* 13 m!1) (* (- 32) ?x564) ?x607 ?x371 (* 3 (* k!2 k!2 m!1)) (* 3 (* k!2 m!1 m!1)) (* (- 9) (* k!2 m!1 n!0)) (* (- 9) (* k!2 k!2 n!0)) (* (- 27) (* c!3 m!1)) (* (- 9) (* c!3 k!2 n!0)) (* (- 9) (* c!3 m!1 n!0)) (* (- 37) (* k!2 m!1)) (* (- 5) ?x193) (* 9 (* m!1 n!0)) (* (- 27) (* c!3 k!2)) ?x328)))
 (let (($x303 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x445 (* (- 3) ?x500)) 6)) (not (= ?x539 0)) (not (= ?x107 13)) (not $x386))))
 (let (($x124 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x550 (and $x124 (= (+ (* 18 c!3) (* 5 k!2) ?x445 ?x355 ?x151) 4) (= (+ ?x369 k!2 ?x368 ?x274) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x500)) 0) $x303)))
 (let (($x563 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x601 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x609 (not $x601)))
 (let ((?x153 (* c n)))
 (let ((?x155 (* 9 ?x153)))
 (let ((?x372 (* 9 ?x52)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 ?x372 ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let ((?x333 (+ (* 13 k) (* 13 m) (* (- 32) ?x46) ?x372 (* m m m) (* 3 (* k k m)) (* 3 (* k m m)) (* (- 9) (* k m n)) (* (- 9) (* k k n)) (* (- 27) (* c m)) (* (- 9) (* c k n)) (* (- 9) (* c m n)) (* (- 37) (* k m)) (* (- 5) (* m m)) (* 9 (* m n)) (* (- 27) (* c k)) (* k k k))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x613 (or $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) (not (= ?x333 0)) $x522 $x609)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 $x613))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x380 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x493 (+ 1 n)))
 (let ((?x404 (* ?x493 ?x71)))
 (let ((?x418 (* (- 9) ?x404)))
 (let ((?x325 (* (- 23) k)))
 (let ((?x184 (* (- 18) c)))
 (let (($x612 (not (= (* ?x74 (+ 13 ?x184 ?x325 ?x418 ?x447 ?x45 ?x80)) 0))))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let (($x614 (= (+ ?x37 (* 23 k) (* 9 ?x404) ?x430 ?x217 (* (- 1) ?x80)) 13)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x508 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x493 ?x74)) m ?x257) 2)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x484 (* (- 1) m)))
 (let ((?x478 (* (- 1) k)))
 (let (($x231 (not (= (+ (* 3 (* ?x493 ?x493)) ?x478 ?x484 ?x61) (- 3)))))
 (let (($x568 (= (+ (* 3 (* n n)) ?x478 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x568 (or $x231 $x356 (not $x508) (not $x614) $x612)))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x116 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x601 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x609 (not $x601)))
 (let ((?x153 (* c n)))
 (let ((?x155 (* 9 ?x153)))
 (let ((?x372 (* 9 ?x52)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 ?x372 ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let ((?x333 (+ (* 13 k) (* 13 m) (* (- 32) ?x46) ?x372 (* m m m) (* 3 (* k k m)) (* 3 (* k m m)) (* (- 9) (* k m n)) (* (- 9) (* k k n)) (* (- 27) (* c m)) (* (- 9) (* c k n)) (* (- 9) (* c m n)) (* (- 37) (* k m)) (* (- 5) (* m m)) (* 9 (* m n)) (* (- 27) (* c k)) (* k k k))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x613 (or $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) (not (= ?x333 0)) $x522 $x609)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x559 (and $x138 $x215 $x260 $x296 $x613)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x493 (+ 1 n)))
 (let ((?x404 (* ?x493 ?x71)))
 (let ((?x418 (* (- 9) ?x404)))
 (let ((?x325 (* (- 23) k)))
 (let ((?x184 (* (- 18) c)))
 (let (($x612 (not (= (* ?x74 (+ 13 ?x184 ?x325 ?x418 ?x447 ?x45 ?x80)) 0))))
 (let ((?x37 (* 18 c)))
 (let (($x614 (= (+ ?x37 (* 23 k) (* 9 ?x404) ?x430 ?x217 (* (- 1) ?x80)) 13)))
 (let (($x508 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x493 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x484 (* (- 1) m)))
 (let ((?x478 (* (- 1) k)))
 (let (($x231 (not (= (+ (* 3 (* ?x493 ?x493)) ?x478 ?x484 ?x61) (- 3)))))
 (let (($x568 (= (+ (* 3 (* n n)) ?x478 ?x61) 0)))
 (let (($x623 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x413 (and $x138 $x623 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x568 (or $x231 $x356 (not $x508) (not $x614) $x612))))
 (rewrite (= $x413 $x559)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x392 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x493 (+ 1 n)))
 (let ((?x404 (* ?x493 ?x71)))
 (let ((?x418 (* (- 9) ?x404)))
 (let ((?x325 (* (- 23) k)))
 (let ((?x184 (* (- 18) c)))
 (let (($x612 (not (= (* ?x74 (+ 13 ?x184 ?x325 ?x418 ?x447 ?x45 ?x80)) 0))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x56 (* 2 n)))
 (let ((?x484 (* (- 1) m)))
 (let ((?x429 (* ?x493 ?x74)))
 (let ((?x312 (* (- 3) c)))
 (let (($x297 (= (+ (* 3 (* ?x493 ?x493)) (* (- 1) k) ?x484 (* 3 n)) (- 3))))
 (let (($x231 (not $x297)))
 (let (($x389 (or $x231 (not (= (+ ?x312 (* (- 4) k) ?x429 ?x484 ?x56) (- 2))) $x356 (not (= (+ ?x184 ?x325 ?x418 ?x447 ?x45 ?x80) (- 13))) $x612)))
 (let (($x568 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x324 (= (+ ?x184 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x324 (= (+ ?x312 (* n k) (* (- 1) k) ?x56) 0) $x568 $x389))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x470 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x493 (+ 1 n)))
 (let ((?x404 (* ?x493 ?x71)))
 (let ((?x418 (* (- 9) ?x404)))
 (let ((?x325 (* (- 23) k)))
 (let ((?x184 (* (- 18) c)))
 (let (($x612 (not (= (* ?x74 (+ 13 ?x184 ?x325 ?x418 ?x447 ?x45 ?x80)) 0))))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let (($x614 (= (+ ?x37 (* 23 k) (* 9 ?x404) ?x430 ?x217 (* (- 1) ?x80)) 13)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x508 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x493 ?x74)) m ?x257) 2)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x484 (* (- 1) m)))
 (let ((?x478 (* (- 1) k)))
 (let (($x231 (not (= (+ (* 3 (* ?x493 ?x493)) ?x478 ?x484 ?x61) (- 3)))))
 (let (($x568 (= (+ (* 3 (* n n)) ?x478 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x413 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x568 (or $x231 $x356 (not $x508) (not $x614) $x612))))
 (let ((?x56 (* 2 n)))
 (let ((?x429 (* ?x493 ?x74)))
 (let ((?x312 (* (- 3) c)))
 (let (($x389 (or $x231 (not (= (+ ?x312 (* (- 4) k) ?x429 ?x484 ?x56) (- 2))) $x356 (not (= (+ ?x184 ?x325 ?x418 ?x447 ?x45 ?x80) (- 13))) $x612)))
 (let (($x324 (= (+ ?x184 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x433 (and $x138 $x324 (= (+ ?x312 (* n k) ?x478 ?x56) 0) $x568 $x389)))
 (rewrite (= $x433 $x413))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let ((?x81 (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80)))
 (let ((?x50 (- 3)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* ?x50 (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x101 (or $x70 (not (= ?x81 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x50 ?x74 ?x81) 0)))))
 (let (($x58 (= (+ (- (+ (* ?x50 c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101))))))))))))))) :qid k!38))
 ))
 (let ((?x394 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x493 (+ 1 n)))
 (let ((?x404 (* ?x493 ?x71)))
 (let ((?x418 (* (- 9) ?x404)))
 (let ((?x325 (* (- 23) k)))
 (let ((?x184 (* (- 18) c)))
 (let (($x612 (not (= (* ?x74 (+ 13 ?x184 ?x325 ?x418 ?x447 ?x45 ?x80)) 0))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x56 (* 2 n)))
 (let ((?x484 (* (- 1) m)))
 (let ((?x429 (* ?x493 ?x74)))
 (let ((?x312 (* (- 3) c)))
 (let (($x297 (= (+ (* 3 (* ?x493 ?x493)) (* (- 1) k) ?x484 (* 3 n)) (- 3))))
 (let (($x231 (not $x297)))
 (let (($x389 (or $x231 (not (= (+ ?x312 (* (- 4) k) ?x429 ?x484 ?x56) (- 2))) $x356 (not (= (+ ?x184 ?x325 ?x418 ?x447 ?x45 ?x80) (- 13))) $x612)))
 (let (($x568 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x324 (= (+ ?x184 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x433 (and $x138 $x324 (= (+ ?x312 (* n k) (* (- 1) k) ?x56) 0) $x568 $x389)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 (+ n 1)) ?x80)))
 (let ((?x50 (- 3)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* ?x50 ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x101 (or $x70 (not (= ?x81 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x50 ?x74 ?x81) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* ?x50 c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101)))
 (rewrite (= $x102 $x433)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x605 (mp (mp @x104 (quant-intro (proof-bind ?x394) (= $x103 $x392)) $x392) (rewrite (= $x392 $x392)) $x392)))
 (let ((@x177 (mp (mp @x605 (quant-intro (proof-bind ?x470) (= $x392 $x380)) $x380) (quant-intro (proof-bind ?x116) (= $x380 $x563)) $x563)))
 (let ((@x237 (mp (mp~ @x177 (sk (~ $x563 $x550)) $x550) (rewrite (= $x550 $x580)) $x580)))
 (let ((@x391 (and-elim @x237 $x228)))
 (let ((@x127 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x230 $x486)) @x391 $x486)))
 (let (($x635 (<= ?x144 0)))
 (let ((@x291 (and-elim @x237 $x304)))
 (let ((@x401 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x540 (not $x635) (not $x486))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x304) $x635)) @x291 $x635) @x127 $x540)))
 (let (($x527 (>= ?x444 (- 6))))
 (let (($x428 (>= ?x144 0)))
 (let (($x487 (>= ?x632 (- 6))))
 (let ((@x362 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x230 $x487)) @x391 $x487)))
 (let ((@x154 ((_ th-lemma arith farkas -1 1 1) (hypothesis (not $x527)) @x362 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x304) $x428)) @x291 $x428) false)))
 (let ((@x547 (lemma @x154 $x527)))
 (let (($x147 (<= ?x582 0)))
 (let ((@x196 (and-elim @x237 $x584)))
 (let ((@x406 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x584) $x147)) @x196 $x147)))
 (let (($x573 (>= ?x582 0)))
 (let ((@x416 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x584) $x573)) @x196 $x573)))
 (let (($x399 (<= ?x365 (- 4))))
 (let ((@x194 (and-elim @x237 $x390)))
 (let ((@x585 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x399)) @x194 $x399)))
 (let (($x370 (>= ?x365 (- 4))))
 (let ((@x266 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x370)) @x194 $x370)))
 (let (($x810 (<= c!3 1)))
 (let ((@x1024 (hypothesis $x810)))
 (let ((?x112 (* 2 ?x500)))
 (let (($x956 (>= (+ (* 11 n!0) ?x630 (* (- 2) k!2) (* (- 2) c!3) ?x450 ?x112) (- 2))))
 (let (($x803 (<= m!1 18)))
 (let ((@x891 (hypothesis $x803)))
 (let (($x806 (<= n!0 1)))
 (let ((@x802 (hypothesis $x806)))
 (let (($x825 (<= m!1 6)))
 (let ((@x110 (hypothesis $x825)))
 (let (($x748 (>= n!0 0)))
 (let (($x233 (<= m!1 0)))
 (let (($x749 (not $x233)))
 (let (($x562 (= m!1 0)))
 (let (($x148 (not $x562)))
 (let ((@x327 (hypothesis $x562)))
 (let ((@x301 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x148 $x233)) @x327 $x233)))
 (let (($x530 (>= m!1 0)))
 (let ((@x496 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x148 $x530)) @x327 $x530)))
 (let ((@x482 ((_ th-lemma arith farkas -9 -9 -9 -9 2 3 3 3 -1 1 -1 -3 -3 -3 -3) @x362 @x496 @x127 @x301 @x362 @x416 @x127 @x301 @x401 @x496 @x585 @x362 @x496 @x127 @x301 false)))
 (let (($x684 (<= k!2 0)))
 (let (($x727 (not $x684)))
 (let (($x595 (>= k!2 0)))
 (let (($x119 (not $x530)))
 (let ((@x132 (hypothesis $x119)))
 (let (($x125 (not $x595)))
 (let ((@x172 (hypothesis $x125)))
 (let ((?x676 (+ (* 8 n!0) ?x630 ?x240 ?x112)))
 (let (($x677 (>= ?x676 (- 5))))
 (let (($x197 (not $x677)))
 (let ((@x120 (hypothesis $x677)))
 (let ((@x338 ((_ th-lemma arith) @x172 @x362 @x127 @x132 @x401 @x120 @x172 @x362 @x127 @x132 @x401 @x120 @x401 @x120 false)))
 (let ((@x678 ((_ th-lemma arith farkas 3 -2 -1 1) (unit-resolution (lemma @x338 (or $x197 $x595 $x530)) @x172 @x132 $x197) @x547 @x362 @x172 false)))
 (let ((@x113 (hypothesis $x684)))
 (let ((@x725 (hypothesis $x595)))
 (let ((@x726 ((_ th-lemma arith gcd-test 1/3 1/3 -1/3 -1/3 -1/3 -1/3 -2 -2 2 2 2 2) @x266 @x585 @x725 @x113 @x725 @x113 @x416 @x406 @x725 @x113 @x725 @x113 false)))
 (let ((@x738 (unit-resolution (lemma @x726 (or $x727 $x125)) (unit-resolution (lemma @x678 (or $x595 $x530)) @x132 $x595) $x727)))
 (let (($x221 (>= ?x676 (- 6))))
 (let ((@x732 ((_ th-lemma arith) @x132 @x127 (hypothesis (not $x221)) @x547 @x401 @x547 @x401 @x362 @x127 @x547 @x401 @x266 @x585 @x266 @x585 @x362 @x127 @x416 @x406 @x362 @x127 @x416 @x406 @x416 @x406 @x547 @x401 @x266 @x585 @x266 @x585 @x362 @x127 @x266 @x585 @x416 @x406 @x547 @x401 @x362 @x127 @x547 @x401 @x416 @x406 @x362 @x127 false)))
 (let ((@x740 ((_ th-lemma arith farkas 3 -2 -1 1) (unit-resolution (lemma @x732 (or $x221 $x530)) @x132 $x221) @x401 @x127 @x738 false)))
 (let ((@x752 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x562 $x749 $x119)) (lemma @x740 $x530) (lemma @x482 $x148) $x749)))
 (let ((@x758 (lemma ((_ th-lemma arith farkas 1 -6 1) @x362 (hypothesis (not $x748)) @x752 false) $x748)))
 (let ((?x875 (+ (* 16 n!0) ?x630 (* (- 5) ?x340) ?x377 (* (- 15) c!3) (* 3 ?x450) ?x555 ?x564)))
 (let ((@x877 ((_ th-lemma arith gomory-cut 3/4 3/5 3/5 1/4 1/4 1/5) @x416 @x758 (lemma ((_ th-lemma arith farkas 1 2 -2 -2 1) @x362 @x362 @x401 @x172 @x752 false) $x595) @x266 @x547 @x362 (>= ?x875 (- 6)))))
 (let ((@x880 (lemma ((_ th-lemma arith farkas -1/4 1/4 1/4 -1/4 1 1 1 1 1 1) @x416 @x585 @x401 @x877 @x758 @x127 @x110 @x758 @x127 @x110 false) (not $x825))))
 (let (($x742 (>= ?x340 1)))
 (let ((@x869 ((_ th-lemma arith) @x362 @x880 @x401 (hypothesis (not $x742)) @x362 @x880 @x362 @x127 @x547 @x401 @x362 @x127 @x362 @x127 @x416 @x406 @x547 @x401 @x266 @x585 @x547 @x401 @x362 @x127 false)))
 (let ((@x216 (lemma @x869 $x742)))
 (let ((@x140 (lemma ((_ th-lemma arith farkas -1 -3 -3 -3 2 1 1 1) @x416 @x216 @x362 @x880 @x802 @x362 @x880 @x802 false) (not $x806))))
 (let ((@x952 ((_ th-lemma arith farkas -5/18 -11/18 -2/3 -2/3 -1/3 -1/3 -1/3 1) @x891 @x127 @x401 @x406 @x140 @x127 @x891 ((_ th-lemma arith gomory-cut 1 1 11/12 -5/12 5/2 1/2 1/2 1/2) @x416 @x547 @x362 @x127 @x140 @x140 @x127 @x891 $x956) false)))
 (let ((@x957 (lemma @x952 (not $x803))))
 (let (($x807 (>= ?x340 2)))
 (let ((@x868 (lemma ((_ th-lemma arith farkas 1 1 1 1 1 1) @x216 @x362 @x957 (hypothesis (not $x807)) @x362 @x957 false) $x807)))
 (let ((@x1025 ((_ th-lemma arith) @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x362 @x127 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x266 @x585 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x266 @x585 @x362 @x127 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x266 @x585 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x868 @x362 @x957 @x1024 @x266 @x585 @x547 @x401 @x416 @x406 @x868 @x362 @x957 @x1024 false)))
 ((_ th-lemma arith) (lemma @x1025 (not $x810)) @x362 @x127 @x547 @x401 @x362 @x127 @x362 @x127 @x362 @x127 @x266 @x585 @x547 @x401 @x416 @x406 @x547 @x401 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 57
 :arith-assert-diseq        20
 :arith-assert-lower        254
 :arith-assert-upper        142
 :arith-bound-prop          2
 :arith-branch-var          11
 :arith-conflicts           19
 :arith-eq-adapter          12
 :arith-fixed-eqs           70
 :arith-gcd-tests           99
 :arith-gomory-cuts         7
 :arith-grobner             14
 :arith-ineq-splits         11
 :arith-max-min             1444
 :arith-nonlinear-bounds    76
 :arith-nonlinear-horner    91
 :arith-num-rows            18
 :arith-offset-eqs          3
 :arith-patches             27
 :arith-patches_succ        5
 :arith-pivots              232
 :arith-pseudo-nonlinear    61
 :arith-row-summations      924
 :arith-tableau-max-columns 63
 :arith-tableau-max-rows    18
 :conflicts                 20
 :decisions                 96
 :del-clause                52
 :final-checks              63
 :max-memory                3.80
 :memory                    3.22
 :minimized-lits            2
 :mk-bool-var               92
 :mk-clause                 58
 :num-allocs                1622404
 :num-checks                1
 :propagations              78
 :rlimit-count              55017
 :time                      0.02
 :total-time                0.03)
