unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x652 (* 9 n!0)))
 (let ((?x202 (* c!3 n!0)))
 (let ((?x483 (* (- 9) ?x202)))
 (let ((?x156 (* k!2 k!2)))
 (let ((?x708 (+ ?x156 ?x483 (* (- 18) c!3) ?x652 (* (- 5) k!2))))
 (let (($x171 (<= ?x708 (- 4))))
 (let (($x275 (= ?x708 (- 4))))
 (let ((?x413 (* (- 6) n!0)))
 (let ((?x407 (+ m!1 ?x413)))
 (let (($x209 (= ?x407 6)))
 (let (($x889 (not $x209)))
 (let ((?x518 (* 2 n!0)))
 (let ((?x517 (* (- 3) c!3)))
 (let ((?x363 (* n!0 k!2)))
 (let ((?x151 (* m!1 n!0)))
 (let ((?x878 (* m!1 m!1)))
 (let ((?x915 (+ ?x156 ?x483 (* (- 9) ?x363) (* (- 5) m!1) (* (- 27) c!3) (* 2 (* m!1 k!2)) ?x652 (* (- 32) k!2) ?x878)))
 (let (($x411 (not (= (+ m!1 (* (- 3) (* n!0 n!0)) (* (- 9) n!0) k!2) 6))))
 (let ((?x918 (* 42 (* c!3 c!3 k!2))))
 (let ((?x702 (* 79 (* c!3 k!2 k!2))))
 (let ((?x240 (* 36 n!0)))
 (let ((?x439 (* m!1 m!1 n!0)))
 (let ((?x471 (* 37 (* k!2 k!2 k!2))))
 (let ((?x320 (+ c!3 k!2)))
 (let ((?x321 (+ 6 m!1)))
 (let ((?x307 (+ 1 n!0)))
 (let ((?x144 (* 12 m!1)))
 (let ((?x129 (* 12 ?x151)))
 (let ((?x343 (+ 36 ?x129 (* 7 (* m!1 m!1 k!2 k!2)) (* 14 (* m!1 m!1 c!3 k!2)) (* 74 (* m!1 c!3 k!2)) (* 7 (* m!1 c!3 c!3 k!2)) (* 7 (* m!1 m!1 n!0 k!2 k!2)) (* 84 (* c!3 n!0 k!2 k!2)) (* 14 (* m!1 c!3 n!0 k!2 k!2)) (* 7 (* m!1 c!3 c!3 n!0 k!2)) (* 42 (* c!3 c!3 n!0 k!2)) (* 42 (* m!1 c!3 c!3 n!0)) (* 84 (* m!1 c!3 n!0 k!2)) (* 42 (* m!1 n!0 k!2 k!2)) (* 14 (* m!1 m!1 c!3 n!0 k!2)) ?x144 (* 8 (* ?x307 ?x307 ?x321 (+ m!1 k!2) ?x320 ?x320)) ?x471 ?x439 (* 7 (* m!1 m!1 c!3 c!3 n!0)) (* 7 (* m!1 n!0 k!2 k!2 k!2)) (* 42 (* m!1 c!3 c!3)) ?x240 (* 14 (* m!1 c!3 k!2 k!2)) ?x702 (* 7 (* m!1 m!1 c!3 c!3)) (* 42 (* n!0 k!2 k!2 k!2)) (* (- 5) (* m!1 m!1 c!3)) (* (- 5) (* m!1 m!1 k!2)) (* 32 (* m!1 k!2 k!2)) ?x878 ?x918 (* 7 (* m!1 k!2 k!2 k!2)))))
 (let ((?x143 (+ (- 6) m!1 ?x413)))
 (let (($x333 (or (not (= (* ?x143 ?x343) 0)) $x411 (not (= ?x915 (- 13))) (not (= (+ ?x151 ?x363 ?x517 ?x518 (* (- 3) k!2)) (- 2))) $x889)))
 (let ((?x369 (* (- 1) k!2)))
 (let ((?x484 (* n!0 n!0)))
 (let ((?x389 (* 3 ?x484)))
 (let ((?x424 (+ ?x389 (* 3 n!0) ?x369)))
 (let (($x648 (= ?x424 0)))
 (let ((?x530 (+ ?x363 ?x517 ?x518 ?x369)))
 (let (($x724 (= ?x530 0)))
 (let (($x310 (and $x209 $x275 $x724 $x648 $x333)))
 (let ((?x440 (+ 36 ?x144 ?x240 (* 42 (* k!2 k!2 m!1 n!0)) (* 8 (* ?x307 ?x307 ?x321 (+ k!2 m!1) ?x320 ?x320)) ?x918 (* 42 (* c!3 c!3 m!1)) (* 84 (* c!3 k!2 m!1 n!0)) (* 7 (* c!3 c!3 m!1 m!1)) (* 7 (* k!2 k!2 k!2 m!1)) ?x129 (* 14 (* c!3 k!2 m!1 m!1)) (* 42 (* c!3 c!3 m!1 n!0)) ?x878 (* 42 (* c!3 c!3 k!2 n!0)) (* 7 (* c!3 c!3 k!2 m!1 n!0)) (* 14 (* c!3 k!2 k!2 m!1 n!0)) (* 7 (* k!2 k!2 k!2 m!1 n!0)) (* 7 (* c!3 c!3 m!1 m!1 n!0)) (* 14 (* c!3 k!2 m!1 m!1 n!0)) (* 7 (* k!2 k!2 m!1 m!1 n!0)) ?x702 (* 7 (* k!2 k!2 m!1 m!1)) ?x471 (* 74 (* c!3 k!2 m!1)) (* 32 (* k!2 k!2 m!1)) (* (- 5) (* c!3 m!1 m!1)) (* (- 5) (* k!2 m!1 m!1)) (* 42 (* k!2 k!2 k!2 n!0)) (* 14 (* c!3 k!2 k!2 m!1)) (* 7 (* c!3 c!3 k!2 m!1)) ?x439 (* 84 (* c!3 k!2 k!2 n!0)))))
 (let ((?x554 (* k!2 n!0)))
 (let ((?x589 (* (- 1) ?x554)))
 (let ((?x665 (* (- 2) n!0)))
 (let ((?x200 (* 3 c!3)))
 (let ((?x681 (* 9 ?x202)))
 (let ((?x511 (* (- 1) ?x156)))
 (let ((?x912 (* (- 9) n!0)))
 (let ((?x667 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x912 ?x511 (* 9 ?x554) ?x681 (* (- 2) (* k!2 m!1)) (* (- 1) ?x878))))
 (let (($x905 (or $x889 (not (= ?x667 13)) (not (= (+ ?x200 (* 3 k!2) ?x665 ?x589 (* (- 1) ?x151)) 2)) (not (= (* ?x143 ?x440) 0)) (not (= (+ k!2 m!1 ?x912 (* (- 3) ?x484)) 6)))))
 (let (($x696 (and $x209 (= (+ (* 18 c!3) (* 5 k!2) ?x912 ?x511 ?x681) 4) (= (+ ?x200 k!2 ?x665 ?x589) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x484)) 0) $x905)))
 (let (($x433 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x1007 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x887 (* m m n)))
 (let ((?x715 (* (- 5) (* k m m))))
 (let ((?x712 (* (- 5) (* c m m))))
 (let ((?x637 (* 7 (* k k m m n))))
 (let ((?x631 (* 7 (* c c m m n))))
 (let ((?x629 (* 7 (* k k k m n))))
 (let ((?x623 (* 7 (* c c k m n))))
 (let ((?x515 (* m m)))
 (let ((?x401 (* m n)))
 (let ((?x910 (* 12 ?x401)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x914 (+ 6 m)))
 (let ((?x364 (+ 1 n)))
 (let ((?x186 (* 8 (* ?x364 ?x364 ?x914 ?x74 ?x71 ?x71))))
 (let ((?x901 (* 36 n)))
 (let ((?x940 (+ 36 (* 12 m) ?x901 (* 42 (* k k m n)) ?x186 (* 42 (* c c k)) (* 42 (* c c m)) (* 84 (* c k m n)) (* 7 (* c c m m)) (* 7 (* k k k m)) ?x910 (* 14 (* c k m m)) (* 42 (* c c m n)) ?x515 (* 42 (* c c k n)) ?x623 (* 14 (* c k k m n)) ?x629 ?x631 (* 14 (* c k m m n)) ?x637 (* 79 (* c k k)) (* 7 (* k k m m)) (* 37 (* k k k)) (* 74 (* c k m)) (* 32 (* k k m)) ?x712 ?x715 (* 42 (* k k k n)) (* 14 (* c k k m)) (* 7 (* c c k m)) ?x887 (* 84 (* c k k n)))))
 (let ((?x130 (* (- 6) n)))
 (let ((?x136 (+ (- 6) m ?x130)))
 (let ((?x52 (* k n)))
 (let ((?x267 (* (- 1) ?x52)))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x582 (not (= (+ ?x264 (* 3 k) ?x266 ?x267 (* (- 1) ?x401)) 2))))
 (let ((?x164 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x464 (* 5 m)))
 (let ((?x552 (+ (* 27 c) (* 32 k) ?x464 ?x226 ?x227 (* 9 ?x52) ?x164 (* (- 2) (* k m)) (* (- 1) ?x515))))
 (let (($x556 (not (= ?x552 13))))
 (let (($x147 (= (+ m ?x130) 6)))
 (let (($x365 (not $x147)))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x269 (= (+ ?x264 k ?x266 ?x267) 0)))
 (let (($x224 (= (+ (* 18 c) (* 5 k) ?x226 ?x227 ?x164) 4)))
 (and $x147 $x224 $x269 $x305 (or $x365 $x556 $x582 (not (= (* ?x136 ?x940) 0)) $x1007))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x659 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x160 (* (- 1) m)))
 (let ((?x396 (* (- 1) k)))
 (let (($x281 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x396 ?x160 ?x61) (- 3))))
 (let (($x419 (not $x281)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x464 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x456 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x464 ?x226 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x914 (+ 6 m)))
 (let ((?x364 (+ 1 n)))
 (let ((?x186 (* 8 (* ?x364 ?x364 ?x914 ?x74 ?x71 ?x71))))
 (let ((?x332 (+ (* 7 (* ?x364 ?x914 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x186 (* ?x364 ?x914 ?x914))))
 (let ((?x130 (* (- 6) n)))
 (let ((?x136 (+ (- 6) m ?x130)))
 (let (($x314 (not (= (* ?x136 ?x332) 0))))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x457 (= (+ ?x264 (* 4 k) (* (- 1) (* ?x364 ?x74)) m ?x266) 2)))
 (let (($x466 (= (+ (* 3 (* n n)) ?x396 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x147 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x226 ?x227) 4) (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x466 (or (not $x457) $x314 $x365 (not (= ?x456 13)) $x419))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x429 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x1007 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x887 (* m m n)))
 (let ((?x715 (* (- 5) (* k m m))))
 (let ((?x712 (* (- 5) (* c m m))))
 (let ((?x637 (* 7 (* k k m m n))))
 (let ((?x631 (* 7 (* c c m m n))))
 (let ((?x629 (* 7 (* k k k m n))))
 (let ((?x623 (* 7 (* c c k m n))))
 (let ((?x515 (* m m)))
 (let ((?x401 (* m n)))
 (let ((?x910 (* 12 ?x401)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x914 (+ 6 m)))
 (let ((?x364 (+ 1 n)))
 (let ((?x186 (* 8 (* ?x364 ?x364 ?x914 ?x74 ?x71 ?x71))))
 (let ((?x901 (* 36 n)))
 (let ((?x940 (+ 36 (* 12 m) ?x901 (* 42 (* k k m n)) ?x186 (* 42 (* c c k)) (* 42 (* c c m)) (* 84 (* c k m n)) (* 7 (* c c m m)) (* 7 (* k k k m)) ?x910 (* 14 (* c k m m)) (* 42 (* c c m n)) ?x515 (* 42 (* c c k n)) ?x623 (* 14 (* c k k m n)) ?x629 ?x631 (* 14 (* c k m m n)) ?x637 (* 79 (* c k k)) (* 7 (* k k m m)) (* 37 (* k k k)) (* 74 (* c k m)) (* 32 (* k k m)) ?x712 ?x715 (* 42 (* k k k n)) (* 14 (* c k k m)) (* 7 (* c c k m)) ?x887 (* 84 (* c k k n)))))
 (let ((?x130 (* (- 6) n)))
 (let ((?x136 (+ (- 6) m ?x130)))
 (let ((?x52 (* k n)))
 (let ((?x267 (* (- 1) ?x52)))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x582 (not (= (+ ?x264 (* 3 k) ?x266 ?x267 (* (- 1) ?x401)) 2))))
 (let ((?x164 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x464 (* 5 m)))
 (let ((?x552 (+ (* 27 c) (* 32 k) ?x464 ?x226 ?x227 (* 9 ?x52) ?x164 (* (- 2) (* k m)) (* (- 1) ?x515))))
 (let (($x556 (not (= ?x552 13))))
 (let (($x147 (= (+ m ?x130) 6)))
 (let (($x365 (not $x147)))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x269 (= (+ ?x264 k ?x266 ?x267) 0)))
 (let (($x224 (= (+ (* 18 c) (* 5 k) ?x226 ?x227 ?x164) 4)))
 (let (($x982 (and $x147 $x224 $x269 $x305 (or $x365 $x556 $x582 (not (= (* ?x136 ?x940) 0)) $x1007))))
 (let ((?x61 (* 3 n)))
 (let ((?x160 (* (- 1) m)))
 (let ((?x396 (* (- 1) k)))
 (let (($x419 (not (= (+ (* 3 (* ?x364 ?x364)) ?x396 ?x160 ?x61) (- 3)))))
 (let ((?x37 (* 18 c)))
 (let ((?x456 (+ ?x37 (* 23 k) (* 9 (* ?x364 ?x71)) ?x464 ?x226 (* (- 1) (* ?x74 ?x74)))))
 (let ((?x332 (+ (* 7 (* ?x364 ?x914 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x186 (* ?x364 ?x914 ?x914))))
 (let (($x314 (not (= (* ?x136 ?x332) 0))))
 (let (($x457 (= (+ ?x264 (* 4 k) (* (- 1) (* ?x364 ?x74)) m ?x266) 2)))
 (let (($x466 (= (+ (* 3 (* n n)) ?x396 ?x61) 0)))
 (let (($x572 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x226 ?x227) 4)))
 (let (($x357 (and $x147 $x572 (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x466 (or (not $x457) $x314 $x365 (not (= ?x456 13)) $x419))))
 (rewrite (= $x357 $x982)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x317 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x160 (* (- 1) m)))
 (let ((?x396 (* (- 1) k)))
 (let (($x281 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x396 ?x160 ?x61) (- 3))))
 (let (($x419 (not $x281)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x684 (* (- 18) c)))
 (let ((?x351 (+ ?x684 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x71 (+ c k)))
 (let ((?x914 (+ 6 m)))
 (let ((?x364 (+ 1 n)))
 (let ((?x186 (* 8 (* ?x364 ?x364 ?x914 ?x74 ?x71 ?x71))))
 (let ((?x332 (+ (* 7 (* ?x364 ?x914 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x186 (* ?x364 ?x914 ?x914))))
 (let ((?x130 (* (- 6) n)))
 (let ((?x136 (+ (- 6) m ?x130)))
 (let (($x314 (not (= (* ?x136 ?x332) 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x444 (* ?x364 ?x74)))
 (let ((?x384 (* (- 3) c)))
 (let (($x450 (or (not (= (+ ?x384 (* (- 4) k) ?x444 ?x160 ?x56) (- 2))) $x314 (not (= ?x351 (- 13))) $x365 $x419)))
 (let (($x466 (= (+ (* 3 (* n n)) ?x396 ?x61) 0)))
 (let (($x378 (= (+ ?x684 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x147 $x378 (= (+ ?x384 (* n k) ?x396 ?x56) 0) $x466 $x450))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x731 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x160 (* (- 1) m)))
 (let ((?x396 (* (- 1) k)))
 (let (($x281 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x396 ?x160 ?x61) (- 3))))
 (let (($x419 (not $x281)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x464 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x456 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x464 ?x226 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x914 (+ 6 m)))
 (let ((?x364 (+ 1 n)))
 (let ((?x186 (* 8 (* ?x364 ?x364 ?x914 ?x74 ?x71 ?x71))))
 (let ((?x332 (+ (* 7 (* ?x364 ?x914 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x186 (* ?x364 ?x914 ?x914))))
 (let ((?x130 (* (- 6) n)))
 (let ((?x136 (+ (- 6) m ?x130)))
 (let (($x314 (not (= (* ?x136 ?x332) 0))))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x457 (= (+ ?x264 (* 4 k) (* (- 1) (* ?x364 ?x74)) m ?x266) 2)))
 (let (($x466 (= (+ (* 3 (* n n)) ?x396 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x357 (and $x147 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x226 ?x227) 4) (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x466 (or (not $x457) $x314 $x365 (not (= ?x456 13)) $x419))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x684 (* (- 18) c)))
 (let ((?x351 (+ ?x684 (* (- 23) k) (* (- 9) (* ?x364 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x444 (* ?x364 ?x74)))
 (let ((?x384 (* (- 3) c)))
 (let (($x450 (or (not (= (+ ?x384 (* (- 4) k) ?x444 ?x160 ?x56) (- 2))) $x314 (not (= ?x351 (- 13))) $x365 $x419)))
 (let (($x378 (= (+ ?x684 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x526 (and $x147 $x378 (= (+ ?x384 (* n k) ?x396 ?x56) 0) $x466 $x450)))
 (rewrite (= $x526 $x357)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x106 (+ (- (* 7 ?x71 ?x71 ?x74 ?x99 ?x66) (* 5 ?x71 ?x74 ?x74)) (* 8 ?x71 ?x71 ?x74 ?x99 ?x66 ?x66) (* ?x99 ?x99 ?x66))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x110 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x68 ?x106) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x110)))))))))))))))) :qid k!38))
 ))
 (let ((?x319 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x160 (* (- 1) m)))
 (let ((?x396 (* (- 1) k)))
 (let (($x281 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x396 ?x160 ?x61) (- 3))))
 (let (($x419 (not $x281)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x684 (* (- 18) c)))
 (let ((?x351 (+ ?x684 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x71 (+ c k)))
 (let ((?x914 (+ 6 m)))
 (let ((?x364 (+ 1 n)))
 (let ((?x186 (* 8 (* ?x364 ?x364 ?x914 ?x74 ?x71 ?x71))))
 (let ((?x332 (+ (* 7 (* ?x364 ?x914 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x186 (* ?x364 ?x914 ?x914))))
 (let ((?x130 (* (- 6) n)))
 (let ((?x136 (+ (- 6) m ?x130)))
 (let (($x314 (not (= (* ?x136 ?x332) 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x444 (* ?x364 ?x74)))
 (let ((?x384 (* (- 3) c)))
 (let (($x450 (or (not (= (+ ?x384 (* (- 4) k) ?x444 ?x160 ?x56) (- 2))) $x314 (not (= ?x351 (- 13))) $x365 $x419)))
 (let (($x466 (= (+ (* 3 (* n n)) ?x396 ?x61) 0)))
 (let (($x378 (= (+ ?x684 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x526 (and $x147 $x378 (= (+ ?x384 (* n k) ?x396 ?x56) 0) $x466 $x450)))
 (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x106 (+ (- (* 7 ?x71 ?x71 ?x74 ?x99 ?x66) (* 5 ?x71 ?x74 ?x74)) (* 8 ?x71 ?x71 ?x74 ?x99 ?x66 ?x66) (* ?x99 ?x99 ?x66))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x110 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x68 ?x106) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x111 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x110)))
 (rewrite (= $x111 $x526)))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x113 (asserted $x112)))
 (let ((@x344 (mp (mp @x113 (quant-intro (proof-bind ?x319) (= $x112 $x317)) $x317) (rewrite (= $x317 $x317)) $x317)))
 (let ((@x249 (mp (mp @x344 (quant-intro (proof-bind ?x731) (= $x317 $x659)) $x659) (quant-intro (proof-bind ?x429) (= $x659 $x433)) $x433)))
 (let ((@x690 (mp (mp~ @x249 (sk (~ $x433 $x696)) $x696) (rewrite (= $x696 $x310)) $x310)))
 (let ((@x391 (and-elim @x690 $x275)))
 (let ((@x218 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x275) $x171)) @x391 $x171)))
 (let (($x706 (>= ?x708 (- 4))))
 (let ((@x933 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x275) $x706)) @x391 $x706)))
 (let (($x704 (<= ?x530 0)))
 (let ((@x693 (and-elim @x690 $x724)))
 (let ((@x932 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x724) $x704)) @x693 $x704)))
 (let (($x487 (>= ?x530 0)))
 (let ((@x957 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x724) $x487)) @x693 $x487)))
 (let (($x404 (<= ?x424 0)))
 (let ((@x979 (and-elim @x690 $x648)))
 (let ((@x880 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x648) $x404)) @x979 $x404)))
 (let (($x472 (>= ?x424 0)))
 (let ((@x370 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x648) $x472)) @x979 $x472)))
 (let ((@x1184 ((_ th-lemma arith) (hypothesis (>= n!0 2)) @x957 @x932 @x933 @x218 @x957 @x932 @x933 @x218 @x957 @x932 @x933 @x218 @x370 @x880 @x933 @x218 @x370 @x880 @x957 @x932 @x957 @x932 @x933 @x218 false)))
 (let ((@x1185 (lemma @x1184 (not (>= n!0 2)))))
 (let (($x1257 (>= ?x307 2)))
 (let (($x1221 (>= c!3 (- 1))))
 (let (($x650 (<= k!2 0)))
 (let (($x125 (not $x650)))
 (let ((@x719 (hypothesis $x650)))
 (let (($x316 (>= k!2 0)))
 (let (($x695 (<= ?x407 6)))
 (let ((@x694 (and-elim @x690 $x209)))
 (let ((@x422 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x889 $x695)) @x694 $x695)))
 (let (($x703 (>= ?x407 6)))
 (let ((@x481 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x889 $x703)) @x694 $x703)))
 (let ((@x542 (hypothesis (not $x316))))
 (let ((@x732 ((_ th-lemma arith) @x542 @x542 @x933 @x218 @x370 @x880 @x933 @x218 @x370 @x880 @x933 @x218 @x957 @x932 @x370 @x880 @x370 @x880 @x933 @x218 @x957 @x932 @x933 @x218 @x481 @x422 @x370 @x880 false)))
 (let ((@x692 (lemma @x732 $x316)))
 (let (($x714 (>= ?x156 0)))
 (let ((@x325 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x714)) false) $x714)))
 (let ((@x505 ((_ th-lemma arith gcd-test -8/9 -8/9 2/9 2/9 -2/9 -2/9 -2/9 1 1 1 1 -1 -1) @x692 @x719 @x933 @x218 @x325 @x692 @x719 @x692 @x719 @x692 @x719 @x957 @x932 false)))
 (let ((@x1220 (lemma @x505 $x125)))
 (let ((@x1222 ((_ th-lemma arith) (hypothesis (not $x1221)) @x1220 @x957 @x932 @x370 @x880 @x933 @x218 false)))
 (let (($x308 (<= k!2 1)))
 (let ((@x1266 (hypothesis $x308)))
 (let ((@x1267 ((_ th-lemma arith gcd-test -7/9 -7/9 1/3 1/3 1/3 1/3 -1/3 -1/3 1/9 1/9 -1/9 -1/9 -1/9 -1/9 -1/9) @x1220 @x1266 @x1220 @x1266 @x1220 @x1266 @x957 @x932 @x933 @x218 @x1220 @x1220 @x1266 @x1220 @x1266 false)))
 (let ((@x1269 (lemma @x1267 (not $x308))))
 (let ((@x1160 (hypothesis (not $x1257))))
 (let ((@x1037 ((_ th-lemma arith) @x1160 @x880 @x1160 @x1269 @x1269 (lemma @x1222 $x1221) @x218 @x957 @x932 false)))
 (let ((@x1161 (lemma @x1037 $x1257)))
 (let (($x728 (>= ?x202 1)))
 (let (($x306 (<= n!0 1)))
 (let ((@x996 (hypothesis (not $x728))))
 (let ((@x1030 (lemma ((_ th-lemma arith farkas 1 -1/6 -3/2 -1/6 1/6 1 1) @x957 @x880 @x996 @x218 @x325 @x692 @x719 false) (or $x125 $x728))))
 (let ((@x1045 (unit-resolution @x1030 @x996 $x125)))
 (let (($x1050 (<= c!3 0)))
 (let (($x991 (>= ?x363 4)))
 (let (($x188 (<= ?x307 0)))
 (let (($x998 (not $x188)))
 (let ((@x1000 (lemma ((_ th-lemma arith farkas 1 -1/6 -3/2 -1/6 1/6 1 1) @x957 @x880 @x996 @x218 @x325 (hypothesis $x188) @x692 false) (or $x998 $x728))))
 (let (($x1047 (not $x306)))
 (let ((@x1031 (hypothesis (not $x991))))
 (let ((@x1044 (hypothesis $x306)))
 (let ((@x1046 ((_ th-lemma arith farkas 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 1 1) @x1031 @x957 @x880 @x996 @x218 @x325 @x1045 @x957 @x880 @x996 @x218 @x325 @x1045 @x1044 @x957 @x880 @x996 @x218 @x325 @x1045 @x1044 @x880 @x957 @x880 @x996 @x218 @x325 @x1045 @x1044 false)))
 (let ((@x1039 (unit-resolution (lemma @x1046 (or $x1047 $x991 $x728)) @x1031 @x996 $x1047)))
 (let ((@x1040 ((_ th-lemma arith farkas 1 2 2 2 2 2 2 2 6 2 1 6) @x422 @x957 @x880 @x996 @x218 @x325 @x1031 @x1039 @x1039 @x880 @x481 (unit-resolution @x1000 @x996 $x998) false)))
 (let ((@x1052 (unit-resolution (lemma @x1040 (or $x991 $x728)) @x996 $x991)))
 (let ((@x1057 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x996 (hypothesis (not $x1050)) @x1052 @x1045 false) (or $x1050 $x728))))
 (let ((@x1123 (unit-resolution @x1057 @x996 $x1050)))
 (let ((@x1060 (hypothesis $x1047)))
 (let (($x990 (>= ?x202 (- 2))))
 (let ((@x1027 (hypothesis $x125)))
 (let ((?x1118 (+ ?x156 (* (- 7) ?x202) (* (- 12) c!3) ?x389 (* 8 n!0) (* (- 4) k!2))))
 (let ((@x978 (hypothesis (not $x990))))
 (let ((@x908 ((_ th-lemma arith) @x978 @x1060 ((_ th-lemma arith gomory-cut 1/4 1/2 3/4 1/2 -3/4) @x1027 @x933 @x1060 @x370 @x978 (>= ?x1118 6)) @x370 @x880 @x933 @x218 @x370 @x880 @x933 @x218 @x370 @x880 @x370 @x880 @x933 @x218 @x370 @x880 @x957 @x932 @x933 @x218 false)))
 (let ((@x585 ((_ th-lemma arith) (unit-resolution (lemma @x908 (or $x990 $x306 $x650)) @x1060 @x1027 $x990) @x1060 (hypothesis $x1050) @x370 @x880 @x933 @x218 @x370 @x880 @x957 @x932 @x370 @x880 false)))
 (let ((@x1124 (unit-resolution (lemma @x585 (or $x306 (not $x1050) $x650)) @x1123 @x1045 $x306)))
 ((_ th-lemma arith farkas 1/2 1/2 -3/2 -3/2 -3/2 -1/2 1) @x1161 @x1185 (lemma ((_ th-lemma arith farkas 2 2 1 3 1 1 1) @x1052 @x1045 @x932 @x1123 @x1052 @x1045 @x1124 false) $x728) @x1161 @x1185 @x957 @x1185 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 71
 :arith-assert-diseq        27
 :arith-assert-lower        618
 :arith-assert-upper        292
 :arith-bound-prop          2
 :arith-branch-var          15
 :arith-conflicts           23
 :arith-eq-adapter          12
 :arith-fixed-eqs           89
 :arith-gcd-tests           94
 :arith-gomory-cuts         10
 :arith-grobner             21
 :arith-ineq-splits         15
 :arith-max-min             4072
 :arith-nonlinear-bounds    335
 :arith-nonlinear-horner    251
 :arith-num-rows            20
 :arith-offset-eqs          6
 :arith-patches             36
 :arith-patches_succ        7
 :arith-pivots              419
 :arith-pseudo-nonlinear    149
 :arith-row-summations      2202
 :arith-tableau-max-columns 90
 :arith-tableau-max-rows    20
 :conflicts                 28
 :decisions                 111
 :del-clause                62
 :final-checks              85
 :max-memory                3.97
 :memory                    3.28
 :minimized-lits            5
 :mk-bool-var               106
 :mk-clause                 67
 :num-allocs                3270343
 :num-checks                1
 :propagations              75
 :rlimit-count              153927
 :time                      0.07
 :total-time                0.07)
