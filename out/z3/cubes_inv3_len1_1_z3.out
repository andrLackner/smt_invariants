unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x402 (* (- 1) k!2)))
 (let ((?x106 (* n!0 n!0)))
 (let ((?x503 (* 3 ?x106)))
 (let ((?x435 (+ ?x503 ?x402 (* 3 n!0))))
 (let (($x528 (<= ?x435 0)))
 (let (($x600 (= ?x435 0)))
 (let ((?x364 (+ m!1 (* (- 6) n!0))))
 (let (($x598 (= ?x364 6)))
 (let (($x524 (not $x598)))
 (let ((?x446 (* m!1 n!0)))
 (let ((?x340 (* 2 ?x446)))
 (let ((?x444 (* k!2 k!2 n!0)))
 (let ((?x328 (* 2 k!2)))
 (let ((?x161 (* 2 m!1)))
 (let ((?x273 (* k!2 k!2)))
 (let ((?x347 (* (- 3) ?x273)))
 (let ((?x224 (* k!2 n!0)))
 (let ((?x443 (* 2 ?x224)))
 (let ((?x190 (* m!1 m!1 n!0)))
 (let ((?x278 (+ ?x190 ?x443 ?x347 ?x161 ?x328 (* (- 3) (* m!1 k!2)) (* 2 (* m!1 k!2 n!0)) ?x444 ?x340 (* (- 3) (* k!2 c!3)) (* (- 3) (* m!1 c!3)))))
 (let (($x411 (= (+ ?x224 (* (- 3) k!2) (* (- 3) c!3) (* 2 n!0) ?x446) (- 2))))
 (let ((?x584 (* (- 1) (* m!1 m!1))))
 (let ((?x437 (* c!3 n!0)))
 (let ((?x184 (* 9 ?x437)))
 (let ((?x116 (* (- 9) n!0)))
 (let ((?x545 (* 27 c!3)))
 (let ((?x465 (* 32 k!2)))
 (let ((?x467 (* 5 m!1)))
 (let ((?x305 (* (- 1) ?x273)))
 (let ((?x383 (* 9 ?x224)))
 (let ((?x586 (+ ?x383 ?x305 ?x467 ?x465 ?x545 (* (- 2) (* m!1 k!2)) ?x116 ?x184 ?x584)))
 (let (($x585 (or (not (= (+ ?x503 (* (- 1) m!1) ?x402 (* 9 n!0)) (- 6))) (not (= ?x586 13)) (not $x411) (not (= ?x278 0)) $x524)))
 (let ((?x592 (* 2 n!0)))
 (let ((?x590 (* (- 3) c!3)))
 (let ((?x555 (+ ?x224 ?x402 ?x590 ?x592)))
 (let (($x596 (= ?x555 0)))
 (let ((?x197 (* 9 n!0)))
 (let ((?x486 (* (- 18) c!3)))
 (let ((?x335 (* (- 5) k!2)))
 (let ((?x490 (+ ?x273 ?x335 ?x486 ?x197 (* (- 9) ?x437))))
 (let (($x491 (= ?x490 (- 4))))
 (let (($x304 (and $x598 $x491 $x596 $x600 $x585)))
 (let ((?x225 (* (- 1) ?x224)))
 (let ((?x488 (* (- 2) n!0)))
 (let ((?x360 (* 3 c!3)))
 (let ((?x519 (+ ?x545 ?x465 ?x467 ?x116 ?x305 ?x383 ?x184 (* (- 2) (* k!2 m!1)) ?x584)))
 (let ((?x565 (+ ?x328 ?x161 ?x347 ?x443 ?x444 (* 2 (* k!2 m!1 n!0)) ?x340 ?x190 (* (- 3) (* k!2 m!1)) (* (- 3) (* c!3 k!2)) (* (- 3) (* c!3 m!1)))))
 (let (($x174 (or $x524 (not (= ?x565 0)) (not (= (+ k!2 m!1 ?x116 (* (- 3) ?x106)) 6)) (not (= ?x519 13)) (not (= (+ ?x360 (* 3 k!2) ?x488 ?x225 (* (- 1) ?x446)) 2)))))
 (let (($x342 (and $x598 (= (+ (* 18 c!3) (* 5 k!2) ?x116 ?x305 ?x184) 4) (= (+ ?x360 k!2 ?x488 ?x225) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x106)) 0) $x174)))
 (let (($x434 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let ((?x409 (+ (* 2 k) (* 2 m) (* (- 3) ?x46) (* 2 ?x52) (* k k n) (* 2 (* k m n)) (* 2 (* m n)) (* m m n) (* (- 3) (* k m)) (* (- 3) (* c k)) (* (- 3) (* c m)))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x390 (or $x356 (not (= ?x409 0)) (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 $x390))))))))))))))))))))) :qid k!38))
 ))
 (let (($x626 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x329 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x56 (* 2 n)))
 (let ((?x378 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x493 (+ 1 n)))
 (let ((?x505 (* ?x493 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let (($x270 (not (= (* ?x74 (+ 2 ?x226 ?x417 ?x505 ?x378 ?x56)) 0))))
 (let (($x227 (= (+ (* 3 (* ?x493 ?x493)) (* (- 1) k) ?x378 (* 3 n)) (- 3))))
 (let (($x237 (not $x227)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x287 (or (not (= (+ ?x255 (* 4 k) (* (- 1) ?x505) m ?x257) 2)) $x237 $x270 $x356 (not (= ?x329 13)))))
 (let (($x484 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x484 $x287)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x313 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let ((?x409 (+ (* 2 k) (* 2 m) (* (- 3) ?x46) (* 2 ?x52) (* k k n) (* 2 (* k m n)) (* 2 (* m n)) (* m m n) (* (- 3) (* k m)) (* (- 3) (* c k)) (* (- 3) (* c m)))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x390 (or $x356 (not (= ?x409 0)) (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x487 (and $x138 $x215 $x260 $x296 $x390)))
 (let ((?x37 (* 18 c)))
 (let ((?x329 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x56 (* 2 n)))
 (let ((?x378 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x493 (+ 1 n)))
 (let ((?x505 (* ?x493 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let (($x270 (not (= (* ?x74 (+ 2 ?x226 ?x417 ?x505 ?x378 ?x56)) 0))))
 (let (($x227 (= (+ (* 3 (* ?x493 ?x493)) (* (- 1) k) ?x378 (* 3 n)) (- 3))))
 (let (($x237 (not $x227)))
 (let (($x287 (or (not (= (+ ?x255 (* 4 k) (* (- 1) ?x505) m ?x257) 2)) $x237 $x270 $x356 (not (= ?x329 13)))))
 (let (($x484 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x168 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x337 (and $x138 $x168 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x484 $x287)))
 (rewrite (= $x337 $x487))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x442 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x56 (* 2 n)))
 (let ((?x378 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x493 (+ 1 n)))
 (let ((?x505 (* ?x493 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x270 (not (= (* ?x74 (+ 2 ?x226 ?x417 ?x505 ?x378 ?x56)) 0))))
 (let (($x227 (= (+ (* 3 (* ?x493 ?x493)) (* (- 1) k) ?x378 (* 3 n)) (- 3))))
 (let (($x237 (not $x227)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x162 (+ ?x454 (* (- 23) k) (* (- 9) (* ?x493 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x562 (or (not (= ?x162 (- 13))) $x237 $x270 $x356 (not (= (+ ?x226 ?x417 ?x505 ?x378 ?x56) (- 2))))))
 (let (($x484 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x333 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x333 (= (+ ?x226 (* n k) (* (- 1) k) ?x56) 0) $x484 $x562)))))))))))))))))))) :qid k!38))
 ))
 (let ((?x581 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x329 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x56 (* 2 n)))
 (let ((?x378 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x493 (+ 1 n)))
 (let ((?x505 (* ?x493 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let (($x270 (not (= (* ?x74 (+ 2 ?x226 ?x417 ?x505 ?x378 ?x56)) 0))))
 (let (($x227 (= (+ (* 3 (* ?x493 ?x493)) (* (- 1) k) ?x378 (* 3 n)) (- 3))))
 (let (($x237 (not $x227)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x287 (or (not (= (+ ?x255 (* 4 k) (* (- 1) ?x505) m ?x257) 2)) $x237 $x270 $x356 (not (= ?x329 13)))))
 (let (($x484 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x337 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x484 $x287)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x162 (+ ?x454 (* (- 23) k) (* (- 9) (* ?x493 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x562 (or (not (= ?x162 (- 13))) $x237 $x270 $x356 (not (= (+ ?x226 ?x417 ?x505 ?x378 ?x56) (- 2))))))
 (let (($x333 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x152 (and $x138 $x333 (= (+ ?x226 (* n k) (* (- 1) k) ?x56) 0) $x484 $x562)))
 (rewrite (= $x152 $x337))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x50 (- 3)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x101 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x50 ?x74 ?x89) 0)))))
 (let (($x58 (= (+ (- (+ (* ?x50 c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101))))))))))))))) :qid k!38))
 ))
 (let ((?x466 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x56 (* 2 n)))
 (let ((?x378 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x493 (+ 1 n)))
 (let ((?x505 (* ?x493 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x226 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x270 (not (= (* ?x74 (+ 2 ?x226 ?x417 ?x505 ?x378 ?x56)) 0))))
 (let (($x227 (= (+ (* 3 (* ?x493 ?x493)) (* (- 1) k) ?x378 (* 3 n)) (- 3))))
 (let (($x237 (not $x227)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x162 (+ ?x454 (* (- 23) k) (* (- 9) (* ?x493 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x562 (or (not (= ?x162 (- 13))) $x237 $x270 $x356 (not (= (+ ?x226 ?x417 ?x505 ?x378 ?x56) (- 2))))))
 (let (($x484 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x333 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x152 (and $x138 $x333 (= (+ ?x226 (* n k) (* (- 1) k) ?x56) 0) $x484 $x562)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x50 (- 3)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x101 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x50 ?x74 ?x89) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* ?x50 c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101)))
 (rewrite (= $x102 $x152))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x469 (mp (mp @x104 (quant-intro (proof-bind ?x466) (= $x103 $x442)) $x442) (rewrite (= $x442 $x442)) $x442)))
 (let ((@x381 (mp (mp @x469 (quant-intro (proof-bind ?x581) (= $x442 $x626)) $x626) (quant-intro (proof-bind ?x313) (= $x626 $x434)) $x434)))
 (let ((@x494 (mp (mp~ @x381 (sk (~ $x434 $x342)) $x342) (rewrite (= $x342 $x304)) $x304)))
 (let ((@x379 (and-elim @x494 $x600)))
 (let ((@x502 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x600) $x528)) @x379 $x528)))
 (let (($x315 (>= ?x435 0)))
 (let ((@x393 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x600) $x315)) @x379 $x315)))
 (let (($x461 (<= ?x490 (- 4))))
 (let ((@x399 (and-elim @x494 $x491)))
 (let ((@x238 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x461)) @x399 $x461)))
 (let (($x380 (>= ?x490 (- 4))))
 (let ((@x458 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x380)) @x399 $x380)))
 (let (($x410 (<= ?x555 0)))
 (let ((@x403 (and-elim @x494 $x596)))
 (let ((@x144 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x596) $x410)) @x403 $x410)))
 (let (($x412 (>= ?x555 0)))
 (let ((@x276 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x596) $x412)) @x403 $x412)))
 (let (($x824 (<= n!0 1)))
 (let ((@x641 (hypothesis $x824)))
 (let (($x1166 (<= c!3 1)))
 (let ((@x246 (hypothesis $x1166)))
 (let (($x1290 (<= m!1 6)))
 (let ((@x1307 (hypothesis $x1290)))
 (let (($x439 (>= n!0 0)))
 (let ((@x558 (hypothesis (not $x439))))
 (let (($x312 (<= ?x364 6)))
 (let ((@x535 (and-elim @x494 $x598)))
 (let ((@x431 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x524 $x312)) @x535 $x312)))
 (let (($x475 (>= ?x364 6)))
 (let ((@x200 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x524 $x475)) @x535 $x475)))
 (let ((@x1303 ((_ th-lemma arith) (hypothesis (>= (+ ?x273 ?x335 ?x486 ?x197 (* (- 8) ?x437)) 1)) @x393 @x502 @x458 @x238 @x458 @x238 @x393 @x502 @x276 @x144 @x458 @x238 @x200 @x431 @x200 @x431 @x276 @x144 @x200 @x431 @x276 @x144 @x458 @x238 false)))
 (let ((@x1361 (lemma @x1303 (not (>= (+ ?x273 ?x335 ?x486 ?x197 (* (- 8) ?x437)) 1)))))
 (let (($x1234 (<= k!2 2)))
 (let ((@x1268 (hypothesis $x1234)))
 (let (($x1248 (<= k!2 1)))
 (let ((@x1259 (hypothesis $x1248)))
 (let (($x627 (<= k!2 0)))
 (let ((@x136 (hypothesis $x627)))
 (let (($x115 (>= k!2 0)))
 (let ((@x404 (hypothesis (not $x115))))
 (let ((@x455 (unit-resolution (lemma ((_ th-lemma arith) @x558 @x404 @x502 @x558 false) (or $x439 $x115)) @x404 $x439)))
 (let ((@x594 (lemma ((_ th-lemma arith farkas 1/3 -1 1/3) @x404 @x455 @x502 false) $x115)))
 (let (($x109 (>= (+ ?x273 ?x402 (* (- 10) c!3) (* 5 n!0) (* (- 5) ?x437)) 0)))
 (let (($x266 (>= ?x273 0)))
 (let ((@x633 ((_ th-lemma arith gomory-cut 1/4 4/5 1/5) @x458 @x594 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x266)) false) $x266) $x109)))
 (let ((@x135 (lemma ((_ th-lemma arith farkas 4 5/4 9/4 1 1) @x136 @x238 @x633 @x594 @x136 false) (not $x627))))
 (let ((@x1247 ((_ th-lemma arith gcd-test -1/3 -1/3 -1/3 -1/3 -1/9 -1/9 1/9 1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -2/3 -2/3) @x135 @x1259 @x135 @x1259 @x135 @x1259 @x458 @x238 @x135 @x135 @x1259 @x135 @x1259 @x276 @x144 false)))
 (let ((@x1186 (lemma @x1247 (not $x1248))))
 (let ((@x1266 ((_ th-lemma arith) @x1186 @x1268 @x276 @x144 @x1186 @x1268 @x1186 @x1268 @x393 @x502 @x1186 @x1268 @x393 @x502 @x1186 @x1268 @x1186 @x1268 @x1186 @x1268 @x1186 @x1268 @x276 @x144 @x458 @x238 @x1186 @x1268 @x276 @x144 @x1186 @x1268 @x1186 @x1268 @x1186 @x1268 @x458 @x238 false)))
 (let ((@x1297 (lemma @x1266 (not $x1234))))
 (let ((@x1369 (lemma ((_ th-lemma arith farkas -1/3 2 2 -2 -1/3 3 -8/3 1) @x1297 @x1297 @x558 @x276 @x1297 @x1361 @x458 @x558 false) $x439)))
 (let (($x1184 (>= c!3 0)))
 (let ((?x1366 (+ ?x273 ?x335 ?x486 ?x197 (* (- 8) ?x437))))
 (let (($x826 (>= ?x1366 (- 3))))
 (let ((@x1310 ((_ th-lemma arith) (hypothesis (not $x826)) @x393 @x502 @x276 @x144 @x458 @x238 @x393 @x502 @x393 @x502 @x458 @x238 @x458 @x238 @x393 @x502 @x458 @x238 false)))
 (let ((@x1157 (lemma @x1310 $x826)))
 (let (($x464 (<= ?x586 13)))
 (let ((@x142 ((_ th-lemma arith) (hypothesis (not $x464)) @x393 @x502 @x393 @x502 @x200 @x431 @x393 @x502 @x276 @x144 @x200 @x431 @x458 @x238 false)))
 (let ((@x1308 ((_ th-lemma arith farkas 12 5/2 9/2 1/2 1/2 1/2 1/2 1/2 1/2 1/2 1/2 18 6 1 1 1) @x135 @x200 @x276 @x238 @x200 @x1369 @x1307 @x200 @x1369 @x1307 (lemma @x142 $x464) (lemma ((_ th-lemma arith farkas -1 1 1 1) @x238 @x1157 (hypothesis (not $x1184)) @x1369 false) $x1184) @x1369 @x200 @x1369 @x1307 false)))
 (let ((@x1304 (lemma @x1308 (not $x1290))))
 (let (($x635 (>= ?x437 2)))
 (let ((@x1288 ((_ th-lemma arith) @x238 @x1157 (hypothesis (not $x635)) @x393 @x502 @x276 @x144 @x393 @x502 @x276 @x144 @x393 @x502 @x276 @x144 @x458 @x238 @x276 @x144 @x393 @x502 false)))
 (let ((@x1148 (lemma @x1288 $x635)))
 (let ((@x809 ((_ th-lemma arith) @x1148 @x431 @x1304 @x246 @x238 @x502 @x238 @x1148 @x431 @x1304 @x246 @x238 @x502 @x246 @x1148 @x431 @x1304 @x246 @x1148 @x431 @x1304 @x246 false)))
 (let ((@x705 (lemma @x809 (not $x1166))))
 ((_ th-lemma arith) (lemma ((_ th-lemma arith farkas 3 1 2 1 1 1) @x705 @x276 @x641 @x1148 @x705 @x641 false) (not $x824)) @x393 @x502 @x458 @x238 @x276 @x144 @x393 @x502 @x458 @x238 @x393 @x502 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 53
 :arith-assert-diseq        45
 :arith-assert-lower        443
 :arith-assert-upper        340
 :arith-bound-prop          9
 :arith-branch-var          30
 :arith-conflicts           46
 :arith-eq-adapter          14
 :arith-fixed-eqs           85
 :arith-gcd-tests           307
 :arith-gomory-cuts         18
 :arith-grobner             39
 :arith-ineq-splits         30
 :arith-max-min             2513
 :arith-nonlinear-bounds    220
 :arith-nonlinear-horner    314
 :arith-num-rows            16
 :arith-offset-eqs          6
 :arith-patches             75
 :arith-patches_succ        16
 :arith-pivots              578
 :arith-pseudo-nonlinear    77
 :arith-row-summations      2654
 :arith-tableau-max-columns 55
 :arith-tableau-max-rows    16
 :conflicts                 53
 :decisions                 264
 :del-clause                93
 :final-checks              160
 :max-memory                3.96
 :memory                    3.32
 :minimized-lits            14
 :mk-bool-var               199
 :mk-clause                 104
 :num-allocs                3026931
 :num-checks                1
 :propagations              268
 :rlimit-count              173596
 :time                      0.07
 :total-time                0.08)
