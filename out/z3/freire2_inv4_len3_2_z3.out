unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x385 (* r00 r00)))
 (let ((?x3051 (* (- 3) ?x385)))
 (let ((?x2866 (+ s00 ?x3051 (* 3 (* r!2 r!2)) (* (- 1) s!1))))
 (let (($x1560 (<= ?x2866 0)))
 (let (($x2868 (= ?x2866 0)))
 (let ((?x3126 (* r!2 r!2 r!2)))
 (let ((?x907 (* 72 ?x3126)))
 (let ((?x1665 (* 72 x!0)))
 (let ((?x1437 (* s!1 x!0)))
 (let ((?x4120 (* 6 ?x1437)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x971 (* r!2 x!0)))
 (let ((?x886 (* 90 ?x971)))
 (let ((?x1663 (* 36 r!2)))
 (let ((?x1664 (* (- 57) s!1)))
 (let ((?x957 (* s!1 s!1)))
 (let ((?x1157 (* (- 1) ?x957)))
 (let ((?x926 (* r!2 r!2)))
 (let ((?x1666 (* 108 ?x926)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x778 (* s00 s00 r00)))
 (let ((?x796 (* (- 2) ?x778)))
 (let ((?x733 (* s00 r00 r00)))
 (let ((?x1096 (* 36 ?x733)))
 (let ((?x677 (* s00 s00)))
 (let ((?x2666 (* (- 19) ?x677)))
 (let ((?x608 (* r00 x00)))
 (let ((?x2741 (* (- 90) ?x608)))
 (let ((?x512 (* s00 r00)))
 (let ((?x2446 (* 18 ?x512)))
 (let ((?x2611 (* (- 108) ?x385)))
 (let ((?x2835 (* (- 72) x00)))
 (let ((?x1445 (* (- 36) r00)))
 (let ((?x2879 (* 57 s00)))
 (let ((?x1764 (+ ?x2879 ?x1445 ?x2835 ?x2611 (* 12 (* s00 r!2 r!2)) ?x2446 ?x2741 (* 90 (* r00 x!0)) ?x2666 ?x1096 ?x796 ?x902 ?x1666 ?x1157 ?x1664 ?x1663 ?x886 ?x986 (* (- 36) (* r00 x00 r!2)) (* 2 (* s!1 s!1 r!2)) (* 36 (* r00 r00 x!0)) ?x4120 (* (- 6) (* s00 x!0)) (* (- 216) (* r00 r00 r!2)) (* 12 (* r00 s!1 r!2)) ?x1665 (* (- 72) (* r00 r00 s!1)) (* (- 42) (* s!1 r!2)) (* 4 (* r00 s!1 s!1)) (* 2 (* s00 s!1 r!2)) (* (- 4) (* s00 s00 r!2)) ?x907 (* (- 90) (* x00 r!2)) (* (- 6) (* x00 s!1)) (* (- 90) (* r00 s!1)) (* (- 2) (* s00 r00 s!1)) (* 36 (* r00 r!2 x!0)) (* 144 (* r00 r!2 r!2)) (* 20 (* s00 s!1)) (* 24 (* s!1 r!2 r!2)) (* 114 (* s00 r!2)) (* (- 12) (* s00 r00 r!2)))))
 (let ((?x3943 (* x!0 x!0)))
 (let ((?x1171 (* 18 ?x3943)))
 (let ((?x3936 (* s!1 s!1 s!1)))
 (let ((?x1170 (* 6 ?x3936)))
 (let ((?x3893 (* 90 (* r!2 r!2 x!0 x!0))))
 (let ((?x3891 (* 72 (* r!2 x!0 x!0))))
 (let ((?x1508 (* (- 12) (* s!1 s!1 x!0))))
 (let ((?x1810 (* (- 648) ?x3126)))
 (let ((?x2019 (* (- 216) (* r!2 r!2 r!2 r!2))))
 (let ((?x1827 (* 6 (* s!1 x!0 x!0))))
 (let ((?x2578 (* (- 1) x!0)))
 (let ((?x1167 (* (- 36) ?x1437)))
 (let ((?x4132 (* 36 (* r!2 r!2 r!2 x!0 x!0))))
 (let ((?x2534 (* (- 324) r!2)))
 (let ((?x3833 (* (- 35) s!1)))
 (let ((?x3294 (* 12 ?x957)))
 (let ((?x2581 (* (- 702) ?x926)))
 (let ((?x3628 (+ (- 54) ?x2581 ?x3294 ?x3833 ?x2534 (* 60 (* s!1 s!1 r!2)) ?x4132 ?x1167 (* (- 12) (* s!1 s!1 r!2 r!2 x!0)) (* (- 24) (* s!1 s!1 r!2 x!0)) ?x2578 ?x1827 (* 36 (* s!1 s!1 r!2 r!2 r!2)) (* (- 72) (* s!1 r!2 r!2 r!2)) (* 12 (* s!1 r!2 x!0 x!0)) (* 6 (* s!1 r!2 r!2 x!0 x!0)) (* 84 (* s!1 s!1 r!2 r!2)) (* (- 144) (* s!1 r!2)) (* (- 72) (* s!1 r!2 r!2 r!2 x!0)) (* (- 180) (* s!1 r!2 r!2 x!0)) (* (- 144) (* s!1 r!2 x!0)) ?x2019 ?x1810 (* 12 (* s!1 s!1 s!1 r!2)) (* 6 (* s!1 s!1 s!1 r!2 r!2)) ?x1508 (* (- 180) (* s!1 r!2 r!2)) ?x3891 ?x3893 ?x1170 ?x1171)))
 (let (($x2171 (= (* ?x3628 ?x1764) 0)))
 (let (($x3642 (not $x2171)))
 (let ((?x3944 (* (- 108) ?x3943)))
 (let ((?x3942 (* 4 ?x3936)))
 (let ((?x3964 (* 864 ?x3126)))
 (let ((?x2395 (* 324 x!0)))
 (let ((?x1456 (* x00 x00)))
 (let ((?x1486 (* (- 108) ?x1456)))
 (let ((?x637 (* 324 ?x1437)))
 (let ((?x1294 (* s00 s00 s00)))
 (let ((?x1485 (* (- 16) ?x1294)))
 (let ((?x1182 (* s00 r00 r00 r00)))
 (let ((?x1481 (* (- 216) ?x1182)))
 (let ((?x1008 (* r00 r00 r00 x00)))
 (let ((?x1009 (* 432 ?x1008)))
 (let ((?x2150 (* 648 ?x971)))
 (let ((?x2738 (* 162 r!2)))
 (let ((?x3057 (* (- 297) s!1)))
 (let ((?x2141 (* (- 195) ?x957)))
 (let ((?x2396 (* 756 ?x926)))
 (let ((?x1239 (* 108 ?x901)))
 (let ((?x865 (* s00 s00 r00 r00)))
 (let ((?x866 (* 36 ?x865)))
 (let ((?x1136 (* 108 ?x778)))
 (let ((?x1475 (* (- 51) ?x677)))
 (let ((?x1472 (* (- 108) ?x608)))
 (let ((?x604 (* s00 r00 x00)))
 (let ((?x1471 (* (- 216) ?x604)))
 (let ((?x555 (* r00 r00 r00)))
 (let ((?x4169 (* 648 ?x555)))
 (let ((?x2041 (* (- 270) ?x512)))
 (let ((?x1997 (* (- 432) ?x385)))
 (let ((?x4163 (* (- 324) x00)))
 (let ((?x1986 (* (- 162) r00)))
 (let ((?x4162 (* 297 s00)))
 (let ((?x4083 (+ ?x4162 ?x1986 ?x4163 ?x1997 (* 432 (* s00 r!2 r!2)) ?x2041 ?x4169 ?x1471 ?x1472 (* 108 (* r00 x!0)) ?x1475 ?x1096 ?x1136 ?x866 ?x1239 ?x2396 ?x2141 ?x3057 ?x2738 ?x2150 ?x1009 (* 72 (* s!1 s!1 r!2)) ?x1481 ?x1485 ?x637 ?x1486 (* (- 108) (* s00 x!0)) (* (- 1512) (* r00 r00 r!2)) ?x2395 (* (- 252) (* r00 r00 s!1)) (* (- 396) (* s!1 r!2)) (* 144 (* s00 s!1 r!2)) ?x3964 (* (- 648) (* x00 r!2)) (* (- 324) (* x00 s!1)) (* (- 162) (* r00 s!1)) (* (- 324) (* s00 r00 s!1)) (* 246 (* s00 s!1)) (* 12 (* s00 s!1 s!1)) (* 432 (* s!1 r!2 r!2)) (* 648 (* r00 r00 r00 s!1)) (* (- 432) (* r00 r00 s!1 r!2)) (* 1296 (* r00 r00 r00 r!2)) (* (- 324) (* r00 r!2)) (* (- 1296) (* r00 r00 r!2 r!2)) ?x3942 ?x3944 (* 216 (* s00 r00 x!0)) (* (- 36) (* r00 r00 s!1 s!1)) (* 216 (* x00 x!0)) (* (- 432) (* r00 r00 r00 x!0)) (* 828 (* s00 r!2)) (* (- 648) (* s00 r00 r!2)))))
 (let (($x2092 (= ?x4083 0)))
 (let (($x3300 (not $x2092)))
 (let (($x2038 (= ?x1764 0)))
 (let (($x3372 (not $x2038)))
 (let ((?x3815 (* 18 x!0)))
 (let ((?x3390 (* 18 ?x971)))
 (let ((?x2847 (* 9 r!2)))
 (let ((?x2634 (* (- 12) s!1)))
 (let ((?x958 (* 2 ?x957)))
 (let ((?x823 (* 18 ?x926)))
 (let ((?x734 (* 6 ?x733)))
 (let ((?x690 (* (- 4) ?x677)))
 (let ((?x622 (* (- 18) ?x608)))
 (let ((?x1253 (* 3 ?x512)))
 (let ((?x1415 (* (- 18) ?x385)))
 (let ((?x1413 (* (- 18) x00)))
 (let ((?x1412 (* (- 9) r00)))
 (let ((?x1411 (* 12 s00)))
 (let ((?x2915 (+ ?x1411 ?x1412 ?x1413 ?x1415 ?x1253 ?x622 (* 18 (* r00 x!0)) ?x690 ?x734 ?x823 ?x958 ?x2634 ?x2847 ?x3390 (* (- 36) (* r00 r00 r!2)) (* 6 (* r00 s!1 r!2)) ?x3815 (* (- 6) (* r00 r00 s!1)) (* (- 3) (* s!1 r!2)) (* (- 18) (* x00 r!2)) (* (- 21) (* r00 s!1)) (* 36 (* r00 r!2 r!2)) (* 2 (* s00 s!1)) (* 21 (* s00 r!2)) (* (- 6) (* s00 r00 r!2)))))
 (let (($x2926 (= ?x2915 0)))
 (let (($x3290 (not $x2926)))
 (let ((?x4067 (* s00 r!2)))
 (let ((?x2147 (* 4 ?x4067)))
 (let ((?x2385 (* s!1 r!2)))
 (let ((?x2823 (* 2 ?x2385)))
 (let ((?x3076 (* 6 x!0)))
 (let ((?x1616 (* r00 r00 r!2)))
 (let ((?x1386 (* (- 12) ?x1616)))
 (let ((?x3619 (* 3 r!2)))
 (let ((?x1824 (* (- 7) s!1)))
 (let ((?x1825 (* 12 ?x926)))
 (let ((?x556 (* 12 ?x555)))
 (let ((?x590 (* (- 6) ?x512)))
 (let ((?x2083 (* (- 12) ?x385)))
 (let ((?x587 (* (- 6) x00)))
 (let ((?x586 (* (- 3) r00)))
 (let ((?x2391 (* 7 s00)))
 (let ((?x4068 (+ ?x2391 ?x586 ?x587 ?x2083 ?x590 ?x556 ?x1825 ?x1824 ?x3619 ?x1386 ?x3076 ?x2823 ?x2147)))
 (let (($x3338 (= ?x4068 0)))
 (let (($x4066 (not $x3338)))
 (let (($x1082 (not $x2868)))
 (let (($x2416 (or $x1082 $x4066 $x3290 $x3372 $x3300 $x3642)))
 (let ((?x2066 (* r00 r00 s!1)))
 (let ((?x3476 (* 36 ?x2066)))
 (let ((?x3649 (* 108 ?x1456)))
 (let ((?x4152 (* 16 ?x1294)))
 (let ((?x1164 (* (- 432) ?x1008)))
 (let ((?x1301 (* (- 9) s!1)))
 (let ((?x4088 (* (- 108) ?x901)))
 (let ((?x1384 (* (- 36) ?x733)))
 (let ((?x4235 (* 51 ?x677)))
 (let ((?x1890 (* 108 ?x608)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3392 (+ ?x137 (* (- 54) ?x512) (* 216 ?x604) ?x1890 (* (- 108) (* r00 x!0)) ?x4235 ?x1384 (* (- 108) ?x778) (* (- 36) ?x865) ?x4088 (* 15 ?x957) ?x1301 ?x1164 (* 216 ?x1182) ?x4152 (* (- 108) ?x1437) ?x3649 (* 108 (* s00 x!0)) ?x3476 (* 108 (* x00 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 4) ?x3936) (* 108 ?x3943) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* 432 (* r00 r00 r00 x!0)))))
 (let (($x4283 (= ?x3392 0)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x2995 (* (- 6) ?x901)))
 (let ((?x779 (* 2 ?x778)))
 (let ((?x4028 (* 15 ?x677)))
 (let ((?x1949 (* 54 ?x608)))
 (let ((?x3714 (+ ?x137 (* (- 24) ?x512) ?x1949 (* (- 54) (* r00 x!0)) ?x4028 ?x1384 ?x779 ?x2995 (* (- 3) ?x957) ?x1301 (* (- 54) ?x971) ?x974 (* 36 (* r00 x00 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 6) ?x1437) (* 6 (* s00 x!0)) ?x3476 (* 24 ?x2385) (* (- 4) (* r00 s!1 s!1)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* 54 (* x00 r!2)) (* 6 (* x00 s!1)) (* 24 (* r00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 12) (* s00 s!1)) (* (- 24) ?x4067))))
 (let (($x1754 (= ?x3714 0)))
 (let ((?x1457 (* (- 3) s!1)))
 (let ((?x2213 (* (- 6) ?x733)))
 (let ((?x678 (* 4 ?x677)))
 (let ((?x609 (* 18 ?x608)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2870 (+ ?x44 (* (- 9) ?x512) ?x609 (* (- 18) (* r00 x!0)) ?x678 ?x2213 (* (- 2) ?x957) ?x1457 (* (- 18) ?x971) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x2066) (* 9 ?x2385) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* (- 2) (* s00 s!1)) (* (- 9) ?x4067) (* 6 (* s00 r00 r!2)))))
 (let (($x2873 (= ?x2870 0)))
 (let ((?x1361 (+ ?x44 ?x586 ?x587 ?x590 ?x556 ?x1457 ?x3619 ?x1386 ?x3076 ?x2823 ?x2147)))
 (let (($x4079 (= ?x1361 0)))
 (let (($x2172 (and $x2868 $x4079 $x2873 $x1754 $x4283 $x2416)))
 (let ((?x2961 (* 36 (* x!0 r00 r00))))
 (let ((?x4138 (* (- 36) (* r!2 r00 x00))))
 (let ((?x4135 (* r!2 s!1 s00)))
 (let ((?x4081 (* 2 ?x4135)))
 (let ((?x4128 (* (- 4) (* r!2 s00 s00))))
 (let ((?x1061 (* r!2 s!1 s!1)))
 (let ((?x4114 (* 2 ?x1061)))
 (let ((?x1062 (* s!1 s00 r00)))
 (let ((?x1217 (* (- 2) ?x1062)))
 (let ((?x1216 (* s!1 x00)))
 (let ((?x1458 (* (- 6) ?x1216)))
 (let ((?x662 (* 4 (* s!1 s!1 r00))))
 (let ((?x1517 (* x!0 s00)))
 (let ((?x1521 (* (- 6) ?x1517)))
 (let ((?x1510 (* 36 (* r!2 x!0 r00))))
 (let ((?x1044 (+ ?x1663 ?x1664 ?x1665 ?x2879 ?x1445 ?x2835 ?x1666 ?x2611 (* (- 42) (* r!2 s!1)) (* (- 216) (* r!2 r00 r00)) (* 114 (* r!2 s00)) ?x2446 ?x2741 ?x1157 ?x886 (* 12 (* r!2 s!1 r00)) (* (- 72) (* s!1 r00 r00)) ?x1510 ?x2666 (* 90 (* x!0 r00)) ?x1521 ?x1096 (* (- 90) (* r!2 x00)) ?x662 (* 20 (* s!1 s00)) ?x796 (* (- 90) (* s!1 r00)) (* (- 12) (* r!2 s00 r00)) ?x1458 ?x1217 ?x902 ?x4114 ?x4120 ?x4128 ?x986 ?x4081 ?x4138 ?x2961 ?x907 (* 24 (* r!2 r!2 s!1)) (* 12 (* r!2 r!2 s00)) (* 144 (* r!2 r!2 r00)))))
 (let ((?x504 (+ (- 54) ?x2534 ?x3833 ?x2578 ?x2581 (* (- 144) (* r!2 s!1)) ?x3294 (* 60 ?x1061) ?x1167 ?x1170 ?x1171 (* (- 72) (* r!2 r!2 r!2 s!1 x!0)) (* (- 180) (* r!2 r!2 s!1 x!0)) ?x4132 (* 12 (* r!2 s!1 s!1 s!1)) (* 6 (* r!2 r!2 s!1 s!1 s!1)) ?x1508 (* (- 24) (* r!2 s!1 s!1 x!0)) (* (- 12) (* r!2 r!2 s!1 s!1 x!0)) (* 36 (* r!2 r!2 r!2 s!1 s!1)) ?x3891 ?x3893 (* (- 144) (* r!2 s!1 x!0)) ?x1810 (* (- 180) (* r!2 r!2 s!1)) ?x1827 (* 12 (* r!2 s!1 x!0 x!0)) (* 6 (* r!2 r!2 s!1 x!0 x!0)) (* 84 (* r!2 r!2 s!1 s!1)) ?x2019 (* (- 72) (* r!2 r!2 r!2 s!1)))))
 (let ((?x716 (* 216 (* x!0 x00))))
 (let ((?x741 (* (- 36) (* s!1 s!1 r00 r00))))
 (let ((?x737 (* 216 (* x!0 s00 r00))))
 (let ((?x715 (* (- 432) (* x!0 r00 r00 r00))))
 (let ((?x3946 (* 12 (* s!1 s!1 s00))))
 (let ((?x1016 (* (- 108) ?x1517)))
 (let ((?x3785 (* x!0 r00)))
 (let ((?x2951 (* 108 ?x3785)))
 (let ((?x1158 (+ ?x2738 ?x3057 ?x2395 ?x4162 ?x1986 ?x4163 ?x2396 ?x1997 (* (- 396) (* r!2 s!1)) (* (- 1512) (* r!2 r00 r00)) (* 828 (* r!2 s00)) ?x2041 ?x4169 ?x1471 ?x1472 ?x2141 ?x2150 (* (- 252) (* s!1 r00 r00)) ?x1475 ?x2951 ?x1016 ?x1096 (* (- 648) (* r!2 x00)) (* 648 (* s!1 r00 r00 r00)) (* 246 (* s!1 s00)) ?x1136 (* (- 162) (* s!1 r00)) (* (- 648) (* r!2 s00 r00)) (* (- 324) ?x1216) ?x866 (* (- 324) ?x1062) ?x1239 (* 72 ?x1061) ?x637 ?x3942 ?x3944 ?x1009 (* 144 ?x4135) ?x3946 ?x1481 ?x715 ?x737 ?x741 ?x1485 ?x716 ?x1486 (* (- 432) (* r!2 s!1 r00 r00)) (* (- 324) (* r!2 r00)) (* (- 1296) (* r!2 r!2 r00 r00)) (* 1296 (* r!2 r00 r00 r00)) ?x3964 (* 432 (* r!2 r!2 s!1)) (* 432 (* r!2 r!2 s00)))))
 (let ((?x4259 (* r!2 s00 r00)))
 (let ((?x4271 (* (- 6) ?x4259)))
 (let ((?x4245 (* s!1 s00)))
 (let ((?x3764 (* 2 ?x4245)))
 (let ((?x3754 (* r!2 x00)))
 (let ((?x4029 (* (- 18) ?x3754)))
 (let ((?x3750 (* 18 ?x3785)))
 (let ((?x2734 (* s!1 r00 r00)))
 (let ((?x3327 (* (- 6) ?x2734)))
 (let ((?x2723 (* r!2 s!1 r00)))
 (let ((?x3491 (* 6 ?x2723)))
 (let ((?x1129 (+ ?x2847 ?x2634 ?x3815 ?x1411 ?x1412 ?x1413 ?x823 ?x1415 (* (- 3) (* r!2 s!1)) (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1253 ?x622 ?x958 ?x3390 ?x3491 ?x3327 ?x690 ?x3750 ?x734 ?x4029 ?x3764 (* (- 21) (* s!1 r00)) ?x4271 (* 36 (* r!2 r!2 r00)))))
 (let ((?x4046 (* r!2 s00)))
 (let ((?x1388 (* 4 ?x4046)))
 (let ((?x4260 (* r!2 r00 r00)))
 (let ((?x3786 (* (- 12) ?x4260)))
 (let ((?x3087 (* r!2 s!1)))
 (let ((?x3776 (* 2 ?x3087)))
 (let ((?x3655 (+ ?x3619 ?x1824 ?x3076 ?x2391 ?x586 ?x587 ?x1825 ?x2083 ?x3776 ?x3786 ?x1388 ?x590 ?x556)))
 (let (($x1940 (= (+ s!1 (* (- 1) s00) (* (- 3) ?x926) (* 3 ?x385)) 0)))
 (let (($x1525 (or (not $x1940) (not (= ?x3655 0)) (not (= ?x1129 0)) (not (= ?x1044 0)) (not (= ?x1158 0)) (not (= (* ?x504 ?x1044) 0)))))
 (let ((?x1686 (* (- 36) ?x2734)))
 (let ((?x614 (* 54 ?x512)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x671 (* 9 s!1)))
 (let ((?x3996 (+ ?x671 ?x1083 ?x614 ?x1471 ?x1472 (* (- 15) ?x957) ?x1686 ?x1475 ?x2951 ?x1016 ?x1096 (* 216 (* s!1 r00 r00 r00)) (* 66 ?x4245) ?x1136 (* (- 54) (* s!1 r00)) (* (- 108) ?x1216) ?x866 (* (- 108) ?x1062) ?x1239 (* 108 ?x1437) ?x3942 ?x3944 ?x1009 ?x3946 ?x1481 ?x715 ?x737 ?x741 ?x1485 ?x716 ?x1486)))
 (let ((?x1012 (* (- 15) ?x677)))
 (let ((?x645 (* (- 54) ?x608)))
 (let ((?x660 (* 24 ?x512)))
 (let ((?x2953 (+ ?x671 ?x1083 (* (- 24) ?x3087) (* 24 ?x4046) ?x660 ?x645 (* 3 ?x957) (* 54 ?x971) ?x1686 ?x1510 ?x1012 (* 54 ?x3785) ?x1521 ?x1096 (* (- 54) ?x3754) ?x662 (* 12 ?x4245) ?x796 (* (- 24) (* s!1 r00)) ?x1458 ?x1217 ?x902 ?x4114 ?x4120 ?x4128 ?x986 ?x4081 ?x4138 ?x2961)))
 (let ((?x627 (* 9 ?x512)))
 (let ((?x464 (* (- 3) s00)))
 (let ((?x4280 (+ (* 3 s!1) ?x464 (* (- 9) ?x3087) (* 9 ?x4046) ?x627 ?x622 ?x958 ?x3390 ?x3491 ?x3327 ?x690 ?x3750 ?x734 ?x4029 ?x3764 (* (- 9) (* s!1 r00)) ?x4271)))
 (let (($x1394 (= (+ ?x3619 ?x1457 ?x3076 ?x44 ?x586 ?x587 ?x3776 ?x3786 ?x1388 ?x590 ?x556) 0)))
 (let (($x1562 (and $x1940 $x1394 (= ?x4280 0) (= ?x2953 0) (= ?x3996 0) $x1525)))
 (let (($x748 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1169 (* 36 (* x r00 r00))))
 (let ((?x1037 (* r r00 x00)))
 (let ((?x1050 (* (- 36) ?x1037)))
 (let ((?x1025 (* r s s00)))
 (let ((?x1026 (* 2 ?x1025)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x921 (* r s00 s00)))
 (let ((?x934 (* (- 4) ?x921)))
 (let ((?x909 (* s x)))
 (let ((?x910 (* 6 ?x909)))
 (let ((?x905 (* r s s)))
 (let ((?x906 (* 2 ?x905)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x875 (* s s00 r00)))
 (let ((?x888 (* (- 2) ?x875)))
 (let ((?x824 (* s x00)))
 (let ((?x851 (* (- 6) ?x824)))
 (let ((?x812 (* r s00 r00)))
 (let ((?x2449 (* (- 12) ?x812)))
 (let ((?x778 (* s00 s00 r00)))
 (let ((?x796 (* (- 2) ?x778)))
 (let ((?x774 (* s s00)))
 (let ((?x2702 (* 20 ?x774)))
 (let ((?x751 (* 4 (* s s r00))))
 (let ((?x745 (* r x00)))
 (let ((?x2836 (* (- 90) ?x745)))
 (let ((?x733 (* s00 r00 r00)))
 (let ((?x1096 (* 36 ?x733)))
 (let ((?x707 (* x s00)))
 (let ((?x722 (* (- 6) ?x707)))
 (let ((?x677 (* s00 s00)))
 (let ((?x2666 (* (- 19) ?x677)))
 (let ((?x655 (* 36 (* r x r00))))
 (let ((?x608 (* r00 x00)))
 (let ((?x2741 (* (- 90) ?x608)))
 (let ((?x512 (* s00 r00)))
 (let ((?x2446 (* 18 ?x512)))
 (let ((?x435 (* r r00 r00)))
 (let ((?x2619 (* (- 216) ?x435)))
 (let ((?x385 (* r00 r00)))
 (let ((?x2611 (* (- 108) ?x385)))
 (let ((?x2835 (* (- 72) x00)))
 (let ((?x1445 (* (- 36) r00)))
 (let ((?x2879 (* 57 s00)))
 (let ((?x2537 (* 72 x)))
 (let ((?x1550 (+ (* 36 r) (* (- 57) s) ?x2537 ?x2879 ?x1445 ?x2835 (* 108 (* r r)) ?x2611 (* (- 42) (* r s)) ?x2619 (* 114 (* r s00)) ?x2446 ?x2741 (* (- 1) (* s s)) (* 90 (* r x)) (* 12 (* r s r00)) (* (- 72) (* s r00 r00)) ?x655 ?x2666 (* 90 (* x r00)) ?x722 ?x1096 ?x2836 ?x751 ?x2702 ?x796 (* (- 90) (* s r00)) ?x2449 ?x851 ?x888 ?x902 ?x906 ?x910 ?x934 ?x986 ?x1026 ?x1050 ?x1169 (* 72 (* r r r)) (* 24 (* r r s)) (* 12 (* r r s00)) (* 144 (* r r r00)))))
 (let ((?x4295 (* (- 72) (* r r r s))))
 (let ((?x4255 (* (- 216) (* r r r r))))
 (let ((?x3604 (* 6 (* r r s x x))))
 (let ((?x3597 (* 6 (* s x x))))
 (let ((?x3357 (* r r s)))
 (let ((?x4294 (* (- 180) ?x3357)))
 (let ((?x3348 (* r r r)))
 (let ((?x4292 (* (- 648) ?x3348)))
 (let ((?x978 (* x x)))
 (let ((?x3648 (* 18 ?x978)))
 (let ((?x3659 (* (- 36) ?x909)))
 (let ((?x631 (* s s)))
 (let ((?x3254 (* 12 ?x631)))
 (let ((?x429 (* r s)))
 (let ((?x3314 (* (- 144) ?x429)))
 (let ((?x373 (* r r)))
 (let ((?x4291 (* (- 702) ?x373)))
 (let ((?x3056 (* (- 1) x)))
 (let ((?x4307 (* (- 35) s)))
 (let ((?x4288 (* (- 324) r)))
 (let ((?x2819 (+ (- 54) ?x4288 ?x4307 ?x3056 ?x4291 ?x3314 ?x3254 (* 60 ?x905) ?x3659 (* 6 (* s s s)) ?x3648 (* (- 72) (* r r r s x)) (* (- 180) (* r r s x)) (* 36 (* r r r x x)) (* 12 (* r s s s)) (* 6 (* r r s s s)) (* (- 12) (* s s x)) (* (- 24) (* r s s x)) (* (- 12) (* r r s s x)) (* 36 (* r r r s s)) (* 72 (* r x x)) (* 90 (* r r x x)) (* (- 144) (* r s x)) ?x4292 ?x4294 ?x3597 (* 12 (* r s x x)) ?x3604 (* 84 (* r r s s)) ?x4255 ?x4295)))
 (let ((?x3549 (* r r s00)))
 (let ((?x4203 (* 432 ?x3549)))
 (let ((?x4199 (* 432 ?x3357)))
 (let ((?x4198 (* 864 ?x3348)))
 (let ((?x4196 (* 1296 (* r r00 r00 r00))))
 (let ((?x1456 (* x00 x00)))
 (let ((?x1486 (* (- 108) ?x1456)))
 (let ((?x1431 (* 216 (* x x00))))
 (let ((?x1294 (* s00 s00 s00)))
 (let ((?x1485 (* (- 16) ?x1294)))
 (let ((?x1483 (* (- 36) (* s s r00 r00))))
 (let ((?x1265 (* 216 (* x s00 r00))))
 (let ((?x1482 (* (- 432) (* x r00 r00 r00))))
 (let ((?x1182 (* s00 r00 r00 r00)))
 (let ((?x1481 (* (- 216) ?x1182)))
 (let ((?x1067 (* 12 (* s s s00))))
 (let ((?x4179 (* 144 ?x1025)))
 (let ((?x1008 (* r00 r00 r00 x00)))
 (let ((?x1009 (* 432 ?x1008)))
 (let ((?x1480 (* (- 108) ?x978)))
 (let ((?x915 (* s s s)))
 (let ((?x917 (* 4 ?x915)))
 (let ((?x4178 (* 72 ?x905)))
 (let ((?x1239 (* 108 ?x901)))
 (let ((?x865 (* s00 s00 r00 r00)))
 (let ((?x866 (* 36 ?x865)))
 (let ((?x4176 (* (- 324) ?x824)))
 (let ((?x1136 (* 108 ?x778)))
 (let ((?x1476 (* (- 108) ?x707)))
 (let ((?x703 (* x r00)))
 (let ((?x1342 (* 108 ?x703)))
 (let ((?x1475 (* (- 51) ?x677)))
 (let ((?x635 (* r x)))
 (let ((?x4172 (* 648 ?x635)))
 (let ((?x1472 (* (- 108) ?x608)))
 (let ((?x604 (* s00 r00 x00)))
 (let ((?x1471 (* (- 216) ?x604)))
 (let ((?x555 (* r00 r00 r00)))
 (let ((?x4169 (* 648 ?x555)))
 (let ((?x2041 (* (- 270) ?x512)))
 (let ((?x485 (* r s00)))
 (let ((?x4168 (* 828 ?x485)))
 (let ((?x1997 (* (- 432) ?x385)))
 (let ((?x4163 (* (- 324) x00)))
 (let ((?x1986 (* (- 162) r00)))
 (let ((?x4162 (* 297 s00)))
 (let ((?x3878 (* 324 x)))
 (let ((?x2091 (+ (* 162 r) (* (- 297) s) ?x3878 ?x4162 ?x1986 ?x4163 (* 756 ?x373) ?x1997 (* (- 396) ?x429) (* (- 1512) ?x435) ?x4168 ?x2041 ?x4169 ?x1471 ?x1472 (* (- 195) ?x631) ?x4172 (* (- 252) (* s r00 r00)) ?x1475 ?x1342 ?x1476 ?x1096 (* (- 648) ?x745) (* 648 (* s r00 r00 r00)) (* 246 ?x774) ?x1136 (* (- 162) (* s r00)) (* (- 648) ?x812) ?x4176 ?x866 (* (- 324) ?x875) ?x1239 ?x4178 (* 324 ?x909) ?x917 ?x1480 ?x1009 ?x4179 ?x1067 ?x1481 ?x1482 ?x1265 ?x1483 ?x1485 ?x1431 ?x1486 (* (- 432) (* r s r00 r00)) (* (- 324) (* r r00)) (* (- 1296) (* r r r00 r00)) ?x4196 ?x4198 ?x4199 ?x4203)))
 (let ((?x825 (* (- 6) ?x812)))
 (let ((?x775 (* 2 ?x774)))
 (let ((?x758 (* (- 18) ?x745)))
 (let ((?x734 (* 6 ?x733)))
 (let ((?x704 (* 18 ?x703)))
 (let ((?x690 (* (- 4) ?x677)))
 (let ((?x651 (* s r00 r00)))
 (let ((?x664 (* (- 6) ?x651)))
 (let ((?x639 (* r s r00)))
 (let ((?x640 (* 6 ?x639)))
 (let ((?x636 (* 18 ?x635)))
 (let ((?x632 (* 2 ?x631)))
 (let ((?x622 (* (- 18) ?x608)))
 (let ((?x1253 (* 3 ?x512)))
 (let ((?x1415 (* (- 18) ?x385)))
 (let ((?x1413 (* (- 18) x00)))
 (let ((?x1412 (* (- 9) r00)))
 (let ((?x1411 (* 12 s00)))
 (let ((?x1254 (+ (* 9 r) (* (- 12) s) (* 18 x) ?x1411 ?x1412 ?x1413 (* 18 ?x373) ?x1415 (* (- 3) ?x429) (* (- 36) ?x435) (* 21 ?x485) ?x1253 ?x622 ?x632 ?x636 ?x640 ?x664 ?x690 ?x704 ?x734 ?x758 ?x775 (* (- 21) (* s r00)) ?x825 (* 36 (* r r r00)))))
 (let ((?x556 (* 12 ?x555)))
 (let ((?x590 (* (- 6) ?x512)))
 (let ((?x486 (* 4 ?x485)))
 (let ((?x589 (* (- 12) ?x435)))
 (let ((?x588 (* 2 ?x429)))
 (let ((?x2083 (* (- 12) ?x385)))
 (let ((?x587 (* (- 6) x00)))
 (let ((?x586 (* (- 3) r00)))
 (let ((?x2391 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x1535 (+ ?x43 (* (- 7) s) ?x56 ?x2391 ?x586 ?x587 (* 12 ?x373) ?x2083 ?x588 ?x589 ?x486 ?x590 ?x556)))
 (let (($x418 (= (+ s (* (- 1) s00) (* (- 3) ?x373) (* 3 ?x385)) 0)))
 (let (($x719 (or (not $x418) (not (= ?x1535 0)) (not (= ?x1254 0)) (not (= ?x1550 0)) (not (= ?x2091 0)) (not (= (* ?x2819 ?x1550) 0)))))
 (let ((?x1306 (* 108 ?x909)))
 (let ((?x756 (* s r00 r00 r00)))
 (let ((?x757 (* 216 ?x756)))
 (let ((?x960 (* (- 36) ?x651)))
 (let ((?x614 (* 54 ?x512)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1487 (+ ?x143 ?x1083 ?x614 ?x1471 ?x1472 (* (- 15) ?x631) ?x960 ?x1475 ?x1342 ?x1476 ?x1096 ?x757 (* 66 ?x774) ?x1136 (* (- 54) (* s r00)) (* (- 108) ?x824) ?x866 (* (- 108) ?x875) ?x1239 ?x1306 ?x917 ?x1480 ?x1009 ?x1067 ?x1481 ?x1482 ?x1265 ?x1483 ?x1485 ?x1431 ?x1486)))
 (let (($x1488 (= ?x1487 0)))
 (let ((?x786 (* s r00)))
 (let ((?x1155 (* (- 24) ?x786)))
 (let ((?x1012 (* (- 15) ?x677)))
 (let ((?x681 (* 54 ?x635)))
 (let ((?x663 (* 3 ?x631)))
 (let ((?x645 (* (- 54) ?x608)))
 (let ((?x660 (* 24 ?x512)))
 (let ((?x1132 (* 24 ?x485)))
 (let ((?x607 (* (- 24) ?x429)))
 (let ((?x1175 (+ ?x143 ?x1083 ?x607 ?x1132 ?x660 ?x645 ?x663 ?x681 ?x960 ?x655 ?x1012 (* 54 ?x703) ?x722 ?x1096 (* (- 54) ?x745) ?x751 (* 12 ?x774) ?x796 ?x1155 ?x851 ?x888 ?x902 ?x906 ?x910 ?x934 ?x986 ?x1026 ?x1050 ?x1169)))
 (let (($x1180 (= ?x1175 0)))
 (let ((?x627 (* 9 ?x512)))
 (let ((?x464 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x831 (+ ?x47 ?x464 (* (- 9) ?x429) (* 9 ?x485) ?x627 ?x622 ?x632 ?x636 ?x640 ?x664 ?x690 ?x704 ?x734 ?x758 ?x775 (* (- 9) ?x786) ?x825)))
 (let (($x838 (= ?x831 0)))
 (let ((?x44 (* 3 s00)))
 (let ((?x585 (* (- 3) s)))
 (let (($x592 (= (+ ?x43 ?x585 ?x56 ?x44 ?x586 ?x587 ?x588 ?x589 ?x486 ?x590 ?x556) 0)))
 (and $x418 $x592 $x838 $x1180 $x1488 $x719))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!40))
 ))
 (let (($x3997 (exists ((r Int) (s Int) (x Int) )(! (let ((?x364 (* (- 1) s)))
 (let ((?x3765 (+ x ?x364)))
 (let ((?x4082 (* r00 r00 ?x3765)))
 (let ((?x4091 (* 36 ?x4082)))
 (let ((?x211 (* 6 r)))
 (let ((?x3209 (+ 3 s ?x211)))
 (let ((?x3185 (* r00 ?x3209)))
 (let ((?x1444 (* (- 24) ?x3185)))
 (let ((?x2849 (+ 1 r)))
 (let ((?x4153 (* s00 ?x2849)))
 (let ((?x1030 (* 24 ?x4153)))
 (let ((?x669 (* 54 r)))
 (let ((?x143 (* 9 s)))
 (let ((?x2057 (* x00 ?x2849)))
 (let ((?x4041 (* (- 54) ?x2057)))
 (let ((?x3218 (* r00 r00 s00)))
 (let ((?x2079 (* 36 ?x3218)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x815 (* r00 ?x3765)))
 (let ((?x1045 (* 54 ?x815)))
 (let ((?x2593 (* r00 x00 ?x2849)))
 (let ((?x4100 (* (- 36) ?x2593)))
 (let ((?x1154 (* s00 ?x2849 ?x3209)))
 (let ((?x1166 (* 2 ?x1154)))
 (let ((?x677 (* s00 s00)))
 (let ((?x1012 (* (- 15) ?x677)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x4034 (* r00 r00 ?x3209)))
 (let ((?x2615 (* (- 36) ?x4034)))
 (let ((?x1854 (* s00 s00 ?x2849)))
 (let ((?x3677 (* (- 4) ?x1854)))
 (let ((?x2735 (* ?x3765 ?x3209)))
 (let ((?x2736 (* 6 ?x2735)))
 (let ((?x911 (* ?x2849 ?x3209 ?x3209)))
 (let ((?x912 (* 2 ?x911)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x1241 (* r00 s00 ?x3209)))
 (let ((?x1655 (* (- 2) ?x1241)))
 (let ((?x1691 (* s00 ?x3209)))
 (let ((?x3258 (* 12 ?x1691)))
 (let ((?x1716 (* x00 ?x3209)))
 (let ((?x3232 (* (- 6) ?x1716)))
 (let ((?x3407 (* r00 s00 s00)))
 (let ((?x2404 (* (- 2) ?x3407)))
 (let ((?x1607 (* r00 ?x3209 ?x3209)))
 (let ((?x1608 (* 4 ?x1607)))
 (let ((?x1682 (* s00 ?x3765)))
 (let ((?x821 (* (- 6) ?x1682)))
 (let ((?x4149 (* ?x2849 ?x3765)))
 (let ((?x4251 (* 54 ?x4149)))
 (let ((?x3845 (* ?x3209 ?x3209)))
 (let ((?x3793 (* 3 ?x3845)))
 (let ((?x3281 (* r00 s00)))
 (let ((?x3321 (* 24 ?x3281)))
 (let ((?x4150 (* r00 ?x2849 ?x3765)))
 (let ((?x4151 (* 36 ?x4150)))
 (let ((?x608 (* r00 x00)))
 (let ((?x645 (* (- 54) ?x608)))
 (let ((?x3221 (* ?x2849 ?x3209)))
 (let ((?x578 (* (- 24) ?x3221)))
 (let ((?x4143 (+ 27 ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x3056 (* (- 1) x)))
 (let ((?x3525 (+ ?x3056 s (* 6 (* ?x2849 ?x2849 ?x3765 ?x3765 ?x3209)) (* (- 6) (* ?x2849 ?x2849 ?x3209 ?x3209)))))
 (let (($x1533 (not (= (* ?x3525 ?x4143) 0))))
 (let ((?x1456 (* x00 x00)))
 (let ((?x3649 (* 108 ?x1456)))
 (let ((?x3712 (* (- 54) r)))
 (let ((?x3826 (* (- 9) s)))
 (let ((?x3787 (* (- 36) ?x3218)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4235 (* 51 ?x677)))
 (let ((?x1010 (* 36 ?x4034)))
 (let ((?x1294 (* s00 s00 s00)))
 (let ((?x4152 (* 16 ?x1294)))
 (let ((?x4088 (* (- 108) ?x901)))
 (let ((?x1153 (* 216 (* r00 r00 r00 s00))))
 (let ((?x4055 (* (- 108) ?x3407)))
 (let ((?x1008 (* r00 r00 r00 x00)))
 (let ((?x1164 (* (- 432) ?x1008)))
 (let ((?x3142 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x3287 (* (- 54) ?x3281)))
 (let ((?x1890 (* 108 ?x608)))
 (let ((?x3116 (* 216 (* r00 s00 x00))))
 (let ((?x3696 (+ ?x3116 ?x1890 ?x3287 (* 15 ?x3845) (* (- 216) (* r00 r00 r00 ?x3209)) ?x3142 (* (- 4) (* ?x3209 ?x3209 ?x3209)) (* 108 (* ?x3765 ?x3765)) ?x1164 (* (- 12) (* s00 ?x3209 ?x3209)) (* 108 ?x1682) ?x4055 ?x1153 (* 108 ?x1716) (* 432 (* r00 r00 r00 ?x3765)) (* (- 66) ?x1691) (* 108 ?x1241) ?x4088 (* (- 216) (* r00 s00 ?x3765)) (* 36 (* r00 r00 ?x3209 ?x3209)) ?x4152 (* (- 108) ?x2735) ?x1010 ?x4235 (* (- 108) ?x815) ?x137 ?x3787 ?x3826 ?x3712 (* 54 ?x3185) (* (- 216) (* x00 ?x3765)) ?x3649)))
 (let (($x3788 (not (= ?x3696 27))))
 (let ((?x4028 (* 15 ?x677)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x2995 (* (- 6) ?x901)))
 (let ((?x3140 (* 2 ?x3407)))
 (let ((?x4044 (* (- 24) ?x3281)))
 (let ((?x1949 (* 54 ?x608)))
 (let ((?x3759 (+ (* 24 ?x3221) ?x1949 (* (- 36) ?x4150) ?x4044 (* (- 3) ?x3845) (* (- 54) ?x4149) (* 6 ?x1682) (* (- 4) ?x1607) ?x3140 (* 6 ?x1716) (* (- 12) ?x1691) (* 2 ?x1241) ?x2995 (* (- 2) ?x911) (* (- 6) ?x2735) (* 4 ?x1854) ?x1010 ?x974 ?x4028 (* (- 2) ?x1154) (* 36 ?x2593) (* (- 54) ?x815) ?x137 ?x3787 (* 54 ?x2057) ?x3826 ?x3712 (* (- 24) ?x4153) (* 24 ?x3185) (* (- 36) ?x4082))))
 (let ((?x585 (* (- 3) s)))
 (let ((?x753 (* (- 6) ?x3218)))
 (let ((?x44 (* 3 s00)))
 (let ((?x678 (* 4 ?x677)))
 (let ((?x762 (* (- 9) ?x3281)))
 (let ((?x609 (* 18 ?x608)))
 (let ((?x2155 (+ (* 9 ?x3221) ?x609 ?x762 (* (- 2) ?x3845) (* (- 18) ?x4149) (* (- 6) (* r00 ?x2849 ?x3209)) (* 6 ?x4034) ?x678 (* (- 18) ?x815) ?x44 ?x753 (* 18 ?x2057) ?x585 (* (- 18) r) (* (- 9) ?x4153) (* (- 2) ?x1691) (* 9 ?x3185) (* 6 (* r00 s00 ?x2849)))))
 (let ((?x555 (* r00 r00 r00)))
 (let ((?x556 (* 12 ?x555)))
 (let ((?x587 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x2237 (* (- 6) ?x3281)))
 (let ((?x586 (* (- 3) r00)))
 (let ((?x2177 (+ (* 2 ?x3221) (* (- 12) (* r00 r00 ?x2849)) (* (- 15) r) ?x44 ?x3826 ?x586 (* 4 ?x4153) ?x2237 ?x56 ?x587 ?x556)))
 (let ((?x385 (* r00 r00)))
 (let ((?x3051 (* (- 3) ?x385)))
 (let (($x2164 (= (+ s00 ?x364 (* (- 6) r) (* 3 (* ?x2849 ?x2849)) ?x3051) 3)))
 (let (($x2255 (not $x2164)))
 (let (($x558 (or $x2255 (not (= ?x2177 6)) (not (= ?x2155 9)) (not (= ?x3759 27)) $x3788 $x1533)))
 (let ((?x1874 (* r00 r00 s)))
 (let ((?x2754 (* 36 ?x1874)))
 (let ((?x3660 (+ ?x3116 ?x1890 ?x3287 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x3142 (* (- 4) (* s s s)) (* 108 (* x x)) ?x1164 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) ?x4055 ?x1153 (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4088 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4152 (* (- 108) (* x s)) ?x2754 ?x4235 (* (- 108) (* r00 x)) ?x137 ?x3787 ?x3826 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3649)))
 (let (($x618 (= ?x3660 0)))
 (let ((?x2956 (* r00 r00 x)))
 (let ((?x3038 (* (- 36) ?x2956)))
 (let ((?x2283 (* r00 s s)))
 (let ((?x3023 (* (- 4) ?x2283)))
 (let ((?x3987 (+ (* 24 (* s r)) ?x1949 (* (- 36) (* r00 x r)) ?x4044 (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) ?x3023 ?x3140 (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2995 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2754 ?x974 ?x4028 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3787 (* 54 (* x00 r)) ?x3826 (* (- 24) (* s00 r)) (* 24 (* r00 s)) ?x3038)))
 (let ((?x1945 (* r00 x)))
 (let ((?x2230 (* (- 18) ?x1945)))
 (let ((?x631 (* s s)))
 (let ((?x2211 (* (- 2) ?x631)))
 (let ((?x2009 (+ (* 9 (* s r)) ?x609 ?x762 ?x2211 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1874) ?x678 ?x2230 ?x44 ?x753 (* 18 (* x00 r)) ?x585 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x43 (* 3 r)))
 (let ((?x2256 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x585 ?x586 (* 4 (* s00 r)) ?x2237 ?x56 ?x587 ?x556)))
 (let (($x3466 (= (+ s00 ?x364 (* 3 (* r r)) ?x3051) 0)))
 (and $x3466 (= ?x2256 0) (= ?x2009 0) (= ?x3987 0) $x618 $x558))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!40))
 ))
 (let ((?x754 (lambda ((r Int) (s Int) (x Int) )(let ((?x1169 (* 36 (* x r00 r00))))
 (let ((?x1037 (* r r00 x00)))
 (let ((?x1050 (* (- 36) ?x1037)))
 (let ((?x1025 (* r s s00)))
 (let ((?x1026 (* 2 ?x1025)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x921 (* r s00 s00)))
 (let ((?x934 (* (- 4) ?x921)))
 (let ((?x909 (* s x)))
 (let ((?x910 (* 6 ?x909)))
 (let ((?x905 (* r s s)))
 (let ((?x906 (* 2 ?x905)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x875 (* s s00 r00)))
 (let ((?x888 (* (- 2) ?x875)))
 (let ((?x824 (* s x00)))
 (let ((?x851 (* (- 6) ?x824)))
 (let ((?x812 (* r s00 r00)))
 (let ((?x2449 (* (- 12) ?x812)))
 (let ((?x778 (* s00 s00 r00)))
 (let ((?x796 (* (- 2) ?x778)))
 (let ((?x774 (* s s00)))
 (let ((?x2702 (* 20 ?x774)))
 (let ((?x751 (* 4 (* s s r00))))
 (let ((?x745 (* r x00)))
 (let ((?x2836 (* (- 90) ?x745)))
 (let ((?x733 (* s00 r00 r00)))
 (let ((?x1096 (* 36 ?x733)))
 (let ((?x707 (* x s00)))
 (let ((?x722 (* (- 6) ?x707)))
 (let ((?x677 (* s00 s00)))
 (let ((?x2666 (* (- 19) ?x677)))
 (let ((?x655 (* 36 (* r x r00))))
 (let ((?x608 (* r00 x00)))
 (let ((?x2741 (* (- 90) ?x608)))
 (let ((?x512 (* s00 r00)))
 (let ((?x2446 (* 18 ?x512)))
 (let ((?x435 (* r r00 r00)))
 (let ((?x2619 (* (- 216) ?x435)))
 (let ((?x385 (* r00 r00)))
 (let ((?x2611 (* (- 108) ?x385)))
 (let ((?x2835 (* (- 72) x00)))
 (let ((?x1445 (* (- 36) r00)))
 (let ((?x2879 (* 57 s00)))
 (let ((?x2537 (* 72 x)))
 (let ((?x1550 (+ (* 36 r) (* (- 57) s) ?x2537 ?x2879 ?x1445 ?x2835 (* 108 (* r r)) ?x2611 (* (- 42) (* r s)) ?x2619 (* 114 (* r s00)) ?x2446 ?x2741 (* (- 1) (* s s)) (* 90 (* r x)) (* 12 (* r s r00)) (* (- 72) (* s r00 r00)) ?x655 ?x2666 (* 90 (* x r00)) ?x722 ?x1096 ?x2836 ?x751 ?x2702 ?x796 (* (- 90) (* s r00)) ?x2449 ?x851 ?x888 ?x902 ?x906 ?x910 ?x934 ?x986 ?x1026 ?x1050 ?x1169 (* 72 (* r r r)) (* 24 (* r r s)) (* 12 (* r r s00)) (* 144 (* r r r00)))))
 (let ((?x4295 (* (- 72) (* r r r s))))
 (let ((?x4255 (* (- 216) (* r r r r))))
 (let ((?x3604 (* 6 (* r r s x x))))
 (let ((?x3597 (* 6 (* s x x))))
 (let ((?x3357 (* r r s)))
 (let ((?x4294 (* (- 180) ?x3357)))
 (let ((?x3348 (* r r r)))
 (let ((?x4292 (* (- 648) ?x3348)))
 (let ((?x978 (* x x)))
 (let ((?x3648 (* 18 ?x978)))
 (let ((?x3659 (* (- 36) ?x909)))
 (let ((?x631 (* s s)))
 (let ((?x3254 (* 12 ?x631)))
 (let ((?x429 (* r s)))
 (let ((?x3314 (* (- 144) ?x429)))
 (let ((?x373 (* r r)))
 (let ((?x4291 (* (- 702) ?x373)))
 (let ((?x3056 (* (- 1) x)))
 (let ((?x4307 (* (- 35) s)))
 (let ((?x4288 (* (- 324) r)))
 (let ((?x2819 (+ (- 54) ?x4288 ?x4307 ?x3056 ?x4291 ?x3314 ?x3254 (* 60 ?x905) ?x3659 (* 6 (* s s s)) ?x3648 (* (- 72) (* r r r s x)) (* (- 180) (* r r s x)) (* 36 (* r r r x x)) (* 12 (* r s s s)) (* 6 (* r r s s s)) (* (- 12) (* s s x)) (* (- 24) (* r s s x)) (* (- 12) (* r r s s x)) (* 36 (* r r r s s)) (* 72 (* r x x)) (* 90 (* r r x x)) (* (- 144) (* r s x)) ?x4292 ?x4294 ?x3597 (* 12 (* r s x x)) ?x3604 (* 84 (* r r s s)) ?x4255 ?x4295)))
 (let ((?x3549 (* r r s00)))
 (let ((?x4203 (* 432 ?x3549)))
 (let ((?x4199 (* 432 ?x3357)))
 (let ((?x4198 (* 864 ?x3348)))
 (let ((?x4196 (* 1296 (* r r00 r00 r00))))
 (let ((?x1456 (* x00 x00)))
 (let ((?x1486 (* (- 108) ?x1456)))
 (let ((?x1431 (* 216 (* x x00))))
 (let ((?x1294 (* s00 s00 s00)))
 (let ((?x1485 (* (- 16) ?x1294)))
 (let ((?x1483 (* (- 36) (* s s r00 r00))))
 (let ((?x1265 (* 216 (* x s00 r00))))
 (let ((?x1482 (* (- 432) (* x r00 r00 r00))))
 (let ((?x1182 (* s00 r00 r00 r00)))
 (let ((?x1481 (* (- 216) ?x1182)))
 (let ((?x1067 (* 12 (* s s s00))))
 (let ((?x4179 (* 144 ?x1025)))
 (let ((?x1008 (* r00 r00 r00 x00)))
 (let ((?x1009 (* 432 ?x1008)))
 (let ((?x1480 (* (- 108) ?x978)))
 (let ((?x915 (* s s s)))
 (let ((?x917 (* 4 ?x915)))
 (let ((?x4178 (* 72 ?x905)))
 (let ((?x1239 (* 108 ?x901)))
 (let ((?x865 (* s00 s00 r00 r00)))
 (let ((?x866 (* 36 ?x865)))
 (let ((?x4176 (* (- 324) ?x824)))
 (let ((?x1136 (* 108 ?x778)))
 (let ((?x1476 (* (- 108) ?x707)))
 (let ((?x703 (* x r00)))
 (let ((?x1342 (* 108 ?x703)))
 (let ((?x1475 (* (- 51) ?x677)))
 (let ((?x635 (* r x)))
 (let ((?x4172 (* 648 ?x635)))
 (let ((?x1472 (* (- 108) ?x608)))
 (let ((?x604 (* s00 r00 x00)))
 (let ((?x1471 (* (- 216) ?x604)))
 (let ((?x555 (* r00 r00 r00)))
 (let ((?x4169 (* 648 ?x555)))
 (let ((?x2041 (* (- 270) ?x512)))
 (let ((?x485 (* r s00)))
 (let ((?x4168 (* 828 ?x485)))
 (let ((?x1997 (* (- 432) ?x385)))
 (let ((?x4163 (* (- 324) x00)))
 (let ((?x1986 (* (- 162) r00)))
 (let ((?x4162 (* 297 s00)))
 (let ((?x3878 (* 324 x)))
 (let ((?x2091 (+ (* 162 r) (* (- 297) s) ?x3878 ?x4162 ?x1986 ?x4163 (* 756 ?x373) ?x1997 (* (- 396) ?x429) (* (- 1512) ?x435) ?x4168 ?x2041 ?x4169 ?x1471 ?x1472 (* (- 195) ?x631) ?x4172 (* (- 252) (* s r00 r00)) ?x1475 ?x1342 ?x1476 ?x1096 (* (- 648) ?x745) (* 648 (* s r00 r00 r00)) (* 246 ?x774) ?x1136 (* (- 162) (* s r00)) (* (- 648) ?x812) ?x4176 ?x866 (* (- 324) ?x875) ?x1239 ?x4178 (* 324 ?x909) ?x917 ?x1480 ?x1009 ?x4179 ?x1067 ?x1481 ?x1482 ?x1265 ?x1483 ?x1485 ?x1431 ?x1486 (* (- 432) (* r s r00 r00)) (* (- 324) (* r r00)) (* (- 1296) (* r r r00 r00)) ?x4196 ?x4198 ?x4199 ?x4203)))
 (let ((?x825 (* (- 6) ?x812)))
 (let ((?x775 (* 2 ?x774)))
 (let ((?x758 (* (- 18) ?x745)))
 (let ((?x734 (* 6 ?x733)))
 (let ((?x704 (* 18 ?x703)))
 (let ((?x690 (* (- 4) ?x677)))
 (let ((?x651 (* s r00 r00)))
 (let ((?x664 (* (- 6) ?x651)))
 (let ((?x639 (* r s r00)))
 (let ((?x640 (* 6 ?x639)))
 (let ((?x636 (* 18 ?x635)))
 (let ((?x632 (* 2 ?x631)))
 (let ((?x622 (* (- 18) ?x608)))
 (let ((?x1253 (* 3 ?x512)))
 (let ((?x1415 (* (- 18) ?x385)))
 (let ((?x1413 (* (- 18) x00)))
 (let ((?x1412 (* (- 9) r00)))
 (let ((?x1411 (* 12 s00)))
 (let ((?x1254 (+ (* 9 r) (* (- 12) s) (* 18 x) ?x1411 ?x1412 ?x1413 (* 18 ?x373) ?x1415 (* (- 3) ?x429) (* (- 36) ?x435) (* 21 ?x485) ?x1253 ?x622 ?x632 ?x636 ?x640 ?x664 ?x690 ?x704 ?x734 ?x758 ?x775 (* (- 21) (* s r00)) ?x825 (* 36 (* r r r00)))))
 (let ((?x556 (* 12 ?x555)))
 (let ((?x590 (* (- 6) ?x512)))
 (let ((?x486 (* 4 ?x485)))
 (let ((?x589 (* (- 12) ?x435)))
 (let ((?x588 (* 2 ?x429)))
 (let ((?x2083 (* (- 12) ?x385)))
 (let ((?x587 (* (- 6) x00)))
 (let ((?x586 (* (- 3) r00)))
 (let ((?x2391 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x1535 (+ ?x43 (* (- 7) s) ?x56 ?x2391 ?x586 ?x587 (* 12 ?x373) ?x2083 ?x588 ?x589 ?x486 ?x590 ?x556)))
 (let (($x418 (= (+ s (* (- 1) s00) (* (- 3) ?x373) (* 3 ?x385)) 0)))
 (let (($x719 (or (not $x418) (not (= ?x1535 0)) (not (= ?x1254 0)) (not (= ?x1550 0)) (not (= ?x2091 0)) (not (= (* ?x2819 ?x1550) 0)))))
 (let ((?x1306 (* 108 ?x909)))
 (let ((?x756 (* s r00 r00 r00)))
 (let ((?x757 (* 216 ?x756)))
 (let ((?x960 (* (- 36) ?x651)))
 (let ((?x614 (* 54 ?x512)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1487 (+ ?x143 ?x1083 ?x614 ?x1471 ?x1472 (* (- 15) ?x631) ?x960 ?x1475 ?x1342 ?x1476 ?x1096 ?x757 (* 66 ?x774) ?x1136 (* (- 54) (* s r00)) (* (- 108) ?x824) ?x866 (* (- 108) ?x875) ?x1239 ?x1306 ?x917 ?x1480 ?x1009 ?x1067 ?x1481 ?x1482 ?x1265 ?x1483 ?x1485 ?x1431 ?x1486)))
 (let (($x1488 (= ?x1487 0)))
 (let ((?x786 (* s r00)))
 (let ((?x1155 (* (- 24) ?x786)))
 (let ((?x1012 (* (- 15) ?x677)))
 (let ((?x681 (* 54 ?x635)))
 (let ((?x663 (* 3 ?x631)))
 (let ((?x645 (* (- 54) ?x608)))
 (let ((?x660 (* 24 ?x512)))
 (let ((?x1132 (* 24 ?x485)))
 (let ((?x607 (* (- 24) ?x429)))
 (let ((?x1175 (+ ?x143 ?x1083 ?x607 ?x1132 ?x660 ?x645 ?x663 ?x681 ?x960 ?x655 ?x1012 (* 54 ?x703) ?x722 ?x1096 (* (- 54) ?x745) ?x751 (* 12 ?x774) ?x796 ?x1155 ?x851 ?x888 ?x902 ?x906 ?x910 ?x934 ?x986 ?x1026 ?x1050 ?x1169)))
 (let (($x1180 (= ?x1175 0)))
 (let ((?x627 (* 9 ?x512)))
 (let ((?x464 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x831 (+ ?x47 ?x464 (* (- 9) ?x429) (* 9 ?x485) ?x627 ?x622 ?x632 ?x636 ?x640 ?x664 ?x690 ?x704 ?x734 ?x758 ?x775 (* (- 9) ?x786) ?x825)))
 (let (($x838 (= ?x831 0)))
 (let ((?x44 (* 3 s00)))
 (let ((?x585 (* (- 3) s)))
 (let (($x592 (= (+ ?x43 ?x585 ?x56 ?x44 ?x586 ?x587 ?x588 ?x589 ?x486 ?x590 ?x556) 0)))
 (let (($x2258 (and $x418 $x592 $x838 $x1180 $x1488 $x719)))
 (let ((?x364 (* (- 1) s)))
 (let ((?x3765 (+ x ?x364)))
 (let ((?x4082 (* r00 r00 ?x3765)))
 (let ((?x4091 (* 36 ?x4082)))
 (let ((?x211 (* 6 r)))
 (let ((?x3209 (+ 3 s ?x211)))
 (let ((?x3185 (* r00 ?x3209)))
 (let ((?x1444 (* (- 24) ?x3185)))
 (let ((?x2849 (+ 1 r)))
 (let ((?x4153 (* s00 ?x2849)))
 (let ((?x1030 (* 24 ?x4153)))
 (let ((?x669 (* 54 r)))
 (let ((?x2057 (* x00 ?x2849)))
 (let ((?x4041 (* (- 54) ?x2057)))
 (let ((?x3218 (* r00 r00 s00)))
 (let ((?x2079 (* 36 ?x3218)))
 (let ((?x815 (* r00 ?x3765)))
 (let ((?x1045 (* 54 ?x815)))
 (let ((?x2593 (* r00 x00 ?x2849)))
 (let ((?x4100 (* (- 36) ?x2593)))
 (let ((?x1154 (* s00 ?x2849 ?x3209)))
 (let ((?x1166 (* 2 ?x1154)))
 (let ((?x4034 (* r00 r00 ?x3209)))
 (let ((?x2615 (* (- 36) ?x4034)))
 (let ((?x1854 (* s00 s00 ?x2849)))
 (let ((?x3677 (* (- 4) ?x1854)))
 (let ((?x2735 (* ?x3765 ?x3209)))
 (let ((?x2736 (* 6 ?x2735)))
 (let ((?x911 (* ?x2849 ?x3209 ?x3209)))
 (let ((?x912 (* 2 ?x911)))
 (let ((?x1241 (* r00 s00 ?x3209)))
 (let ((?x1655 (* (- 2) ?x1241)))
 (let ((?x1691 (* s00 ?x3209)))
 (let ((?x3258 (* 12 ?x1691)))
 (let ((?x1716 (* x00 ?x3209)))
 (let ((?x3232 (* (- 6) ?x1716)))
 (let ((?x3407 (* r00 s00 s00)))
 (let ((?x2404 (* (- 2) ?x3407)))
 (let ((?x1607 (* r00 ?x3209 ?x3209)))
 (let ((?x1608 (* 4 ?x1607)))
 (let ((?x1682 (* s00 ?x3765)))
 (let ((?x821 (* (- 6) ?x1682)))
 (let ((?x4149 (* ?x2849 ?x3765)))
 (let ((?x4251 (* 54 ?x4149)))
 (let ((?x3845 (* ?x3209 ?x3209)))
 (let ((?x3793 (* 3 ?x3845)))
 (let ((?x3281 (* r00 s00)))
 (let ((?x3321 (* 24 ?x3281)))
 (let ((?x4150 (* r00 ?x2849 ?x3765)))
 (let ((?x4151 (* 36 ?x4150)))
 (let ((?x3221 (* ?x2849 ?x3209)))
 (let ((?x578 (* (- 24) ?x3221)))
 (let ((?x4143 (+ 27 ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x3525 (+ ?x3056 s (* 6 (* ?x2849 ?x2849 ?x3765 ?x3765 ?x3209)) (* (- 6) (* ?x2849 ?x2849 ?x3209 ?x3209)))))
 (let (($x1533 (not (= (* ?x3525 ?x4143) 0))))
 (let ((?x3649 (* 108 ?x1456)))
 (let ((?x3712 (* (- 54) r)))
 (let ((?x3826 (* (- 9) s)))
 (let ((?x3787 (* (- 36) ?x3218)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4235 (* 51 ?x677)))
 (let ((?x1010 (* 36 ?x4034)))
 (let ((?x4152 (* 16 ?x1294)))
 (let ((?x4088 (* (- 108) ?x901)))
 (let ((?x1153 (* 216 (* r00 r00 r00 s00))))
 (let ((?x4055 (* (- 108) ?x3407)))
 (let ((?x1164 (* (- 432) ?x1008)))
 (let ((?x3142 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x3287 (* (- 54) ?x3281)))
 (let ((?x1890 (* 108 ?x608)))
 (let ((?x3116 (* 216 (* r00 s00 x00))))
 (let ((?x3696 (+ ?x3116 ?x1890 ?x3287 (* 15 ?x3845) (* (- 216) (* r00 r00 r00 ?x3209)) ?x3142 (* (- 4) (* ?x3209 ?x3209 ?x3209)) (* 108 (* ?x3765 ?x3765)) ?x1164 (* (- 12) (* s00 ?x3209 ?x3209)) (* 108 ?x1682) ?x4055 ?x1153 (* 108 ?x1716) (* 432 (* r00 r00 r00 ?x3765)) (* (- 66) ?x1691) (* 108 ?x1241) ?x4088 (* (- 216) (* r00 s00 ?x3765)) (* 36 (* r00 r00 ?x3209 ?x3209)) ?x4152 (* (- 108) ?x2735) ?x1010 ?x4235 (* (- 108) ?x815) ?x137 ?x3787 ?x3826 ?x3712 (* 54 ?x3185) (* (- 216) (* x00 ?x3765)) ?x3649)))
 (let (($x3788 (not (= ?x3696 27))))
 (let ((?x4028 (* 15 ?x677)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x2995 (* (- 6) ?x901)))
 (let ((?x3140 (* 2 ?x3407)))
 (let ((?x4044 (* (- 24) ?x3281)))
 (let ((?x1949 (* 54 ?x608)))
 (let ((?x3759 (+ (* 24 ?x3221) ?x1949 (* (- 36) ?x4150) ?x4044 (* (- 3) ?x3845) (* (- 54) ?x4149) (* 6 ?x1682) (* (- 4) ?x1607) ?x3140 (* 6 ?x1716) (* (- 12) ?x1691) (* 2 ?x1241) ?x2995 (* (- 2) ?x911) (* (- 6) ?x2735) (* 4 ?x1854) ?x1010 ?x974 ?x4028 (* (- 2) ?x1154) (* 36 ?x2593) (* (- 54) ?x815) ?x137 ?x3787 (* 54 ?x2057) ?x3826 ?x3712 (* (- 24) ?x4153) (* 24 ?x3185) (* (- 36) ?x4082))))
 (let ((?x753 (* (- 6) ?x3218)))
 (let ((?x678 (* 4 ?x677)))
 (let ((?x762 (* (- 9) ?x3281)))
 (let ((?x609 (* 18 ?x608)))
 (let ((?x2155 (+ (* 9 ?x3221) ?x609 ?x762 (* (- 2) ?x3845) (* (- 18) ?x4149) (* (- 6) (* r00 ?x2849 ?x3209)) (* 6 ?x4034) ?x678 (* (- 18) ?x815) ?x44 ?x753 (* 18 ?x2057) ?x585 (* (- 18) r) (* (- 9) ?x4153) (* (- 2) ?x1691) (* 9 ?x3185) (* 6 (* r00 s00 ?x2849)))))
 (let ((?x2237 (* (- 6) ?x3281)))
 (let ((?x2177 (+ (* 2 ?x3221) (* (- 12) (* r00 r00 ?x2849)) (* (- 15) r) ?x44 ?x3826 ?x586 (* 4 ?x4153) ?x2237 ?x56 ?x587 ?x556)))
 (let ((?x3051 (* (- 3) ?x385)))
 (let (($x2164 (= (+ s00 ?x364 (* (- 6) r) (* 3 (* ?x2849 ?x2849)) ?x3051) 3)))
 (let (($x2255 (not $x2164)))
 (let (($x558 (or $x2255 (not (= ?x2177 6)) (not (= ?x2155 9)) (not (= ?x3759 27)) $x3788 $x1533)))
 (let ((?x1874 (* r00 r00 s)))
 (let ((?x2754 (* 36 ?x1874)))
 (let ((?x3660 (+ ?x3116 ?x1890 ?x3287 (* 15 ?x631) (* (- 216) (* r00 r00 r00 s)) ?x3142 (* (- 4) ?x915) (* 108 ?x978) ?x1164 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) ?x4055 ?x1153 (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4088 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4152 (* (- 108) (* x s)) ?x2754 ?x4235 (* (- 108) (* r00 x)) ?x137 ?x3787 ?x3826 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3649)))
 (let (($x618 (= ?x3660 0)))
 (let ((?x2956 (* r00 r00 x)))
 (let ((?x3038 (* (- 36) ?x2956)))
 (let ((?x2283 (* r00 s s)))
 (let ((?x3023 (* (- 4) ?x2283)))
 (let ((?x3987 (+ (* 24 (* s r)) ?x1949 (* (- 36) (* r00 x r)) ?x4044 (* (- 3) ?x631) (* (- 54) (* x r)) (* 6 (* s00 x)) ?x3023 ?x3140 (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2995 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2754 ?x974 ?x4028 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3787 (* 54 (* x00 r)) ?x3826 (* (- 24) (* s00 r)) (* 24 (* r00 s)) ?x3038)))
 (let ((?x1945 (* r00 x)))
 (let ((?x2230 (* (- 18) ?x1945)))
 (let ((?x2211 (* (- 2) ?x631)))
 (let ((?x2009 (+ (* 9 (* s r)) ?x609 ?x762 ?x2211 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1874) ?x678 ?x2230 ?x44 ?x753 (* 18 (* x00 r)) ?x585 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2256 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x585 ?x586 (* 4 (* s00 r)) ?x2237 ?x56 ?x587 ?x556)))
 (let (($x3466 (= (+ s00 ?x364 (* 3 ?x373) ?x3051) 0)))
 (let (($x4016 (and $x3466 (= ?x2256 0) (= ?x2009 0) (= ?x3987 0) $x618 $x558)))
 (rewrite (= $x4016 $x2258)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1095 (exists ((r Int) (s Int) (x Int) )(! (let ((?x364 (* (- 1) s)))
 (let ((?x3765 (+ x ?x364)))
 (let ((?x4082 (* r00 r00 ?x3765)))
 (let ((?x4091 (* 36 ?x4082)))
 (let ((?x211 (* 6 r)))
 (let ((?x3209 (+ 3 s ?x211)))
 (let ((?x3185 (* r00 ?x3209)))
 (let ((?x1444 (* (- 24) ?x3185)))
 (let ((?x2849 (+ 1 r)))
 (let ((?x4153 (* s00 ?x2849)))
 (let ((?x1030 (* 24 ?x4153)))
 (let ((?x669 (* 54 r)))
 (let ((?x143 (* 9 s)))
 (let ((?x2057 (* x00 ?x2849)))
 (let ((?x4041 (* (- 54) ?x2057)))
 (let ((?x3218 (* r00 r00 s00)))
 (let ((?x2079 (* 36 ?x3218)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x815 (* r00 ?x3765)))
 (let ((?x1045 (* 54 ?x815)))
 (let ((?x2593 (* r00 x00 ?x2849)))
 (let ((?x4100 (* (- 36) ?x2593)))
 (let ((?x1154 (* s00 ?x2849 ?x3209)))
 (let ((?x1166 (* 2 ?x1154)))
 (let ((?x677 (* s00 s00)))
 (let ((?x1012 (* (- 15) ?x677)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x4034 (* r00 r00 ?x3209)))
 (let ((?x2615 (* (- 36) ?x4034)))
 (let ((?x1854 (* s00 s00 ?x2849)))
 (let ((?x3677 (* (- 4) ?x1854)))
 (let ((?x2735 (* ?x3765 ?x3209)))
 (let ((?x2736 (* 6 ?x2735)))
 (let ((?x911 (* ?x2849 ?x3209 ?x3209)))
 (let ((?x912 (* 2 ?x911)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x1241 (* r00 s00 ?x3209)))
 (let ((?x1655 (* (- 2) ?x1241)))
 (let ((?x1691 (* s00 ?x3209)))
 (let ((?x3258 (* 12 ?x1691)))
 (let ((?x1716 (* x00 ?x3209)))
 (let ((?x3232 (* (- 6) ?x1716)))
 (let ((?x3407 (* r00 s00 s00)))
 (let ((?x2404 (* (- 2) ?x3407)))
 (let ((?x1607 (* r00 ?x3209 ?x3209)))
 (let ((?x1608 (* 4 ?x1607)))
 (let ((?x1682 (* s00 ?x3765)))
 (let ((?x821 (* (- 6) ?x1682)))
 (let ((?x4149 (* ?x2849 ?x3765)))
 (let ((?x4251 (* 54 ?x4149)))
 (let ((?x3845 (* ?x3209 ?x3209)))
 (let ((?x3793 (* 3 ?x3845)))
 (let ((?x3281 (* r00 s00)))
 (let ((?x3321 (* 24 ?x3281)))
 (let ((?x4150 (* r00 ?x2849 ?x3765)))
 (let ((?x4151 (* 36 ?x4150)))
 (let ((?x608 (* r00 x00)))
 (let ((?x645 (* (- 54) ?x608)))
 (let ((?x3221 (* ?x2849 ?x3209)))
 (let ((?x578 (* (- 24) ?x3221)))
 (let ((?x4143 (+ 27 ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x3056 (* (- 1) x)))
 (let ((?x3525 (+ ?x3056 s (* 6 (* ?x2849 ?x2849 ?x3765 ?x3765 ?x3209)) (* (- 6) (* ?x2849 ?x2849 ?x3209 ?x3209)))))
 (let (($x1533 (not (= (* ?x3525 ?x4143) 0))))
 (let ((?x1456 (* x00 x00)))
 (let ((?x3649 (* 108 ?x1456)))
 (let ((?x3712 (* (- 54) r)))
 (let ((?x3826 (* (- 9) s)))
 (let ((?x3787 (* (- 36) ?x3218)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4235 (* 51 ?x677)))
 (let ((?x1010 (* 36 ?x4034)))
 (let ((?x1294 (* s00 s00 s00)))
 (let ((?x4152 (* 16 ?x1294)))
 (let ((?x4088 (* (- 108) ?x901)))
 (let ((?x1153 (* 216 (* r00 r00 r00 s00))))
 (let ((?x4055 (* (- 108) ?x3407)))
 (let ((?x1008 (* r00 r00 r00 x00)))
 (let ((?x1164 (* (- 432) ?x1008)))
 (let ((?x3142 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x3287 (* (- 54) ?x3281)))
 (let ((?x1890 (* 108 ?x608)))
 (let ((?x3116 (* 216 (* r00 s00 x00))))
 (let ((?x3696 (+ ?x3116 ?x1890 ?x3287 (* 15 ?x3845) (* (- 216) (* r00 r00 r00 ?x3209)) ?x3142 (* (- 4) (* ?x3209 ?x3209 ?x3209)) (* 108 (* ?x3765 ?x3765)) ?x1164 (* (- 12) (* s00 ?x3209 ?x3209)) (* 108 ?x1682) ?x4055 ?x1153 (* 108 ?x1716) (* 432 (* r00 r00 r00 ?x3765)) (* (- 66) ?x1691) (* 108 ?x1241) ?x4088 (* (- 216) (* r00 s00 ?x3765)) (* 36 (* r00 r00 ?x3209 ?x3209)) ?x4152 (* (- 108) ?x2735) ?x1010 ?x4235 (* (- 108) ?x815) ?x137 ?x3787 ?x3826 ?x3712 (* 54 ?x3185) (* (- 216) (* x00 ?x3765)) ?x3649)))
 (let (($x3788 (not (= ?x3696 27))))
 (let ((?x1537 (+ ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x47 (* 3 s)))
 (let ((?x3219 (* 6 ?x3218)))
 (let ((?x464 (* (- 3) s00)))
 (let ((?x690 (* (- 4) ?x677)))
 (let ((?x1844 (* 9 ?x3281)))
 (let ((?x622 (* (- 18) ?x608)))
 (let ((?x400 (+ (* (- 9) ?x3221) ?x622 ?x1844 (* 2 ?x3845) (* 18 ?x4149) (* 6 (* r00 ?x2849 ?x3209)) (* (- 6) ?x4034) ?x690 (* 18 ?x815) ?x464 ?x3219 (* (- 18) ?x2057) ?x47 (* 18 r) (* 9 ?x4153) (* 2 ?x1691) (* (- 9) ?x3185) (* (- 6) (* r00 s00 ?x2849)))))
 (let ((?x555 (* r00 r00 r00)))
 (let ((?x569 (* (- 12) ?x555)))
 (let ((?x59 (* 6 x00)))
 (let ((?x534 (* (- 6) x)))
 (let ((?x3311 (* 6 ?x3281)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1519 (+ (* (- 2) ?x3221) (* 12 (* r00 r00 ?x2849)) (* 15 r) ?x464 ?x143 ?x48 (* (- 4) ?x4153) ?x3311 ?x534 ?x59 ?x569)))
 (let ((?x385 (* r00 r00)))
 (let ((?x3051 (* (- 3) ?x385)))
 (let (($x2164 (= (+ s00 ?x364 (* (- 6) r) (* 3 (* ?x2849 ?x2849)) ?x3051) 3)))
 (let (($x2255 (not $x2164)))
 (let (($x3544 (or $x2255 (not (= ?x1519 (- 6))) (not (= ?x400 (- 9))) (not (= ?x1537 (- 27))) $x3788 $x1533)))
 (let ((?x1874 (* r00 r00 s)))
 (let ((?x2754 (* 36 ?x1874)))
 (let ((?x3660 (+ ?x3116 ?x1890 ?x3287 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x3142 (* (- 4) (* s s s)) (* 108 (* x x)) ?x1164 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) ?x4055 ?x1153 (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4088 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4152 (* (- 108) (* x s)) ?x2754 ?x4235 (* (- 108) (* r00 x)) ?x137 ?x3787 ?x3826 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3649)))
 (let (($x618 (= ?x3660 0)))
 (let ((?x2956 (* r00 r00 x)))
 (let ((?x2957 (* 36 ?x2956)))
 (let ((?x2624 (* (- 36) ?x1874)))
 (let ((?x2283 (* r00 s s)))
 (let ((?x2284 (* 4 ?x2283)))
 (let ((?x631 (* s s)))
 (let ((?x663 (* 3 ?x631)))
 (let ((?x1251 (+ (* (- 24) (* s r)) ?x645 (* 36 (* r00 x r)) ?x3321 ?x663 (* 54 (* x r)) (* (- 6) (* s00 x)) ?x2284 ?x2404 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) ?x2624 ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 ?x2079 (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) ?x2957)))
 (let ((?x632 (* 2 ?x631)))
 (let ((?x562 (+ (* (- 9) (* s r)) ?x622 ?x1844 ?x632 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1874) ?x690 (* 18 (* r00 x)) ?x464 ?x3219 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x3342 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x464 ?x47 ?x48 (* (- 4) (* s00 r)) ?x3311 ?x534 ?x59 ?x569)))
 (let (($x3466 (= (+ s00 ?x364 (* 3 (* r r)) ?x3051) 0)))
 (and $x3466 (= ?x3342 0) (= ?x562 0) (= ?x1251 0) $x618 $x3544)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!40))
 ))
 (let ((?x399 (lambda ((r Int) (s Int) (x Int) )(let ((?x364 (* (- 1) s)))
 (let ((?x3765 (+ x ?x364)))
 (let ((?x4082 (* r00 r00 ?x3765)))
 (let ((?x4091 (* 36 ?x4082)))
 (let ((?x211 (* 6 r)))
 (let ((?x3209 (+ 3 s ?x211)))
 (let ((?x3185 (* r00 ?x3209)))
 (let ((?x1444 (* (- 24) ?x3185)))
 (let ((?x2849 (+ 1 r)))
 (let ((?x4153 (* s00 ?x2849)))
 (let ((?x1030 (* 24 ?x4153)))
 (let ((?x669 (* 54 r)))
 (let ((?x143 (* 9 s)))
 (let ((?x2057 (* x00 ?x2849)))
 (let ((?x4041 (* (- 54) ?x2057)))
 (let ((?x3218 (* r00 r00 s00)))
 (let ((?x2079 (* 36 ?x3218)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x815 (* r00 ?x3765)))
 (let ((?x1045 (* 54 ?x815)))
 (let ((?x2593 (* r00 x00 ?x2849)))
 (let ((?x4100 (* (- 36) ?x2593)))
 (let ((?x1154 (* s00 ?x2849 ?x3209)))
 (let ((?x1166 (* 2 ?x1154)))
 (let ((?x677 (* s00 s00)))
 (let ((?x1012 (* (- 15) ?x677)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x4034 (* r00 r00 ?x3209)))
 (let ((?x2615 (* (- 36) ?x4034)))
 (let ((?x1854 (* s00 s00 ?x2849)))
 (let ((?x3677 (* (- 4) ?x1854)))
 (let ((?x2735 (* ?x3765 ?x3209)))
 (let ((?x2736 (* 6 ?x2735)))
 (let ((?x911 (* ?x2849 ?x3209 ?x3209)))
 (let ((?x912 (* 2 ?x911)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x1241 (* r00 s00 ?x3209)))
 (let ((?x1655 (* (- 2) ?x1241)))
 (let ((?x1691 (* s00 ?x3209)))
 (let ((?x3258 (* 12 ?x1691)))
 (let ((?x1716 (* x00 ?x3209)))
 (let ((?x3232 (* (- 6) ?x1716)))
 (let ((?x3407 (* r00 s00 s00)))
 (let ((?x2404 (* (- 2) ?x3407)))
 (let ((?x1607 (* r00 ?x3209 ?x3209)))
 (let ((?x1608 (* 4 ?x1607)))
 (let ((?x1682 (* s00 ?x3765)))
 (let ((?x821 (* (- 6) ?x1682)))
 (let ((?x4149 (* ?x2849 ?x3765)))
 (let ((?x4251 (* 54 ?x4149)))
 (let ((?x3845 (* ?x3209 ?x3209)))
 (let ((?x3793 (* 3 ?x3845)))
 (let ((?x3281 (* r00 s00)))
 (let ((?x3321 (* 24 ?x3281)))
 (let ((?x4150 (* r00 ?x2849 ?x3765)))
 (let ((?x4151 (* 36 ?x4150)))
 (let ((?x608 (* r00 x00)))
 (let ((?x645 (* (- 54) ?x608)))
 (let ((?x3221 (* ?x2849 ?x3209)))
 (let ((?x578 (* (- 24) ?x3221)))
 (let ((?x4143 (+ 27 ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x3056 (* (- 1) x)))
 (let ((?x3525 (+ ?x3056 s (* 6 (* ?x2849 ?x2849 ?x3765 ?x3765 ?x3209)) (* (- 6) (* ?x2849 ?x2849 ?x3209 ?x3209)))))
 (let (($x1533 (not (= (* ?x3525 ?x4143) 0))))
 (let ((?x1456 (* x00 x00)))
 (let ((?x3649 (* 108 ?x1456)))
 (let ((?x3712 (* (- 54) r)))
 (let ((?x3826 (* (- 9) s)))
 (let ((?x3787 (* (- 36) ?x3218)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4235 (* 51 ?x677)))
 (let ((?x1010 (* 36 ?x4034)))
 (let ((?x1294 (* s00 s00 s00)))
 (let ((?x4152 (* 16 ?x1294)))
 (let ((?x4088 (* (- 108) ?x901)))
 (let ((?x1153 (* 216 (* r00 r00 r00 s00))))
 (let ((?x4055 (* (- 108) ?x3407)))
 (let ((?x1008 (* r00 r00 r00 x00)))
 (let ((?x1164 (* (- 432) ?x1008)))
 (let ((?x3142 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x3287 (* (- 54) ?x3281)))
 (let ((?x1890 (* 108 ?x608)))
 (let ((?x3116 (* 216 (* r00 s00 x00))))
 (let ((?x3696 (+ ?x3116 ?x1890 ?x3287 (* 15 ?x3845) (* (- 216) (* r00 r00 r00 ?x3209)) ?x3142 (* (- 4) (* ?x3209 ?x3209 ?x3209)) (* 108 (* ?x3765 ?x3765)) ?x1164 (* (- 12) (* s00 ?x3209 ?x3209)) (* 108 ?x1682) ?x4055 ?x1153 (* 108 ?x1716) (* 432 (* r00 r00 r00 ?x3765)) (* (- 66) ?x1691) (* 108 ?x1241) ?x4088 (* (- 216) (* r00 s00 ?x3765)) (* 36 (* r00 r00 ?x3209 ?x3209)) ?x4152 (* (- 108) ?x2735) ?x1010 ?x4235 (* (- 108) ?x815) ?x137 ?x3787 ?x3826 ?x3712 (* 54 ?x3185) (* (- 216) (* x00 ?x3765)) ?x3649)))
 (let (($x3788 (not (= ?x3696 27))))
 (let ((?x4028 (* 15 ?x677)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x2995 (* (- 6) ?x901)))
 (let ((?x3140 (* 2 ?x3407)))
 (let ((?x4044 (* (- 24) ?x3281)))
 (let ((?x1949 (* 54 ?x608)))
 (let ((?x3759 (+ (* 24 ?x3221) ?x1949 (* (- 36) ?x4150) ?x4044 (* (- 3) ?x3845) (* (- 54) ?x4149) (* 6 ?x1682) (* (- 4) ?x1607) ?x3140 (* 6 ?x1716) (* (- 12) ?x1691) (* 2 ?x1241) ?x2995 (* (- 2) ?x911) (* (- 6) ?x2735) (* 4 ?x1854) ?x1010 ?x974 ?x4028 (* (- 2) ?x1154) (* 36 ?x2593) (* (- 54) ?x815) ?x137 ?x3787 (* 54 ?x2057) ?x3826 ?x3712 (* (- 24) ?x4153) (* 24 ?x3185) (* (- 36) ?x4082))))
 (let ((?x585 (* (- 3) s)))
 (let ((?x753 (* (- 6) ?x3218)))
 (let ((?x44 (* 3 s00)))
 (let ((?x678 (* 4 ?x677)))
 (let ((?x762 (* (- 9) ?x3281)))
 (let ((?x609 (* 18 ?x608)))
 (let ((?x2155 (+ (* 9 ?x3221) ?x609 ?x762 (* (- 2) ?x3845) (* (- 18) ?x4149) (* (- 6) (* r00 ?x2849 ?x3209)) (* 6 ?x4034) ?x678 (* (- 18) ?x815) ?x44 ?x753 (* 18 ?x2057) ?x585 (* (- 18) r) (* (- 9) ?x4153) (* (- 2) ?x1691) (* 9 ?x3185) (* 6 (* r00 s00 ?x2849)))))
 (let ((?x555 (* r00 r00 r00)))
 (let ((?x556 (* 12 ?x555)))
 (let ((?x587 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x2237 (* (- 6) ?x3281)))
 (let ((?x586 (* (- 3) r00)))
 (let ((?x2177 (+ (* 2 ?x3221) (* (- 12) (* r00 r00 ?x2849)) (* (- 15) r) ?x44 ?x3826 ?x586 (* 4 ?x4153) ?x2237 ?x56 ?x587 ?x556)))
 (let ((?x385 (* r00 r00)))
 (let ((?x3051 (* (- 3) ?x385)))
 (let (($x2164 (= (+ s00 ?x364 (* (- 6) r) (* 3 (* ?x2849 ?x2849)) ?x3051) 3)))
 (let (($x2255 (not $x2164)))
 (let (($x558 (or $x2255 (not (= ?x2177 6)) (not (= ?x2155 9)) (not (= ?x3759 27)) $x3788 $x1533)))
 (let ((?x1874 (* r00 r00 s)))
 (let ((?x2754 (* 36 ?x1874)))
 (let ((?x3660 (+ ?x3116 ?x1890 ?x3287 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x3142 (* (- 4) (* s s s)) (* 108 (* x x)) ?x1164 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) ?x4055 ?x1153 (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4088 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4152 (* (- 108) (* x s)) ?x2754 ?x4235 (* (- 108) (* r00 x)) ?x137 ?x3787 ?x3826 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3649)))
 (let (($x618 (= ?x3660 0)))
 (let ((?x2956 (* r00 r00 x)))
 (let ((?x3038 (* (- 36) ?x2956)))
 (let ((?x2283 (* r00 s s)))
 (let ((?x3023 (* (- 4) ?x2283)))
 (let ((?x3987 (+ (* 24 (* s r)) ?x1949 (* (- 36) (* r00 x r)) ?x4044 (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) ?x3023 ?x3140 (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2995 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2754 ?x974 ?x4028 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3787 (* 54 (* x00 r)) ?x3826 (* (- 24) (* s00 r)) (* 24 (* r00 s)) ?x3038)))
 (let ((?x1945 (* r00 x)))
 (let ((?x2230 (* (- 18) ?x1945)))
 (let ((?x631 (* s s)))
 (let ((?x2211 (* (- 2) ?x631)))
 (let ((?x2009 (+ (* 9 (* s r)) ?x609 ?x762 ?x2211 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1874) ?x678 ?x2230 ?x44 ?x753 (* 18 (* x00 r)) ?x585 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x43 (* 3 r)))
 (let ((?x2256 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x585 ?x586 (* 4 (* s00 r)) ?x2237 ?x56 ?x587 ?x556)))
 (let (($x3466 (= (+ s00 ?x364 (* 3 (* r r)) ?x3051) 0)))
 (let (($x4016 (and $x3466 (= ?x2256 0) (= ?x2009 0) (= ?x3987 0) $x618 $x558)))
 (let ((?x1537 (+ ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x47 (* 3 s)))
 (let ((?x3219 (* 6 ?x3218)))
 (let ((?x464 (* (- 3) s00)))
 (let ((?x690 (* (- 4) ?x677)))
 (let ((?x1844 (* 9 ?x3281)))
 (let ((?x622 (* (- 18) ?x608)))
 (let ((?x400 (+ (* (- 9) ?x3221) ?x622 ?x1844 (* 2 ?x3845) (* 18 ?x4149) (* 6 (* r00 ?x2849 ?x3209)) (* (- 6) ?x4034) ?x690 (* 18 ?x815) ?x464 ?x3219 (* (- 18) ?x2057) ?x47 (* 18 r) (* 9 ?x4153) (* 2 ?x1691) (* (- 9) ?x3185) (* (- 6) (* r00 s00 ?x2849)))))
 (let ((?x569 (* (- 12) ?x555)))
 (let ((?x59 (* 6 x00)))
 (let ((?x534 (* (- 6) x)))
 (let ((?x3311 (* 6 ?x3281)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1519 (+ (* (- 2) ?x3221) (* 12 (* r00 r00 ?x2849)) (* 15 r) ?x464 ?x143 ?x48 (* (- 4) ?x4153) ?x3311 ?x534 ?x59 ?x569)))
 (let (($x3544 (or $x2255 (not (= ?x1519 (- 6))) (not (= ?x400 (- 9))) (not (= ?x1537 (- 27))) $x3788 $x1533)))
 (let ((?x2957 (* 36 ?x2956)))
 (let ((?x2624 (* (- 36) ?x1874)))
 (let ((?x2284 (* 4 ?x2283)))
 (let ((?x663 (* 3 ?x631)))
 (let ((?x1251 (+ (* (- 24) (* s r)) ?x645 (* 36 (* r00 x r)) ?x3321 ?x663 (* 54 (* x r)) (* (- 6) (* s00 x)) ?x2284 ?x2404 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) ?x2624 ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x1945) ?x1083 ?x2079 (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) ?x2957)))
 (let ((?x632 (* 2 ?x631)))
 (let ((?x562 (+ (* (- 9) (* s r)) ?x622 ?x1844 ?x632 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1874) ?x690 (* 18 ?x1945) ?x464 ?x3219 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x3342 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x464 ?x47 ?x48 (* (- 4) (* s00 r)) ?x3311 ?x534 ?x59 ?x569)))
 (let (($x1543 (and $x3466 (= ?x3342 0) (= ?x562 0) (= ?x1251 0) $x618 $x3544)))
 (rewrite (= $x1543 $x4016))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x361 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x353 (+ (* (- 1) (- x s)) (* 6 ?x215 ?x215 ?x212 (- x s) (- x s)))))
 (let ((?x299 (* 9 ?x212)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x126 (* 15 s00 s00)))
 (let ((?x124 (* 36 r00 r00 x00)))
 (let ((?x284 (* 36 r00 r00 ?x212)))
 (let ((?x118 (* 6 s00 x00)))
 (let ((?x110 (* 2 r00 s00 s00)))
 (let ((?x102 (* 24 r00 s00)))
 (let ((?x268 (+ (- (* (- 24) ?x215 ?x212) (* 54 r00 x00)) (* 36 ?x215 r00 (- x s)) ?x102 (* 3 ?x212 ?x212) (* 54 ?x215 (- x s)))))
 (let ((?x272 (+ (- ?x268 (* 6 s00 (- x s))) (* 4 r00 ?x212 ?x212))))
 (let ((?x279 (- (+ (- (- ?x272 ?x110) (* 6 ?x212 x00)) (* 12 ?x212 s00)) (* 2 r00 ?x212 s00))))
 (let ((?x282 (+ ?x279 ?x118 (* 2 ?x215 ?x212 ?x212) (* 6 ?x212 (- x s)))))
 (let ((?x290 (+ (- (- (- (- ?x282 (* 4 ?x215 s00 s00)) ?x284) ?x124) ?x126) (* 2 ?x215 ?x212 s00))))
 (let ((?x294 (+ (- ?x290 (* 36 ?x215 r00 x00)) (* 54 r00 (- x s)))))
 (let ((?x301 (+ (- (+ (- ?x294 ?x137) ?x139) (* 54 ?x215 x00)) ?x299 (* 24 ?x215 s00))))
 (let ((?x305 (+ (- ?x301 (* 24 r00 ?x212)) (* 36 r00 r00 (- x s)))))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x313 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x316 (+ (- ?x313 (* 4 ?x212 ?x212 ?x212)) (* 108 (- x s) (- x s)))))
 (let ((?x321 (+ (- (- ?x316 ?x169) (* 12 ?x212 ?x212 s00)) (* 108 s00 (- x s)))))
 (let ((?x325 (+ (- ?x321 ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 (- x s)))))
 (let ((?x331 (- (+ (- ?x325 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x334 (+ (- ?x331 (* 216 r00 s00 (- x s))) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x339 (- (+ (- ?x334 (* 108 ?x212 (- x s))) ?x284 ?x197) (* 108 r00 (- x s)))))
 (let ((?x346 (- (+ (- (- (+ ?x339 ?x137) ?x139) ?x299) (* 54 r00 ?x212)) (* 216 (- x s) x00))))
 (let ((?x227 (* 3 ?x212)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x244 (+ (- (* (- 9) ?x215 ?x212) (* 18 r00 x00)) ?x70 (* 2 ?x212 ?x212) (* 18 ?x215 (- x s)) (* 6 ?x215 r00 ?x212))))
 (let ((?x249 (+ (- (- ?x244 (* 6 r00 r00 ?x212)) ?x76) (* 18 r00 (- x s)))))
 (let ((?x256 (+ (- (+ (- ?x249 ?x44) ?x82) (* 18 ?x215 x00)) ?x227 (* 9 ?x215 s00) (* 2 ?x212 s00))))
 (let (($x261 (= (- (- ?x256 (* 9 r00 ?x212)) (* 6 ?x215 r00 s00)) 0)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x59 (* 6 x00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x225 (- (+ (* (- 2) ?x215 ?x212) (* 12 ?x215 r00 r00)) (* 3 ?x215))))
 (let ((?x234 (- (+ (- (+ (- ?x225 ?x44) ?x227 ?x48) (* 4 ?x215 s00)) ?x54) (* 6 (- x s)))))
 (let (($x219 (= (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) 0)))
 (let (($x359 (or (not $x219) (not (= (- (+ ?x234 ?x59) ?x61) 0)) (not $x261) (not (= ?x305 0)) (not (= (+ ?x346 ?x208) 0)) (not (= (* ?x305 (- ?x353 (* 6 ?x215 ?x215 ?x212 ?x212))) 0)))))
 (let ((?x143 (* 9 s)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) ?x102 (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) ?x110)))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x127 (- (+ ?x117 ?x118 (* 2 r s s) (* 6 s x)) (* 4 r s00 s00))))
 (let ((?x134 (- (+ (- (- (- ?x127 ?x123) ?x124) ?x126) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) $x93 (= ?x149 0) (= (+ ?x207 ?x208) 0) $x359)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!40))
 ))
 (let ((?x1547 (lambda ((r Int) (s Int) (x Int) )(let ((?x364 (* (- 1) s)))
 (let ((?x3765 (+ x ?x364)))
 (let ((?x4082 (* r00 r00 ?x3765)))
 (let ((?x4091 (* 36 ?x4082)))
 (let ((?x211 (* 6 r)))
 (let ((?x3209 (+ 3 s ?x211)))
 (let ((?x3185 (* r00 ?x3209)))
 (let ((?x1444 (* (- 24) ?x3185)))
 (let ((?x2849 (+ 1 r)))
 (let ((?x4153 (* s00 ?x2849)))
 (let ((?x1030 (* 24 ?x4153)))
 (let ((?x669 (* 54 r)))
 (let ((?x143 (* 9 s)))
 (let ((?x2057 (* x00 ?x2849)))
 (let ((?x4041 (* (- 54) ?x2057)))
 (let ((?x3218 (* r00 r00 s00)))
 (let ((?x2079 (* 36 ?x3218)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x815 (* r00 ?x3765)))
 (let ((?x1045 (* 54 ?x815)))
 (let ((?x2593 (* r00 x00 ?x2849)))
 (let ((?x4100 (* (- 36) ?x2593)))
 (let ((?x1154 (* s00 ?x2849 ?x3209)))
 (let ((?x1166 (* 2 ?x1154)))
 (let ((?x677 (* s00 s00)))
 (let ((?x1012 (* (- 15) ?x677)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x4034 (* r00 r00 ?x3209)))
 (let ((?x2615 (* (- 36) ?x4034)))
 (let ((?x1854 (* s00 s00 ?x2849)))
 (let ((?x3677 (* (- 4) ?x1854)))
 (let ((?x2735 (* ?x3765 ?x3209)))
 (let ((?x2736 (* 6 ?x2735)))
 (let ((?x911 (* ?x2849 ?x3209 ?x3209)))
 (let ((?x912 (* 2 ?x911)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x1241 (* r00 s00 ?x3209)))
 (let ((?x1655 (* (- 2) ?x1241)))
 (let ((?x1691 (* s00 ?x3209)))
 (let ((?x3258 (* 12 ?x1691)))
 (let ((?x1716 (* x00 ?x3209)))
 (let ((?x3232 (* (- 6) ?x1716)))
 (let ((?x3407 (* r00 s00 s00)))
 (let ((?x2404 (* (- 2) ?x3407)))
 (let ((?x1607 (* r00 ?x3209 ?x3209)))
 (let ((?x1608 (* 4 ?x1607)))
 (let ((?x1682 (* s00 ?x3765)))
 (let ((?x821 (* (- 6) ?x1682)))
 (let ((?x4149 (* ?x2849 ?x3765)))
 (let ((?x4251 (* 54 ?x4149)))
 (let ((?x3845 (* ?x3209 ?x3209)))
 (let ((?x3793 (* 3 ?x3845)))
 (let ((?x3281 (* r00 s00)))
 (let ((?x3321 (* 24 ?x3281)))
 (let ((?x4150 (* r00 ?x2849 ?x3765)))
 (let ((?x4151 (* 36 ?x4150)))
 (let ((?x608 (* r00 x00)))
 (let ((?x645 (* (- 54) ?x608)))
 (let ((?x3221 (* ?x2849 ?x3209)))
 (let ((?x578 (* (- 24) ?x3221)))
 (let ((?x4143 (+ 27 ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x3056 (* (- 1) x)))
 (let ((?x3525 (+ ?x3056 s (* 6 (* ?x2849 ?x2849 ?x3765 ?x3765 ?x3209)) (* (- 6) (* ?x2849 ?x2849 ?x3209 ?x3209)))))
 (let (($x1533 (not (= (* ?x3525 ?x4143) 0))))
 (let ((?x1456 (* x00 x00)))
 (let ((?x3649 (* 108 ?x1456)))
 (let ((?x3712 (* (- 54) r)))
 (let ((?x3826 (* (- 9) s)))
 (let ((?x3787 (* (- 36) ?x3218)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4235 (* 51 ?x677)))
 (let ((?x1010 (* 36 ?x4034)))
 (let ((?x1294 (* s00 s00 s00)))
 (let ((?x4152 (* 16 ?x1294)))
 (let ((?x4088 (* (- 108) ?x901)))
 (let ((?x1153 (* 216 (* r00 r00 r00 s00))))
 (let ((?x4055 (* (- 108) ?x3407)))
 (let ((?x1008 (* r00 r00 r00 x00)))
 (let ((?x1164 (* (- 432) ?x1008)))
 (let ((?x3142 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x3287 (* (- 54) ?x3281)))
 (let ((?x1890 (* 108 ?x608)))
 (let ((?x3116 (* 216 (* r00 s00 x00))))
 (let ((?x3696 (+ ?x3116 ?x1890 ?x3287 (* 15 ?x3845) (* (- 216) (* r00 r00 r00 ?x3209)) ?x3142 (* (- 4) (* ?x3209 ?x3209 ?x3209)) (* 108 (* ?x3765 ?x3765)) ?x1164 (* (- 12) (* s00 ?x3209 ?x3209)) (* 108 ?x1682) ?x4055 ?x1153 (* 108 ?x1716) (* 432 (* r00 r00 r00 ?x3765)) (* (- 66) ?x1691) (* 108 ?x1241) ?x4088 (* (- 216) (* r00 s00 ?x3765)) (* 36 (* r00 r00 ?x3209 ?x3209)) ?x4152 (* (- 108) ?x2735) ?x1010 ?x4235 (* (- 108) ?x815) ?x137 ?x3787 ?x3826 ?x3712 (* 54 ?x3185) (* (- 216) (* x00 ?x3765)) ?x3649)))
 (let (($x3788 (not (= ?x3696 27))))
 (let ((?x1537 (+ ?x578 ?x645 ?x4151 ?x3321 ?x3793 ?x4251 ?x821 ?x1608 ?x2404 ?x3232 ?x3258 ?x1655 ?x902 ?x912 ?x2736 ?x3677 ?x2615 ?x986 ?x1012 ?x1166 ?x4100 ?x1045 ?x1083 ?x2079 ?x4041 ?x143 ?x669 ?x1030 ?x1444 ?x4091)))
 (let ((?x47 (* 3 s)))
 (let ((?x3219 (* 6 ?x3218)))
 (let ((?x464 (* (- 3) s00)))
 (let ((?x690 (* (- 4) ?x677)))
 (let ((?x1844 (* 9 ?x3281)))
 (let ((?x622 (* (- 18) ?x608)))
 (let ((?x400 (+ (* (- 9) ?x3221) ?x622 ?x1844 (* 2 ?x3845) (* 18 ?x4149) (* 6 (* r00 ?x2849 ?x3209)) (* (- 6) ?x4034) ?x690 (* 18 ?x815) ?x464 ?x3219 (* (- 18) ?x2057) ?x47 (* 18 r) (* 9 ?x4153) (* 2 ?x1691) (* (- 9) ?x3185) (* (- 6) (* r00 s00 ?x2849)))))
 (let ((?x555 (* r00 r00 r00)))
 (let ((?x569 (* (- 12) ?x555)))
 (let ((?x59 (* 6 x00)))
 (let ((?x534 (* (- 6) x)))
 (let ((?x3311 (* 6 ?x3281)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1519 (+ (* (- 2) ?x3221) (* 12 (* r00 r00 ?x2849)) (* 15 r) ?x464 ?x143 ?x48 (* (- 4) ?x4153) ?x3311 ?x534 ?x59 ?x569)))
 (let ((?x385 (* r00 r00)))
 (let ((?x3051 (* (- 3) ?x385)))
 (let (($x2164 (= (+ s00 ?x364 (* (- 6) r) (* 3 (* ?x2849 ?x2849)) ?x3051) 3)))
 (let (($x2255 (not $x2164)))
 (let (($x3544 (or $x2255 (not (= ?x1519 (- 6))) (not (= ?x400 (- 9))) (not (= ?x1537 (- 27))) $x3788 $x1533)))
 (let ((?x1874 (* r00 r00 s)))
 (let ((?x2754 (* 36 ?x1874)))
 (let ((?x3660 (+ ?x3116 ?x1890 ?x3287 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x3142 (* (- 4) (* s s s)) (* 108 (* x x)) ?x1164 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) ?x4055 ?x1153 (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4088 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4152 (* (- 108) (* x s)) ?x2754 ?x4235 (* (- 108) (* r00 x)) ?x137 ?x3787 ?x3826 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3649)))
 (let (($x618 (= ?x3660 0)))
 (let ((?x2956 (* r00 r00 x)))
 (let ((?x2957 (* 36 ?x2956)))
 (let ((?x2624 (* (- 36) ?x1874)))
 (let ((?x2283 (* r00 s s)))
 (let ((?x2284 (* 4 ?x2283)))
 (let ((?x631 (* s s)))
 (let ((?x663 (* 3 ?x631)))
 (let ((?x1251 (+ (* (- 24) (* s r)) ?x645 (* 36 (* r00 x r)) ?x3321 ?x663 (* 54 (* x r)) (* (- 6) (* s00 x)) ?x2284 ?x2404 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) ?x2624 ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 ?x2079 (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) ?x2957)))
 (let ((?x632 (* 2 ?x631)))
 (let ((?x562 (+ (* (- 9) (* s r)) ?x622 ?x1844 ?x632 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1874) ?x690 (* 18 (* r00 x)) ?x464 ?x3219 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x3342 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x464 ?x47 ?x48 (* (- 4) (* s00 r)) ?x3311 ?x534 ?x59 ?x569)))
 (let (($x3466 (= (+ s00 ?x364 (* 3 (* r r)) ?x3051) 0)))
 (let (($x1543 (and $x3466 (= ?x3342 0) (= ?x562 0) (= ?x1251 0) $x618 $x3544)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x353 (+ (* (- 1) (- x s)) (* 6 ?x215 ?x215 ?x212 (- x s) (- x s)))))
 (let ((?x299 (* 9 ?x212)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x126 (* 15 s00 s00)))
 (let ((?x124 (* 36 r00 r00 x00)))
 (let ((?x284 (* 36 r00 r00 ?x212)))
 (let ((?x118 (* 6 s00 x00)))
 (let ((?x110 (* 2 r00 s00 s00)))
 (let ((?x102 (* 24 r00 s00)))
 (let ((?x268 (+ (- (* (- 24) ?x215 ?x212) (* 54 r00 x00)) (* 36 ?x215 r00 (- x s)) ?x102 (* 3 ?x212 ?x212) (* 54 ?x215 (- x s)))))
 (let ((?x272 (+ (- ?x268 (* 6 s00 (- x s))) (* 4 r00 ?x212 ?x212))))
 (let ((?x279 (- (+ (- (- ?x272 ?x110) (* 6 ?x212 x00)) (* 12 ?x212 s00)) (* 2 r00 ?x212 s00))))
 (let ((?x282 (+ ?x279 ?x118 (* 2 ?x215 ?x212 ?x212) (* 6 ?x212 (- x s)))))
 (let ((?x290 (+ (- (- (- (- ?x282 (* 4 ?x215 s00 s00)) ?x284) ?x124) ?x126) (* 2 ?x215 ?x212 s00))))
 (let ((?x294 (+ (- ?x290 (* 36 ?x215 r00 x00)) (* 54 r00 (- x s)))))
 (let ((?x301 (+ (- (+ (- ?x294 ?x137) ?x139) (* 54 ?x215 x00)) ?x299 (* 24 ?x215 s00))))
 (let ((?x305 (+ (- ?x301 (* 24 r00 ?x212)) (* 36 r00 r00 (- x s)))))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x313 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x316 (+ (- ?x313 (* 4 ?x212 ?x212 ?x212)) (* 108 (- x s) (- x s)))))
 (let ((?x321 (+ (- (- ?x316 ?x169) (* 12 ?x212 ?x212 s00)) (* 108 s00 (- x s)))))
 (let ((?x325 (+ (- ?x321 ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 (- x s)))))
 (let ((?x331 (- (+ (- ?x325 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x334 (+ (- ?x331 (* 216 r00 s00 (- x s))) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x339 (- (+ (- ?x334 (* 108 ?x212 (- x s))) ?x284 ?x197) (* 108 r00 (- x s)))))
 (let ((?x346 (- (+ (- (- (+ ?x339 ?x137) ?x139) ?x299) (* 54 r00 ?x212)) (* 216 (- x s) x00))))
 (let ((?x227 (* 3 ?x212)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x244 (+ (- (* (- 9) ?x215 ?x212) (* 18 r00 x00)) ?x70 (* 2 ?x212 ?x212) (* 18 ?x215 (- x s)) (* 6 ?x215 r00 ?x212))))
 (let ((?x249 (+ (- (- ?x244 (* 6 r00 r00 ?x212)) ?x76) (* 18 r00 (- x s)))))
 (let ((?x256 (+ (- (+ (- ?x249 ?x44) ?x82) (* 18 ?x215 x00)) ?x227 (* 9 ?x215 s00) (* 2 ?x212 s00))))
 (let (($x261 (= (- (- ?x256 (* 9 r00 ?x212)) (* 6 ?x215 r00 s00)) 0)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x225 (- (+ (* (- 2) ?x215 ?x212) (* 12 ?x215 r00 r00)) (* 3 ?x215))))
 (let ((?x234 (- (+ (- (+ (- ?x225 ?x44) ?x227 ?x48) (* 4 ?x215 s00)) ?x54) (* 6 (- x s)))))
 (let (($x219 (= (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) 0)))
 (let (($x359 (or (not $x219) (not (= (- (+ ?x234 ?x59) ?x61) 0)) (not $x261) (not (= ?x305 0)) (not (= (+ ?x346 ?x208) 0)) (not (= (* ?x305 (- ?x353 (* 6 ?x215 ?x215 ?x212 ?x212))) 0)))))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) ?x102 (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) ?x110)))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x127 (- (+ ?x117 ?x118 (* 2 r s s) (* 6 s x)) (* 4 r s00 s00))))
 (let ((?x134 (- (+ (- (- (- ?x127 ?x123) ?x124) ?x126) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x360 (and $x36 (= (- ?x60 ?x61) 0) $x93 (= ?x149 0) (= (+ ?x207 ?x208) 0) $x359)))
 (rewrite (= $x360 $x1543)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x362 (asserted $x361)))
 (let ((@x3681 (mp (mp @x362 (quant-intro (proof-bind ?x1547) (= $x361 $x1095)) $x1095) (rewrite (= $x1095 $x1095)) $x1095)))
 (let ((@x2523 (mp (mp @x3681 (quant-intro (proof-bind ?x399) (= $x1095 $x3997)) $x3997) (quant-intro (proof-bind ?x754) (= $x3997 $x748)) $x748)))
 (let ((@x725 (mp (mp~ @x2523 (sk (~ $x748 $x1562)) $x1562) (rewrite (= $x1562 $x2172)) $x2172)))
 (let ((@x3248 (and-elim @x725 $x2868)))
 (let ((@x4077 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1082 $x1560)) @x3248 $x1560)))
 (let (($x3662 (>= ?x2866 0)))
 (let ((@x3094 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1082 $x3662)) @x3248 $x3662)))
 (let (($x557 (<= ?x1764 0)))
 (let (($x3719 (<= ?x1361 0)))
 (let ((@x3829 (and-elim @x725 $x4079)))
 (let ((@x3343 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4079) $x3719)) @x3829 $x3719)))
 (let (($x3876 (>= ?x1361 0)))
 (let ((@x3194 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4079) $x3876)) @x3829 $x3876)))
 (let (($x2936 (<= ?x2870 0)))
 (let ((@x4264 (and-elim @x725 $x2873)))
 (let ((@x1712 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2873) $x2936)) @x4264 $x2936)))
 (let (($x3894 (>= ?x2870 0)))
 (let ((@x3205 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2873) $x3894)) @x4264 $x3894)))
 (let (($x467 (<= ?x3714 0)))
 (let ((@x4048 (and-elim @x725 $x1754)))
 (let ((@x4157 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1754) $x467)) @x4048 $x467)))
 (let (($x2148 (>= ?x3714 0)))
 (let ((@x2387 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1754) $x2148)) @x4048 $x2148)))
 (let ((@x2805 ((_ th-lemma arith) (hypothesis (not $x557)) @x3094 @x4077 @x2387 @x4157 @x3205 @x1712 @x2387 @x4157 @x3205 @x1712 @x3094 @x4077 @x3194 @x3343 false)))
 (let ((@x2036 (lemma @x2805 $x557)))
 (let (($x3805 (>= ?x1764 0)))
 (let ((@x991 ((_ th-lemma arith) (hypothesis (not $x3805)) @x3094 @x4077 @x2387 @x4157 @x3205 @x1712 @x2387 @x4157 @x3205 @x1712 @x3094 @x4077 @x3194 @x3343 false)))
 (let ((@x3721 (lemma @x991 $x3805)))
 (let (($x4225 (not (<= ?x2915 0))))
 (let (($x2064 (<= ?x4083 0)))
 (let (($x2030 (<= ?x3392 0)))
 (let ((@x4270 (and-elim @x725 $x4283)))
 (let ((@x1668 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4283) $x2030)) @x4270 $x2030)))
 (let (($x365 (>= ?x3392 0)))
 (let ((@x2838 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4283) $x365)) @x4270 $x365)))
 (let ((@x1523 ((_ th-lemma arith) (hypothesis (not $x2064)) @x3094 @x4077 @x2838 @x1668 @x3094 @x4077 @x3194 @x3343 @x2387 @x4157 @x3205 @x1712 @x2387 @x4157 @x3205 @x1712 @x3194 @x3343 @x3094 @x4077 false)))
 (let (($x2060 (>= ?x4083 0)))
 (let ((@x4154 ((_ th-lemma arith) (hypothesis (not $x2060)) @x3094 @x4077 @x2838 @x1668 @x3094 @x4077 @x3194 @x3343 @x2387 @x4157 @x3205 @x1712 @x2387 @x4157 @x3205 @x1712 @x3194 @x3343 @x3094 @x4077 false)))
 (let ((@x3064 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2092 (not $x2064) (not $x2060))) (lemma @x4154 $x2060) (lemma @x1523 $x2064) $x2092)))
 (let ((@x797 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2038 (not $x557) (not $x3805))) @x2036 @x3721 $x2038)))
 (let ((@x4234 (unit-resolution (hypothesis $x4066) ((_ th-lemma arith eq-propagate -4 -4 -1 -1) @x3094 @x4077 @x3194 @x3343 $x3338) false)))
 (let ((@x1324 (unit-resolution (and-elim @x725 $x2416) @x3248 (or $x4066 $x3290 $x3372 $x3300 $x3642))))
 (let ((@x687 (unit-resolution (unit-resolution @x1324 (lemma @x4234 $x3338) @x797 (or $x3290 $x3300 $x3642)) @x3064 ((_ th-lemma arith eq-propagate 0 0 0 0) @x3721 @x2036 @x3721 @x2036 $x2171) $x3290)))
 (let (($x2963 (>= ?x2915 0)))
 (let ((@x1261 ((_ th-lemma arith) (hypothesis (not $x2963)) @x3094 @x4077 @x2387 @x4157 @x3205 @x1712 @x3721 @x2036 @x3094 @x4077 false)))
 (let ((@x473 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2926 $x4225 (not $x2963))) (lemma @x1261 $x2963) @x687 $x4225)))
 ((_ th-lemma arith) @x473 @x3094 @x4077 @x2387 @x4157 @x3205 @x1712 @x3721 @x2036 @x3094 @x4077 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 13
 :arith-assert-diseq        8
 :arith-assert-lower        97
 :arith-assert-upper        34
 :arith-branch-var          2
 :arith-conflicts           6
 :arith-eq-adapter          10
 :arith-fixed-eqs           3
 :arith-gcd-tests           31
 :arith-grobner             6
 :arith-ineq-splits         2
 :arith-max-min             2011
 :arith-nonlinear-bounds    80
 :arith-nonlinear-horner    47
 :arith-num-rows            10
 :arith-patches             13
 :arith-patches_succ        10
 :arith-pivots              12
 :arith-pseudo-nonlinear    2
 :arith-row-summations      25
 :arith-tableau-max-columns 163
 :arith-tableau-max-rows    10
 :conflicts                 7
 :decisions                 31
 :del-clause                23
 :final-checks              16
 :max-memory                7.01
 :memory                    3.59
 :mk-bool-var               47
 :mk-clause                 36
 :num-allocs                5601962054.00
 :num-checks                1
 :propagations              51
 :rlimit-count              4530470
 :time                      4.72
 :total-time                4.16)
