unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x345 (* (- 3) c!3)))
 (let ((?x546 (* (- 1) k!2)))
 (let ((?x724 (* 2 n!0)))
 (let ((?x177 (* n!0 k!2)))
 (let ((?x165 (+ ?x177 ?x724 ?x546 ?x345)))
 (let (($x723 (<= ?x165 0)))
 (let (($x166 (= ?x165 0)))
 (let ((?x464 (+ m!1 (* (- 6) n!0))))
 (let (($x447 (= ?x464 6)))
 (let (($x960 (not $x447)))
 (let ((?x952 (* m!1 m!1)))
 (let ((?x954 (* (- 1) ?x952)))
 (let ((?x948 (* 27 c!3)))
 (let ((?x949 (* 32 k!2)))
 (let ((?x403 (* (- 9) n!0)))
 (let ((?x950 (* 5 m!1)))
 (let ((?x402 (* k!2 k!2)))
 (let ((?x509 (* (- 1) ?x402)))
 (let ((?x254 (* 9 (* n!0 c!3))))
 (let ((?x223 (+ (* 9 ?x177) (* (- 2) (* m!1 k!2)) ?x254 ?x509 ?x950 ?x403 ?x949 ?x948 ?x954)))
 (let ((?x541 (* n!0 n!0)))
 (let ((?x308 (* 3 ?x541)))
 (let ((?x307 (* 9 n!0)))
 (let ((?x496 (* (- 1) m!1)))
 (let ((?x940 (* m!1 n!0)))
 (let ((?x964 (* 12 ?x940)))
 (let ((?x898 (+ k!2 c!3)))
 (let ((?x941 (+ 6 m!1)))
 (let ((?x902 (+ 1 n!0)))
 (let ((?x650 (* 37 (* k!2 k!2 k!2))))
 (let ((?x563 (* 36 n!0)))
 (let ((?x161 (* 12 m!1)))
 (let ((?x291 (* m!1 m!1 n!0)))
 (let ((?x310 (+ 36 (* 42 (* n!0 k!2 c!3 c!3)) (* 42 (* k!2 c!3 c!3)) (* 74 (* m!1 k!2 c!3)) (* 7 (* m!1 m!1 k!2 k!2)) (* 84 (* m!1 n!0 k!2 c!3)) ?x291 (* 7 (* m!1 m!1 n!0 k!2 k!2)) (* 14 (* m!1 m!1 k!2 c!3)) (* 7 (* m!1 k!2 c!3 c!3)) (* 14 (* m!1 n!0 k!2 k!2 c!3)) (* 84 (* n!0 k!2 k!2 c!3)) ?x161 (* 32 (* m!1 k!2 k!2)) ?x563 (* (- 5) (* m!1 m!1 c!3)) (* (- 5) (* m!1 m!1 k!2)) (* 7 (* m!1 k!2 k!2 k!2)) ?x650 (* 7 (* m!1 m!1 n!0 c!3 c!3)) (* 42 (* m!1 n!0 k!2 k!2)) (* 14 (* m!1 m!1 n!0 k!2 c!3)) (* 42 (* n!0 k!2 k!2 k!2)) (* 8 (* ?x902 ?x902 ?x941 (+ m!1 k!2) ?x898 ?x898)) (* 79 (* k!2 k!2 c!3)) (* 42 (* m!1 c!3 c!3)) (* 42 (* m!1 n!0 c!3 c!3)) (* 14 (* m!1 k!2 k!2 c!3)) (* 7 (* m!1 n!0 k!2 c!3 c!3)) (* 7 (* m!1 n!0 k!2 k!2 k!2)) (* 7 (* m!1 m!1 c!3 c!3)) ?x964 ?x952)))
 (let (($x654 (or (not (= (* ?x310 (+ 6 ?x496 ?x307 ?x546 ?x308)) 0)) (not (= (+ m!1 ?x403 k!2 (* (- 3) ?x541)) 6)) (not (= ?x223 13)) (not (= (+ ?x177 ?x724 (* (- 3) k!2) ?x345 ?x940) (- 2))) $x960)))
 (let ((?x736 (+ (* 3 n!0) ?x546 ?x308)))
 (let (($x347 (= ?x736 0)))
 (let ((?x433 (* 18 c!3)))
 (let ((?x432 (* 5 k!2)))
 (let ((?x257 (+ ?x254 ?x509 ?x403 ?x432 ?x433)))
 (let (($x261 (= ?x257 4)))
 (let (($x747 (and $x447 $x261 $x166 $x347 $x654)))
 (let ((?x186 (* 8 (* ?x902 ?x902 ?x941 (+ k!2 m!1) (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x300 (+ 36 ?x161 ?x563 (* 42 (* k!2 k!2 m!1 n!0)) (* 42 (* c!3 c!3 m!1)) (* 42 (* c!3 c!3 k!2 n!0)) (* 42 (* c!3 c!3 k!2)) (* 7 (* k!2 k!2 m!1 m!1)) ?x964 (* 84 (* c!3 k!2 m!1 n!0)) ?x952 ?x186 (* 7 (* c!3 c!3 k!2 m!1 n!0)) (* 14 (* c!3 k!2 k!2 m!1 n!0)) (* 7 (* k!2 k!2 k!2 m!1 n!0)) (* 7 (* c!3 c!3 m!1 m!1 n!0)) (* 14 (* c!3 k!2 m!1 m!1 n!0)) (* 7 (* k!2 k!2 m!1 m!1 n!0)) (* 79 (* c!3 k!2 k!2)) ?x650 (* 74 (* c!3 k!2 m!1)) (* 32 (* k!2 k!2 m!1)) (* (- 5) (* c!3 m!1 m!1)) (* (- 5) (* k!2 m!1 m!1)) (* 7 (* c!3 c!3 k!2 m!1)) (* 14 (* c!3 k!2 m!1 m!1)) (* 7 (* k!2 k!2 k!2 m!1)) (* 84 (* c!3 k!2 k!2 n!0)) (* 14 (* c!3 k!2 k!2 m!1)) (* 42 (* k!2 k!2 k!2 n!0)) ?x291 (* 42 (* c!3 c!3 m!1 n!0)) (* 7 (* c!3 c!3 m!1 m!1)))))
 (let ((?x562 (* k!2 n!0)))
 (let ((?x417 (* (- 1) ?x562)))
 (let ((?x193 (* (- 2) n!0)))
 (let ((?x922 (* 3 c!3)))
 (let ((?x545 (* 9 (* c!3 n!0))))
 (let ((?x957 (+ ?x948 ?x949 ?x950 ?x403 ?x509 (* 9 ?x562) ?x545 (* (- 2) (* k!2 m!1)) ?x954)))
 (let (($x239 (or (not (= (+ k!2 m!1 ?x403 (* (- 3) ?x541)) 6)) $x960 (not (= ?x957 13)) (not (= (+ ?x922 (* 3 k!2) ?x193 ?x417 (* (- 1) ?x940)) 2)) (not (= (* ?x300 (+ 6 ?x546 ?x496 ?x307 ?x308)) 0)))))
 (let (($x241 (and $x447 (= (+ ?x433 ?x432 ?x403 ?x509 ?x545) 4) (= (+ ?x922 k!2 ?x193 ?x417) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x541)) 0) $x239)))
 (let (($x506 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x274 (* n n)))
 (let ((?x275 (* 3 ?x274)))
 (let ((?x45 (* 9 n)))
 (let ((?x480 (* (- 1) m)))
 (let ((?x242 (* (- 1) k)))
 (let ((?x897 (* m m n)))
 (let ((?x725 (* (- 5) (* k m m))))
 (let ((?x722 (* (- 5) (* c m m))))
 (let ((?x647 (* 7 (* k k m m n))))
 (let ((?x641 (* 7 (* c c m m n))))
 (let ((?x639 (* 7 (* k k k m n))))
 (let ((?x633 (* 7 (* c c k m n))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x443 (+ 6 m)))
 (let ((?x459 (+ 1 n)))
 (let ((?x495 (* 8 (* ?x459 ?x459 ?x443 ?x74 ?x71 ?x71))))
 (let ((?x490 (* m m)))
 (let ((?x376 (* m n)))
 (let ((?x920 (* 12 ?x376)))
 (let ((?x911 (* 36 n)))
 (let ((?x983 (+ 36 (* 12 m) ?x911 (* 42 (* k k m n)) (* 42 (* c c m)) (* 42 (* c c k n)) (* 42 (* c c k)) (* 7 (* k k m m)) ?x920 (* 84 (* c k m n)) ?x490 ?x495 ?x633 (* 14 (* c k k m n)) ?x639 ?x641 (* 14 (* c k m m n)) ?x647 (* 79 (* c k k)) (* 37 (* k k k)) (* 74 (* c k m)) (* 32 (* k k m)) ?x722 ?x725 (* 7 (* c c k m)) (* 14 (* c k m m)) (* 7 (* k k k m)) (* 84 (* c k k n)) (* 14 (* c k k m)) (* 42 (* k k k n)) ?x897 (* 42 (* c c m n)) (* 7 (* c c m m)))))
 (let ((?x52 (* k n)))
 (let ((?x267 (* (- 1) ?x52)))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x557 (not (= (+ ?x264 (* 3 k) ?x266 ?x267 (* (- 1) ?x376)) 2))))
 (let ((?x164 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x527 (+ (* 27 c) (* 32 k) ?x439 ?x226 ?x227 (* 9 ?x52) ?x164 (* (- 2) (* k m)) (* (- 1) ?x490))))
 (let (($x531 (not (= ?x527 13))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x1030 (or (not (= (+ k m ?x226 (* (- 3) ?x274)) 6)) $x365 $x531 $x557 (not (= (* ?x983 (+ 6 ?x242 ?x480 ?x45 ?x275)) 0)))))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) ?x274)) 0)))
 (let (($x269 (= (+ ?x264 k ?x266 ?x267) 0)))
 (let (($x224 (= (+ (* 18 c) (* 5 k) ?x226 ?x227 ?x164) 4)))
 (and $x147 $x224 $x269 $x305 $x1030))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x890 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x480 (* (- 1) m)))
 (let ((?x242 (* (- 1) k)))
 (let ((?x482 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x514 (not (= (+ ?x482 ?x242 ?x480 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x443 (+ 6 m)))
 (let ((?x459 (+ 1 n)))
 (let ((?x495 (* 8 (* ?x459 ?x459 ?x443 ?x74 ?x71 ?x71))))
 (let ((?x348 (+ (* 7 (* ?x459 ?x443 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x495 (* ?x459 ?x443 ?x443))))
 (let (($x476 (not (= (* ?x348 (+ 3 ?x482 ?x242 ?x480 ?x61)) 0))))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x748 (= (+ ?x264 (* 4 k) (* (- 1) (* ?x459 ?x74)) m ?x266) 2)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x420 (+ ?x37 (* 23 k) (* 9 (* ?x459 ?x71)) ?x439 ?x226 (* (- 1) (* ?x74 ?x74)))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x441 (= (+ (* 3 (* n n)) ?x242 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x147 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x226 ?x227) 4) (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x441 (or $x365 (not (= ?x420 13)) (not $x748) $x476 $x514))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x891 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x274 (* n n)))
 (let ((?x275 (* 3 ?x274)))
 (let ((?x45 (* 9 n)))
 (let ((?x480 (* (- 1) m)))
 (let ((?x242 (* (- 1) k)))
 (let ((?x897 (* m m n)))
 (let ((?x725 (* (- 5) (* k m m))))
 (let ((?x722 (* (- 5) (* c m m))))
 (let ((?x647 (* 7 (* k k m m n))))
 (let ((?x641 (* 7 (* c c m m n))))
 (let ((?x639 (* 7 (* k k k m n))))
 (let ((?x633 (* 7 (* c c k m n))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x443 (+ 6 m)))
 (let ((?x459 (+ 1 n)))
 (let ((?x495 (* 8 (* ?x459 ?x459 ?x443 ?x74 ?x71 ?x71))))
 (let ((?x490 (* m m)))
 (let ((?x376 (* m n)))
 (let ((?x920 (* 12 ?x376)))
 (let ((?x911 (* 36 n)))
 (let ((?x983 (+ 36 (* 12 m) ?x911 (* 42 (* k k m n)) (* 42 (* c c m)) (* 42 (* c c k n)) (* 42 (* c c k)) (* 7 (* k k m m)) ?x920 (* 84 (* c k m n)) ?x490 ?x495 ?x633 (* 14 (* c k k m n)) ?x639 ?x641 (* 14 (* c k m m n)) ?x647 (* 79 (* c k k)) (* 37 (* k k k)) (* 74 (* c k m)) (* 32 (* k k m)) ?x722 ?x725 (* 7 (* c c k m)) (* 14 (* c k m m)) (* 7 (* k k k m)) (* 84 (* c k k n)) (* 14 (* c k k m)) (* 42 (* k k k n)) ?x897 (* 42 (* c c m n)) (* 7 (* c c m m)))))
 (let ((?x52 (* k n)))
 (let ((?x267 (* (- 1) ?x52)))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x557 (not (= (+ ?x264 (* 3 k) ?x266 ?x267 (* (- 1) ?x376)) 2))))
 (let ((?x164 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x527 (+ (* 27 c) (* 32 k) ?x439 ?x226 ?x227 (* 9 ?x52) ?x164 (* (- 2) (* k m)) (* (- 1) ?x490))))
 (let (($x531 (not (= ?x527 13))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x1030 (or (not (= (+ k m ?x226 (* (- 3) ?x274)) 6)) $x365 $x531 $x557 (not (= (* ?x983 (+ 6 ?x242 ?x480 ?x45 ?x275)) 0)))))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) ?x274)) 0)))
 (let (($x269 (= (+ ?x264 k ?x266 ?x267) 0)))
 (let (($x224 (= (+ (* 18 c) (* 5 k) ?x226 ?x227 ?x164) 4)))
 (let (($x209 (and $x147 $x224 $x269 $x305 $x1030)))
 (let (($x514 (not (= (+ (* 3 (* ?x459 ?x459)) ?x242 ?x480 (* 3 n)) (- 3)))))
 (let ((?x348 (+ (* 7 (* ?x459 ?x443 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x495 (* ?x459 ?x443 ?x443))))
 (let ((?x358 (* ?x348 (+ 3 (* 3 (* ?x459 ?x459)) ?x242 ?x480 (* 3 n)))))
 (let (($x476 (not (= ?x358 0))))
 (let (($x748 (= (+ ?x264 (* 4 k) (* (- 1) (* ?x459 ?x74)) m ?x266) 2)))
 (let ((?x37 (* 18 c)))
 (let ((?x420 (+ ?x37 (* 23 k) (* 9 (* ?x459 ?x71)) ?x439 ?x226 (* (- 1) (* ?x74 ?x74)))))
 (let (($x441 (= (+ ?x275 ?x242 (* 3 n)) 0)))
 (let (($x547 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x226 ?x227) 4)))
 (let (($x314 (and $x147 $x547 (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x441 (or $x365 (not (= ?x420 13)) (not $x748) $x476 $x514))))
 (rewrite (= $x314 $x209))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x318 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x61 (* 3 n)))
 (let ((?x480 (* (- 1) m)))
 (let ((?x242 (* (- 1) k)))
 (let ((?x482 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x514 (not (= (+ ?x482 ?x242 ?x480 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x443 (+ 6 m)))
 (let ((?x459 (+ 1 n)))
 (let ((?x495 (* 8 (* ?x459 ?x459 ?x443 ?x74 ?x71 ?x71))))
 (let ((?x348 (+ (* 7 (* ?x459 ?x443 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x495 (* ?x459 ?x443 ?x443))))
 (let (($x476 (not (= (* ?x348 (+ 3 ?x482 ?x242 ?x480 ?x61)) 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x380 (* ?x459 ?x74)))
 (let ((?x340 (* (- 3) c)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x656 (* (- 18) c)))
 (let ((?x701 (+ ?x656 (* (- 23) k) (* (- 9) (* ?x459 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let (($x529 (or (not (= ?x701 (- 13))) $x365 (not (= (+ ?x340 (* (- 4) k) ?x380 ?x480 ?x56) (- 2))) $x476 $x514)))
 (let (($x441 (= (+ (* 3 (* n n)) ?x242 ?x61) 0)))
 (let (($x329 (= (+ ?x656 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x147 $x329 (= (+ ?x340 (* n k) ?x242 ?x56) 0) $x441 $x529))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x322 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x480 (* (- 1) m)))
 (let ((?x242 (* (- 1) k)))
 (let ((?x482 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x514 (not (= (+ ?x482 ?x242 ?x480 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x443 (+ 6 m)))
 (let ((?x459 (+ 1 n)))
 (let ((?x495 (* 8 (* ?x459 ?x459 ?x443 ?x74 ?x71 ?x71))))
 (let ((?x348 (+ (* 7 (* ?x459 ?x443 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x495 (* ?x459 ?x443 ?x443))))
 (let (($x476 (not (= (* ?x348 (+ 3 ?x482 ?x242 ?x480 ?x61)) 0))))
 (let ((?x266 (* (- 2) n)))
 (let ((?x264 (* 3 c)))
 (let (($x748 (= (+ ?x264 (* 4 k) (* (- 1) (* ?x459 ?x74)) m ?x266) 2)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x439 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x420 (+ ?x37 (* 23 k) (* 9 (* ?x459 ?x71)) ?x439 ?x226 (* (- 1) (* ?x74 ?x74)))))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let (($x441 (= (+ (* 3 (* n n)) ?x242 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x227 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x314 (and $x147 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x226 ?x227) 4) (= (+ ?x264 (* (- 1) (* n k)) k ?x266) 0) $x441 (or $x365 (not (= ?x420 13)) (not $x748) $x476 $x514))))
 (let ((?x56 (* 2 n)))
 (let ((?x380 (* ?x459 ?x74)))
 (let ((?x340 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x656 (* (- 18) c)))
 (let ((?x701 (+ ?x656 (* (- 23) k) (* (- 9) (* ?x459 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let (($x529 (or (not (= ?x701 (- 13))) $x365 (not (= (+ ?x340 (* (- 4) k) ?x380 ?x480 ?x56) (- 2))) $x476 $x514)))
 (let (($x329 (= (+ ?x656 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x542 (and $x147 $x329 (= (+ ?x340 (* n k) ?x242 ?x56) 0) $x441 $x529)))
 (rewrite (= $x542 $x314)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x106 (+ (- (* 7 ?x71 ?x71 ?x74 ?x99 ?x66) (* 5 ?x71 ?x74 ?x74)) (* 8 ?x71 ?x71 ?x74 ?x99 ?x66 ?x66) (* ?x99 ?x99 ?x66))))
 (let ((?x95 (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x110 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x95 ?x106) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x110)))))))))))))))) :qid k!38))
 ))
 (let ((?x115 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x61 (* 3 n)))
 (let ((?x480 (* (- 1) m)))
 (let ((?x242 (* (- 1) k)))
 (let ((?x482 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x514 (not (= (+ ?x482 ?x242 ?x480 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x443 (+ 6 m)))
 (let ((?x459 (+ 1 n)))
 (let ((?x495 (* 8 (* ?x459 ?x459 ?x443 ?x74 ?x71 ?x71))))
 (let ((?x348 (+ (* 7 (* ?x459 ?x443 ?x74 ?x71 ?x71)) (* (- 5) (* ?x74 ?x74 ?x71)) ?x495 (* ?x459 ?x443 ?x443))))
 (let (($x476 (not (= (* ?x348 (+ 3 ?x482 ?x242 ?x480 ?x61)) 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x380 (* ?x459 ?x74)))
 (let ((?x340 (* (- 3) c)))
 (let (($x147 (= (+ m (* (- 6) n)) 6)))
 (let (($x365 (not $x147)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x656 (* (- 18) c)))
 (let ((?x701 (+ ?x656 (* (- 23) k) (* (- 9) (* ?x459 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let (($x529 (or (not (= ?x701 (- 13))) $x365 (not (= (+ ?x340 (* (- 4) k) ?x380 ?x480 ?x56) (- 2))) $x476 $x514)))
 (let (($x441 (= (+ (* 3 (* n n)) ?x242 ?x61) 0)))
 (let (($x329 (= (+ ?x656 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x542 (and $x147 $x329 (= (+ ?x340 (* n k) ?x242 ?x56) 0) $x441 $x529)))
 (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x106 (+ (- (* 7 ?x71 ?x71 ?x74 ?x99 ?x66) (* 5 ?x71 ?x74 ?x74)) (* 8 ?x71 ?x71 ?x74 ?x99 ?x66 ?x66) (* ?x99 ?x99 ?x66))))
 (let ((?x95 (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66))))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x110 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x95 ?x106) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x111 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x110)))
 (rewrite (= $x111 $x542)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x113 (asserted $x112)))
 (let ((@x344 (mp (mp @x113 (quant-intro (proof-bind ?x115) (= $x112 $x318)) $x318) (rewrite (= $x318 $x318)) $x318)))
 (let ((@x461 (mp (mp @x344 (quant-intro (proof-bind ?x322) (= $x318 $x890)) $x890) (quant-intro (proof-bind ?x891) (= $x890 $x506)) $x506)))
 (let ((@x212 (mp (mp~ @x461 (sk (~ $x506 $x241)) $x241) (rewrite (= $x241 $x747)) $x747)))
 (let ((@x222 (and-elim @x212 $x166)))
 (let ((@x1051 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x166) $x723)) @x222 $x723)))
 (let (($x167 (>= ?x165 0)))
 (let ((@x517 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x166) $x167)) @x222 $x167)))
 (let ((?x394 (+ ?x177 ?x724 (* (- 3) k!2) ?x345 ?x940)))
 (let (($x405 (<= ?x394 (- 2))))
 (let (($x319 (<= m!1 6)))
 (let (($x493 (>= c!3 0)))
 (let (($x987 (not $x493)))
 (let (($x1139 (>= ?x177 2)))
 (let (($x944 (not $x1139)))
 (let (($x316 (<= k!2 6)))
 (let (($x333 (<= k!2 7)))
 (let ((?x1159 (+ n!0 ?x541)))
 (let (($x1160 (>= ?x1159 3)))
 (let (($x1224 (not $x1160)))
 (let (($x1188 (>= c!3 2)))
 (let (($x1131 (not $x1188)))
 (let (($x1405 (<= c!3 1)))
 (let (($x346 (<= ?x736 0)))
 (let ((@x669 (and-elim @x212 $x347)))
 (let ((@x352 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x347) $x346)) @x669 $x346)))
 (let (($x183 (>= ?x736 0)))
 (let ((@x331 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x347) $x183)) @x669 $x183)))
 (let (($x158 (<= ?x257 4)))
 (let ((@x216 (and-elim @x212 $x261)))
 (let ((@x1086 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x261) $x158)) @x216 $x158)))
 (let (($x728 (>= ?x257 4)))
 (let ((@x712 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x261) $x728)) @x216 $x728)))
 (let ((@x419 ((_ th-lemma arith) (hypothesis (not $x1405)) @x331 @x352 @x331 @x352 @x517 @x1051 @x331 @x352 @x712 @x1086 @x331 @x352 @x517 @x1051 @x712 @x1086 @x331 @x352 false)))
 (let ((@x1386 (unit-resolution ((_ th-lemma arith farkas 1 1) (or (not $x1405) $x1131)) (lemma @x419 $x1405) $x1131)))
 (let (($x337 (<= ?x464 6)))
 (let ((@x353 (and-elim @x212 $x447)))
 (let ((@x503 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x960 $x337)) @x353 $x337)))
 (let (($x155 (>= ?x464 6)))
 (let ((@x192 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x960 $x155)) @x353 $x155)))
 (let ((@x1223 ((_ th-lemma arith) (hypothesis $x1160) (hypothesis $x1131) @x517 @x1051 @x331 @x352 @x331 @x352 @x517 @x1051 @x331 @x352 @x517 @x1051 @x517 @x1051 @x331 @x352 @x192 @x503 @x331 @x352 @x712 @x1086 @x517 @x1051 false)))
 (let ((@x1180 (unit-resolution (hypothesis $x1224) ((_ th-lemma arith gomory-cut 1 1) (hypothesis (not $x333)) @x331 $x1160) false)))
 (let ((@x1388 (unit-resolution (lemma @x1180 (or $x1160 $x333)) (unit-resolution (lemma @x1223 (or $x1188 $x1224)) @x1386 $x1224) $x333)))
 (let ((@x1173 (hypothesis $x333)))
 (let (($x1169 (not $x316)))
 (let ((@x1174 (hypothesis $x1169)))
 (let ((@x1175 ((_ th-lemma arith gcd-test -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 2/3 2/3 2/3 2/3 -2/3 -2/3) @x1174 @x1173 @x712 @x1086 @x1174 @x1174 @x1173 @x1174 @x1173 @x1174 @x1173 @x1174 @x1173 @x517 @x1051 false)))
 (let ((@x1166 (hypothesis $x316)))
 (let (($x540 (<= k!2 0)))
 (let ((@x889 (hypothesis $x540)))
 (let (($x740 (>= k!2 0)))
 (let ((@x286 (hypothesis (not $x740))))
 (let ((@x336 (lemma ((_ th-lemma arith) @x286 @x352 @x286 @x286 @x352 @x331 @x352 false) $x740)))
 (let (($x744 (>= ?x402 0)))
 (let ((@x243 ((_ th-lemma arith gcd-test -2/3 -2/3 -5/9 -5/9 -5/9 -5/9 -5/9 -2/9 -2/9 -2/3 -2/3 -2/3 -2/3 2/3 2/3) @x331 @x352 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x744)) false) $x744) @x336 @x889 @x712 @x1086 @x336 @x889 @x336 @x889 @x336 @x889 @x517 @x1051 false)))
 (let ((@x454 (lemma @x243 (not $x540))))
 (let ((@x1167 (hypothesis $x1139)))
 (let ((@x1168 ((_ th-lemma arith gcd-test -4/9 -4/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -5/9 -2/3 -2/3 -2/3 -2/3 -2/3 -2/3 -2/3 -2/3 2/3 2/3) @x331 @x352 @x712 @x1086 @x1167 @x454 @x352 @x1166 @x1167 @x454 @x352 @x1166 @x1167 @x454 @x352 @x1166 @x1167 @x454 @x352 @x1166 @x1167 @x454 @x352 @x1166 @x1167 @x454 @x352 @x1166 @x517 @x1051 false)))
 (let ((@x1380 (unit-resolution (lemma @x1168 (or $x1169 $x944)) (unit-resolution (lemma @x1175 (or (not $x333) $x316)) @x1388 $x316) $x944)))
 (let ((@x1140 (hypothesis $x493)))
 (let ((@x1141 ((_ th-lemma arith) @x454 @x1140 @x454 @x1140 @x1140 @x352 (hypothesis $x944) @x517 @x331 @x352 @x517 @x1051 @x517 @x1051 @x331 @x352 @x517 @x1051 @x192 @x503 @x331 @x352 @x331 @x352 @x517 @x1051 @x712 @x1086 @x517 @x1051 @x331 @x352 false)))
 (let ((@x416 ((_ th-lemma arith) (hypothesis $x987) (hypothesis (not $x319)) @x503 @x331 @x352 @x331 @x352 @x331 @x352 @x517 @x1051 @x331 @x352 @x331 @x352 @x712 @x1086 false)))
 (let ((@x1633 (unit-resolution (lemma @x416 (or $x493 $x319)) (unit-resolution (lemma @x1141 (or $x1139 $x987)) @x1380 $x987) $x319)))
 (let (($x258 (>= n!0 0)))
 (let ((@x1537 ((_ th-lemma arith farkas 1 3 1) @x352 ((_ th-lemma arith gomory-cut 1/2 1/2) @x454 @x331 (>= ?x1159 1)) (hypothesis (<= k!2 1)) false)))
 (let ((@x1478 (lemma @x1537 (not (<= k!2 1)))))
 (let ((@x210 (hypothesis (not $x258))))
 (let (($x1454 (<= n!0 (- 2))))
 (let (($x1550 (not $x1454)))
 (let (($x371 (>= ?x1159 0)))
 (let ((@x207 ((_ th-lemma arith) @x1478 @x210 @x517 (hypothesis $x1454) (lemma ((_ th-lemma arith farkas 1 3 1) @x331 (hypothesis (not $x371)) @x1478 false) $x371) @x192 @x503 @x331 @x352 @x331 @x352 @x192 @x503 @x331 @x352 @x517 @x1051 @x331 @x352 @x712 @x1086 @x331 @x352 false)))
 (let ((@x1476 (unit-resolution (lemma @x207 (or $x1550 $x258)) @x210 $x1550)))
 (let ((@x1634 ((_ th-lemma arith farkas 1 1 1 1 2 -1 1 1) @x192 @x192 (lemma ((_ th-lemma arith farkas 3 3 3 3 1 3 1) @x1476 @x210 @x1476 @x210 @x331 @x210 @x1478 false) $x258) @x1633 @x454 (hypothesis (not $x405)) @x1051 @x1633 false)))
 (let (($x708 (>= ?x394 (- 2))))
 (let ((@x1135 ((_ th-lemma arith) (hypothesis (not $x708)) @x517 @x1051 @x331 @x352 @x331 @x352 @x331 @x352 @x517 @x1051 @x331 @x352 @x192 @x503 @x331 @x352 @x192 @x503 @x331 @x352 false)))
 ((_ th-lemma arith) @x192 @x503 @x331 @x352 (lemma @x1135 $x708) (lemma @x1634 $x405) @x517 @x1051 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 163
 :arith-assert-diseq        32
 :arith-assert-lower        1423
 :arith-assert-upper        507
 :arith-bound-prop          6
 :arith-branch-var          32
 :arith-conflicts           47
 :arith-eq-adapter          15
 :arith-fixed-eqs           215
 :arith-gcd-tests           345
 :arith-gomory-cuts         23
 :arith-grobner             44
 :arith-ineq-splits         32
 :arith-max-min             7656
 :arith-nonlinear-bounds    939
 :arith-nonlinear-horner    597
 :arith-num-rows            23
 :arith-offset-eqs          9
 :arith-patches             77
 :arith-patches_succ        14
 :arith-pivots              1022
 :arith-pseudo-nonlinear    194
 :arith-row-summations      7718
 :arith-tableau-max-columns 94
 :arith-tableau-max-rows    23
 :conflicts                 55
 :decisions                 325
 :del-clause                131
 :final-checks              173
 :max-memory                4.10
 :memory                    3.34
 :minimized-lits            10
 :mk-bool-var               226
 :mk-clause                 144
 :num-allocs                7096192
 :num-checks                1
 :propagations              130
 :rlimit-count              477272
 :time                      0.12
 :total-time                0.12)
