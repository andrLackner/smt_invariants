unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let (($x448 (>= n!0 0)))
 (let ((?x355 (* (- 1) k!2)))
 (let ((?x377 (* (- 3) c!3)))
 (let ((?x487 (* 2 n!0)))
 (let ((?x309 (* n!0 k!2)))
 (let ((?x310 (+ ?x309 ?x487 ?x377 ?x355)))
 (let (($x383 (<= ?x310 0)))
 (let (($x491 (= ?x310 0)))
 (let ((?x593 (* (- 9) (* n!0 c!3))))
 (let ((?x402 (* k!2 k!2)))
 (let ((?x337 (* 9 n!0)))
 (let ((?x239 (* m!1 m!1)))
 (let ((?x195 (+ ?x239 (* (- 9) ?x309) ?x337 ?x402 (* (- 27) c!3) (* (- 32) k!2) (* 2 (* k!2 m!1)) ?x593 (* (- 5) m!1))))
 (let ((?x378 (* 6 m!1)))
 (let ((?x467 (* k!2 m!1)))
 (let ((?x234 (* (- 2) ?x467)))
 (let ((?x279 (* 6 k!2)))
 (let ((?x405 (* (- 1) ?x402)))
 (let ((?x453 (* (- 1) ?x239)))
 (let ((?x439 (+ (* 3 (* n!0 n!0 m!1)) ?x453 (* 9 ?x309) ?x405 (* 3 (* n!0 n!0 k!2)) (* 9 (* n!0 m!1)) ?x279 ?x234 ?x378)))
 (let ((?x193 (* (- 1) m!1)))
 (let ((?x364 (+ (* 6 n!0) ?x193)))
 (let (($x365 (= ?x364 (- 6))))
 (let (($x348 (not $x365)))
 (let (($x326 (or (not (= (+ ?x337 ?x355 ?x193 (* 3 (* n!0 n!0))) (- 6))) (not (= (+ ?x309 ?x487 ?x377 (* n!0 m!1) (* (- 3) k!2)) (- 2))) $x348 (not (= ?x439 0)) (not (= ?x195 (- 13))))))
 (let ((?x539 (* n!0 n!0)))
 (let ((?x472 (* 3 ?x539)))
 (let ((?x228 (* 3 n!0)))
 (let ((?x473 (+ ?x228 ?x355 ?x472)))
 (let (($x323 (= ?x473 0)))
 (let ((?x341 (+ ?x337 ?x402 (* (- 18) c!3) (* (- 5) k!2) ?x593)))
 (let (($x343 (= ?x341 (- 4))))
 (let (($x441 (and $x365 $x343 $x491 $x323 $x326)))
 (let ((?x175 (* k!2 n!0)))
 (let ((?x322 (* (- 1) ?x175)))
 (let ((?x370 (* (- 2) n!0)))
 (let ((?x494 (* 3 c!3)))
 (let (($x123 (= (+ ?x494 (* 3 k!2) ?x370 ?x322 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x520 (* 9 (* c!3 n!0))))
 (let ((?x388 (* 9 ?x175)))
 (let ((?x558 (* (- 9) n!0)))
 (let ((?x269 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x558 ?x405 ?x388 ?x520 ?x234 ?x453)))
 (let ((?x386 (+ ?x279 ?x378 ?x405 ?x388 (* 3 (* k!2 n!0 n!0)) (* 9 (* m!1 n!0)) ?x234 ?x453 (* 3 (* m!1 n!0 n!0)))))
 (let (($x498 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x558 (* (- 3) ?x539)) 6)) (not (= ?x386 0)) (not (= ?x269 13)) (not $x123))))
 (let (($x465 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x497 (and $x465 (= (+ (* 18 c!3) (* 5 k!2) ?x558 ?x405 ?x520) 4) (= (+ ?x494 k!2 ?x370 ?x322) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x539)) 0) $x498)))
 (let (($x401 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x517 (* (- 1) (* m m))))
 (let ((?x516 (* (- 2) (* k m))))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x372 (* 9 ?x52)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 ?x372 ?x155 ?x516 ?x517)))
 (let (($x522 (not (= ?x518 13))))
 (let ((?x413 (+ (* 6 k) (* 6 m) ?x218 ?x372 (* 3 (* k n n)) (* 9 (* m n)) ?x516 ?x517 (* 3 (* m n n)))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x538 (or $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) (not (= ?x413 0)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 $x538)))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x177 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x329 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let ((?x406 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x435 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let ((?x74 (+ k m)))
 (let (($x287 (not (= (* ?x74 (+ 3 ?x435 ?x233 ?x471 ?x61)) 0))))
 (let (($x270 (not (= (+ ?x435 ?x233 ?x471 ?x61) (- 3)))))
 (let (($x440 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x440 (or $x270 $x287 $x356 (not (= ?x406 2)) (not (= ?x329 13)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x403 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x517 (* (- 1) (* m m))))
 (let ((?x516 (* (- 2) (* k m))))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x372 (* 9 ?x52)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 ?x372 ?x155 ?x516 ?x517)))
 (let (($x522 (not (= ?x518 13))))
 (let ((?x413 (+ (* 6 k) (* 6 m) ?x218 ?x372 (* 3 (* k n n)) (* 9 (* m n)) ?x516 ?x517 (* 3 (* m n n)))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x538 (or $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) (not (= ?x413 0)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x353 (and $x138 $x215 $x260 $x296 $x538)))
 (let ((?x37 (* 18 c)))
 (let ((?x329 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x406 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x435 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let ((?x74 (+ k m)))
 (let (($x287 (not (= (* ?x74 (+ 3 ?x435 ?x233 ?x471 ?x61)) 0))))
 (let (($x270 (not (= (+ ?x435 ?x233 ?x471 ?x61) (- 3)))))
 (let (($x440 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let (($x335 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x500 (and $x138 $x335 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x440 (or $x270 $x287 $x356 (not (= ?x406 2)) (not (= ?x329 13))))))
 (rewrite (= $x500 $x353))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x482 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x56 (* 2 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x363 (+ 1 n)))
 (let ((?x495 (* ?x363 ?x74)))
 (let ((?x354 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x435 (* 3 (* ?x363 ?x363))))
 (let (($x287 (not (= (* ?x74 (+ 3 ?x435 ?x233 ?x471 ?x61)) 0))))
 (let (($x270 (not (= (+ ?x435 ?x233 ?x471 ?x61) (- 3)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 18) c)))
 (let ((?x171 (+ ?x447 (* (- 23) k) (* (- 9) (* ?x363 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x267 (or (not (= ?x171 (- 13))) $x270 $x287 $x356 (not (= (+ ?x354 (* (- 4) k) ?x495 ?x471 ?x56) (- 2))))))
 (let (($x440 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let (($x350 (= (+ ?x447 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x350 (= (+ ?x354 (* n k) ?x233 ?x56) 0) $x440 $x267))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x306 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x329 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x430 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let ((?x406 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x435 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let ((?x74 (+ k m)))
 (let (($x287 (not (= (* ?x74 (+ 3 ?x435 ?x233 ?x471 ?x61)) 0))))
 (let (($x270 (not (= (+ ?x435 ?x233 ?x471 ?x61) (- 3)))))
 (let (($x440 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x500 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x440 (or $x270 $x287 $x356 (not (= ?x406 2)) (not (= ?x329 13))))))
 (let ((?x56 (* 2 n)))
 (let ((?x363 (+ 1 n)))
 (let ((?x495 (* ?x363 ?x74)))
 (let ((?x354 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 18) c)))
 (let ((?x171 (+ ?x447 (* (- 23) k) (* (- 9) (* ?x363 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x267 (or (not (= ?x171 (- 13))) $x270 $x287 $x356 (not (= (+ ?x354 (* (- 4) k) ?x495 ?x471 ?x56) (- 2))))))
 (let (($x350 (= (+ ?x447 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x276 (and $x138 $x350 (= (+ ?x354 (* n k) ?x233 ?x56) 0) $x440 $x267)))
 (rewrite (= $x276 $x500)))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) (+ k m)) (* 3 (+ n 1)))))
 (let ((?x74 (+ k m)))
 (let ((?x50 (- 3)))
 (let ((?x89 (+ (- (+ (* ?x50 (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x101 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x50 ?x74 ?x95) 0)))))
 (let (($x58 (= (+ (- (+ (* ?x50 c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101))))))))))))))) :qid k!38))
 ))
 (let ((?x488 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x56 (* 2 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x363 (+ 1 n)))
 (let ((?x495 (* ?x363 ?x74)))
 (let ((?x354 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x435 (* 3 (* ?x363 ?x363))))
 (let (($x287 (not (= (* ?x74 (+ 3 ?x435 ?x233 ?x471 ?x61)) 0))))
 (let (($x270 (not (= (+ ?x435 ?x233 ?x471 ?x61) (- 3)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 18) c)))
 (let ((?x171 (+ ?x447 (* (- 23) k) (* (- 9) (* ?x363 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x267 (or (not (= ?x171 (- 13))) $x270 $x287 $x356 (not (= (+ ?x354 (* (- 4) k) ?x495 ?x471 ?x56) (- 2))))))
 (let (($x440 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let (($x350 (= (+ ?x447 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x276 (and $x138 $x350 (= (+ ?x354 (* n k) ?x233 ?x56) 0) $x440 $x267)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x50 (- 3)))
 (let ((?x89 (+ (- (+ (* ?x50 (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x101 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x50 ?x74 ?x95) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* ?x50 c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x101)))
 (rewrite (= $x102 $x276)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x591 (mp (mp @x104 (quant-intro (proof-bind ?x488) (= $x103 $x482)) $x482) (rewrite (= $x482 $x482)) $x482)))
 (let ((@x475 (mp (mp @x591 (quant-intro (proof-bind ?x306) (= $x482 $x177)) $x177) (quant-intro (proof-bind ?x403) (= $x177 $x401)) $x401)))
 (let ((@x126 (mp (mp~ @x475 (sk (~ $x401 $x497)) $x497) (rewrite (= $x497 $x441)) $x441)))
 (let ((@x418 (and-elim @x126 $x491)))
 (let ((@x158 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x383)) @x418 $x383)))
 (let (($x463 (>= ?x310 0)))
 (let ((@x163 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x463)) @x418 $x463)))
 (let ((@x212 (hypothesis (not $x448))))
 (let (($x470 (>= ?x364 (- 6))))
 (let ((@x169 (and-elim @x126 $x365)))
 (let ((@x576 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x348 $x470)) @x169 $x470)))
 (let ((?x106 (* n!0 n!0 m!1)))
 (let (($x264 (>= ?x106 0)))
 (let (($x444 (<= ?x364 (- 6))))
 (let ((@x268 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x348 $x444)) @x169 $x444)))
 (let (($x503 (<= ?x341 (- 4))))
 (let ((@x351 (and-elim @x126 $x343)))
 (let ((@x150 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x343) $x503)) @x351 $x503)))
 (let (($x382 (>= ?x341 (- 4))))
 (let ((@x321 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x343) $x382)) @x351 $x382)))
 (let (($x224 (<= ?x439 0)))
 (let (($x407 (<= ?x473 0)))
 (let ((@x555 (and-elim @x126 $x323)))
 (let ((@x526 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x323) $x407)) @x555 $x407)))
 (let (($x409 (>= ?x473 0)))
 (let ((@x320 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x323) $x409)) @x555 $x409)))
 (let ((@x469 ((_ th-lemma arith) (hypothesis (not $x224)) @x163 @x158 @x320 @x526 @x163 @x158 @x320 @x526 @x320 @x526 @x163 @x158 @x576 @x268 @x163 @x158 @x320 @x526 @x163 @x158 @x320 @x526 @x320 @x526 @x321 @x150 @x163 @x158 @x576 @x268 @x320 @x526 @x576 @x268 @x321 @x150 false)))
 (let ((@x144 (lemma @x469 $x224)))
 (let (($x577 (>= ?x439 0)))
 (let ((@x252 ((_ th-lemma arith) (hypothesis (not $x577)) @x163 @x158 @x320 @x526 @x163 @x158 @x320 @x526 @x320 @x526 @x320 @x526 @x163 @x158 @x320 @x526 @x576 @x268 @x163 @x158 @x576 @x268 @x163 @x158 @x320 @x526 @x321 @x150 @x163 @x158 @x576 @x268 @x321 @x150 false)))
 (let ((@x312 (lemma @x252 $x577)))
 (let ((@x183 (hypothesis (not $x264))))
 (let ((@x216 ((_ th-lemma arith) @x183 @x212 @x183 @x212 @x163 @x158 @x576 @x268 @x163 @x158 @x320 @x526 @x576 @x268 @x321 @x150 @x163 @x158 @x163 @x158 @x312 @x144 @x312 @x144 @x312 @x144 @x321 @x150 @x163 @x158 @x576 @x268 @x321 @x150 @x576 @x268 false)))
 (let ((@x619 (unit-resolution (lemma @x216 (or $x264 $x448)) @x212 $x264)))
 (let ((?x414 (* n!0 m!1)))
 (let (($x180 (>= ?x414 0)))
 (let ((@x134 (lemma ((_ th-lemma arith farkas 1 1 1 1) (hypothesis (not $x180)) @x212 @x576 @x212 false) (or $x180 $x448))))
 (let ((@x669 ((_ th-lemma arith gcd-test 1 1 1 1 -1/3 -1/3 -2 -2 -10/3 -10/3 -22/39 -22/39 3 3 3 3 3 -1/3 -1/3 -1/3 -1/3 -2/3 -2/3 -2/3 -2/3 -2/3 -2/3 -2/3 -2/3 3 3) @x619 @x212 @x576 @x212 @x312 @x144 @x576 @x268 @x320 @x526 @x321 @x150 (unit-resolution @x134 @x212 $x180) @x619 @x212 @x576 @x212 @x619 @x212 @x576 @x212 @x619 @x212 @x576 @x212 @x619 @x212 @x576 @x212 @x163 @x158 false)))
 (let (($x583 (>= ?x539 1)))
 (let ((@x166 ((_ th-lemma arith) (hypothesis (not $x583)) @x163 @x158 @x320 @x526 @x163 @x158 @x320 @x526 @x163 @x158 @x320 @x526 @x321 @x150 false)))
 (let ((@x179 (lemma @x166 $x583)))
 (let ((@x746 ((_ th-lemma arith farkas 1 1 1) @x179 (lemma @x669 $x448) (hypothesis (<= n!0 0)) false)))
 (let ((@x747 (lemma @x746 (not (<= n!0 0)))))
 (let (($x1625 (<= c!3 1)))
 (let ((@x1617 ((_ th-lemma arith) (hypothesis (not $x1625)) @x312 @x144 @x312 @x144 @x576 @x268 @x576 @x268 @x320 @x526 @x320 @x526 @x163 @x158 @x312 @x144 @x320 @x526 @x163 @x158 @x320 @x526 @x163 @x158 @x321 @x150 @x163 @x158 @x321 @x150 @x163 @x158 @x320 @x526 @x320 @x526 @x576 @x268 @x576 @x268 @x312 @x144 @x312 @x144 @x576 @x268 @x312 @x144 @x320 @x526 @x576 @x268 @x312 @x144 @x320 @x526 @x576 @x268 @x576 @x268 @x312 @x144 @x312 @x144 @x576 @x268 @x163 @x158 @x320 @x526 false)))
 (let ((@x1668 ((_ th-lemma arith) (hypothesis (>= (+ ?x309 ?x228 (* (- 2) c!3) ?x355 ?x539) 6)) (lemma @x1617 $x1625) @x320 @x526 @x320 @x526 @x163 @x158 @x320 @x526 @x163 @x158 @x320 @x526 @x321 @x150 @x163 @x158 @x163 @x158 @x320 @x526 @x321 @x150 @x576 @x268 @x163 @x158 @x163 @x158 @x320 @x526 @x312 @x144 @x321 @x150 @x576 @x268 @x320 @x526 @x320 @x526 @x163 @x158 @x576 @x268 @x312 @x144 false)))
 (let ((@x1672 (lemma @x1668 (not (>= (+ ?x309 ?x228 (* (- 2) c!3) ?x355 ?x539) 6)))))
 (let (($x742 (>= ?x309 14)))
 (let (($x207 (<= k!2 6)))
 (let ((@x733 (hypothesis $x207)))
 (let ((@x213 ((_ th-lemma arith gcd-test 1/9 1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 1/9 1/9 2/3 2/3 2/3 2/3 2/3 2/3 2/3 2/3 -2/3 -2/3) @x321 @x150 @x179 @x747 @x526 @x733 @x179 @x747 @x526 @x733 @x179 @x747 @x526 @x733 @x179 @x747 @x526 @x733 @x320 @x526 @x179 @x747 @x526 @x733 @x179 @x747 @x526 @x733 @x163 @x158 false)))
 (let ((@x707 (lemma @x213 (not $x207))))
 (let ((@x1330 (hypothesis (not $x742))))
 (let ((@x1452 (lemma ((_ th-lemma arith farkas 1 -3 -3 -3 -3 -3 -3 -3 -3 1) @x320 @x747 @x707 @x1330 @x747 @x707 @x1330 @x707 @x1330 @x707 false) $x742)))
 ((_ th-lemma arith farkas 1 1/2 1/2 -3/2 1) @x163 @x320 @x1452 @x1672 @x747 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 38
 :arith-assert-diseq        22
 :arith-assert-lower        482
 :arith-assert-upper        211
 :arith-bound-prop          7
 :arith-branch-var          24
 :arith-conflicts           42
 :arith-eq-adapter          11
 :arith-fixed-eqs           87
 :arith-gcd-tests           245
 :arith-gomory-cuts         18
 :arith-grobner             47
 :arith-ineq-splits         24
 :arith-max-min             2251
 :arith-nonlinear-bounds    84
 :arith-nonlinear-horner    442
 :arith-num-rows            18
 :arith-offset-eqs          2
 :arith-patches             70
 :arith-patches_succ        22
 :arith-pivots              1050
 :arith-pseudo-nonlinear    86
 :arith-row-summations      5988
 :arith-tableau-max-columns 60
 :arith-tableau-max-rows    18
 :conflicts                 48
 :decisions                 172
 :del-clause                57
 :final-checks              156
 :max-memory                4.21
 :memory                    3.31
 :minimized-lits            5
 :mk-bool-var               190
 :mk-clause                 120
 :num-allocs                42429689
 :num-checks                1
 :propagations              143
 :rlimit-count              406059
 :time                      0.37
 :total-time                0.38)
