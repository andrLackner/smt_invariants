unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x445 (* 5 k!2)))
 (let ((?x1353 (+ (* 10 c!3) (* 5 (* c!3 n!0)) ?x445 (* 4 m!1) (* (- 34) n!0) (* (- 5) (* n!0 n!0)))))
 (let (($x1359 (>= ?x1353 77)))
 (let ((?x555 (* n!0 n!0)))
 (let ((?x556 (* (- 3) ?x555)))
 (let ((?x446 (* (- 9) n!0)))
 (let ((?x301 (+ k!2 m!1 ?x446 ?x556)))
 (let (($x233 (<= ?x301 6)))
 (let ((?x170 (+ m!1 (* (- 6) n!0))))
 (let (($x491 (<= ?x170 6)))
 (let (($x441 (= ?x170 6)))
 (let ((?x416 (* k!2 n!0)))
 (let ((?x143 (* m!1 n!0)))
 (let (($x517 (= (+ ?x143 (* (- 3) c!3) (* (- 3) k!2) (* 2 n!0) ?x416) (- 2))))
 (let (($x467 (not $x441)))
 (let (($x466 (not (= ?x301 6))))
 (let ((?x578 (* k!2 m!1)))
 (let ((?x185 (* 12 ?x578)))
 (let ((?x475 (* k!2 k!2)))
 (let ((?x501 (* 6 ?x475)))
 (let ((?x471 (* 6 (* m!1 m!1 n!0 n!0))))
 (let ((?x462 (* (- 1) (* m!1 m!1 m!1 n!0))))
 (let ((?x463 (* (- 1) (* m!1 m!1 m!1))))
 (let ((?x411 (* 12 (* m!1 m!1 n!0))))
 (let ((?x418 (* (- 2) (* k!2 m!1 m!1 n!0))))
 (let ((?x408 (* m!1 m!1)))
 (let ((?x482 (* 6 ?x408)))
 (let ((?x268 (* (- 1) (* k!2 k!2 m!1))))
 (let ((?x144 (* 12 (* k!2 m!1 n!0 n!0))))
 (let ((?x390 (* (- 2) (* k!2 m!1 m!1))))
 (let ((?x428 (* 12 (* k!2 k!2 n!0))))
 (let ((?x349 (* 6 (* k!2 k!2 n!0 n!0))))
 (let ((?x469 (* (- 1) (* k!2 k!2 m!1 n!0))))
 (let ((?x407 (* 24 (* k!2 m!1 n!0))))
 (let ((?x414 (+ ?x407 ?x469 ?x349 ?x428 ?x390 ?x144 ?x268 ?x482 ?x418 ?x411 ?x463 ?x462 ?x471 ?x501 ?x185)))
 (let ((?x561 (* (- 2) ?x578)))
 (let ((?x350 (* (- 1) ?x475)))
 (let ((?x369 (* 9 ?x416)))
 (let ((?x177 (* (- 1) ?x408)))
 (let ((?x454 (* 5 m!1)))
 (let ((?x373 (* 32 k!2)))
 (let ((?x224 (* c!3 n!0)))
 (let ((?x429 (* 9 ?x224)))
 (let ((?x521 (* 27 c!3)))
 (let (($x152 (or (not (= (+ ?x521 ?x429 ?x373 ?x454 ?x446 ?x177 ?x369 ?x350 ?x561) 13)) (not (= ?x414 0)) $x466 $x467 (not $x517))))
 (let ((?x162 (+ k!2 (* (- 3) n!0) ?x556)))
 (let (($x340 (= ?x162 0)))
 (let ((?x360 (* (- 1) ?x416)))
 (let ((?x433 (* (- 2) n!0)))
 (let ((?x577 (* 3 c!3)))
 (let ((?x523 (+ ?x577 k!2 ?x433 ?x360)))
 (let (($x525 (= ?x523 0)))
 (let ((?x399 (* 18 c!3)))
 (let ((?x413 (+ ?x399 ?x429 ?x445 ?x446 ?x350)))
 (let (($x518 (= ?x413 4)))
 (let (($x480 (and $x441 $x518 $x525 $x340 $x152)))
 (let ((?x319 (+ ?x501 ?x462 ?x144 ?x469 ?x268 ?x471 ?x349 ?x407 ?x411 ?x418 ?x463 ?x185 ?x482 ?x428 ?x390)))
 (let (($x115 (or (not (= ?x319 0)) $x466 $x467 (not (= (+ ?x521 ?x373 ?x454 ?x446 ?x350 ?x369 ?x429 ?x561 ?x177) 13)) (not (= (+ ?x577 (* 3 k!2) ?x433 ?x360 (* (- 1) ?x143)) 2)))))
 (let (($x596 (and $x441 (= (+ ?x399 ?x445 ?x446 ?x350 ?x429) 4) $x525 $x340 $x115)))
 (let (($x419 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x565 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x573 (not $x565)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x543 (+ (* 27 c) (* 32 k) ?x455 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x547 (not (= ?x543 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x163 (+ (* 6 ?x46) (* (- 1) (* m m m n)) (* 12 (* k m n n)) (* (- 1) (* k k m n)) (* (- 1) (* k k m)) (* 6 (* m m n n)) (* 6 (* k k n n)) (* 24 (* k m n)) (* 12 (* m m n)) (* (- 2) (* k m m n)) (* (- 1) (* m m m)) (* 12 (* k m)) (* 6 (* m m)) (* 12 (* k k n)) (* (- 2) (* k m m)))))
 (let (($x247 (or (not (= ?x163 0)) (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x356 $x547 $x573)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 $x247))))))))))))))))))))) :qid k!38))
 ))
 (let (($x228 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x74 (+ k m)))
 (let ((?x609 (+ 1 n)))
 (let (($x327 (not (= (* ?x609 ?x74 ?x74 (+ (- 6) m (* (- 6) n))) 0))))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x544 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x609 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x315 (* (- 1) m)))
 (let ((?x585 (* (- 1) k)))
 (let (($x300 (not (= (+ (* 3 (* ?x609 ?x609)) ?x585 ?x315 ?x61) (- 3)))))
 (let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x234 (+ ?x37 (* 23 k) (* 9 (* ?x609 (+ c k))) ?x455 ?x217 (* (- 1) (* ?x74 ?x74)))))
 (let (($x520 (= (+ (* 3 (* n n)) ?x585 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x520 (or (not (= ?x234 13)) $x300 (not $x544) $x327 $x356)))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x427 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x565 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x573 (not $x565)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x543 (+ (* 27 c) (* 32 k) ?x455 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x547 (not (= ?x543 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x163 (+ (* 6 ?x46) (* (- 1) (* m m m n)) (* 12 (* k m n n)) (* (- 1) (* k k m n)) (* (- 1) (* k k m)) (* 6 (* m m n n)) (* 6 (* k k n n)) (* 24 (* k m n)) (* 12 (* m m n)) (* (- 2) (* k m m n)) (* (- 1) (* m m m)) (* 12 (* k m)) (* 6 (* m m)) (* 12 (* k k n)) (* (- 2) (* k m m)))))
 (let (($x247 (or (not (= ?x163 0)) (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x356 $x547 $x573)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x166 (and $x138 $x215 $x260 $x296 $x247)))
 (let ((?x74 (+ k m)))
 (let ((?x609 (+ 1 n)))
 (let (($x327 (not (= (* ?x609 ?x74 ?x74 (+ (- 6) m (* (- 6) n))) 0))))
 (let (($x544 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x609 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x315 (* (- 1) m)))
 (let ((?x585 (* (- 1) k)))
 (let (($x300 (not (= (+ (* 3 (* ?x609 ?x609)) ?x585 ?x315 ?x61) (- 3)))))
 (let ((?x37 (* 18 c)))
 (let ((?x234 (+ ?x37 (* 23 k) (* 9 (* ?x609 (+ c k))) ?x455 ?x217 (* (- 1) (* ?x74 ?x74)))))
 (let (($x520 (= (+ (* 3 (* n n)) ?x585 ?x61) 0)))
 (let (($x168 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x528 (and $x138 $x168 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x520 (or (not (= ?x234 13)) $x300 (not $x544) $x327 $x356))))
 (rewrite (= $x528 $x166)))))))))))))))))))))))))))))))))))))
 ))
 (let (($x106 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 18) c)))
 (let ((?x599 (+ ?x479 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x451 (= (* (+ 1 n) ?x74 ?x74 (+ (- 6) m (* (- 6) n))) 0)))
 (let (($x327 (not $x451)))
 (let ((?x61 (* 3 n)))
 (let ((?x315 (* (- 1) m)))
 (let ((?x585 (* (- 1) k)))
 (let (($x288 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x585 ?x315 ?x61) (- 3))))
 (let (($x300 (not $x288)))
 (let ((?x56 (* 2 n)))
 (let ((?x609 (+ 1 n)))
 (let ((?x440 (* ?x609 ?x74)))
 (let ((?x529 (* (- 3) c)))
 (let (($x403 (or (not (= (+ ?x529 (* (- 4) k) ?x440 ?x315 ?x56) (- 2))) $x300 $x327 $x356 (not (= ?x599 (- 13))))))
 (let (($x520 (= (+ (* 3 (* n n)) ?x585 ?x61) 0)))
 (let (($x386 (= (+ ?x479 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x386 (= (+ ?x529 (* n k) ?x585 ?x56) 0) $x520 $x403)))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x613 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x74 (+ k m)))
 (let ((?x609 (+ 1 n)))
 (let (($x327 (not (= (* ?x609 ?x74 ?x74 (+ (- 6) m (* (- 6) n))) 0))))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x544 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x609 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x315 (* (- 1) m)))
 (let ((?x585 (* (- 1) k)))
 (let (($x300 (not (= (+ (* 3 (* ?x609 ?x609)) ?x585 ?x315 ?x61) (- 3)))))
 (let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x234 (+ ?x37 (* 23 k) (* 9 (* ?x609 (+ c k))) ?x455 ?x217 (* (- 1) (* ?x74 ?x74)))))
 (let (($x520 (= (+ (* 3 (* n n)) ?x585 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x528 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x520 (or (not (= ?x234 13)) $x300 (not $x544) $x327 $x356))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 18) c)))
 (let ((?x599 (+ ?x479 (* (- 23) k) (* (- 9) (* ?x609 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x440 (* ?x609 ?x74)))
 (let ((?x529 (* (- 3) c)))
 (let (($x403 (or (not (= (+ ?x529 (* (- 4) k) ?x440 ?x315 ?x56) (- 2))) $x300 $x327 $x356 (not (= ?x599 (- 13))))))
 (let (($x386 (= (+ ?x479 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x443 (and $x138 $x386 (= (+ ?x529 (* n k) ?x585 ?x56) 0) $x520 $x403)))
 (rewrite (= $x443 $x528))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x66 (+ n 1)))
 (let ((?x74 (+ k m)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) ?x66)) (* 5 ?x74))))
 (let (($x101 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* 4 ?x74 ?x74 ?x66 ?x68) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101))))))))))))) :qid k!38))
 ))
 (let ((?x308 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 18) c)))
 (let ((?x599 (+ ?x479 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x451 (= (* (+ 1 n) ?x74 ?x74 (+ (- 6) m (* (- 6) n))) 0)))
 (let (($x327 (not $x451)))
 (let ((?x61 (* 3 n)))
 (let ((?x315 (* (- 1) m)))
 (let ((?x585 (* (- 1) k)))
 (let (($x288 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x585 ?x315 ?x61) (- 3))))
 (let (($x300 (not $x288)))
 (let ((?x56 (* 2 n)))
 (let ((?x609 (+ 1 n)))
 (let ((?x440 (* ?x609 ?x74)))
 (let ((?x529 (* (- 3) c)))
 (let (($x403 (or (not (= (+ ?x529 (* (- 4) k) ?x440 ?x315 ?x56) (- 2))) $x300 $x327 $x356 (not (= ?x599 (- 13))))))
 (let (($x520 (= (+ (* 3 (* n n)) ?x585 ?x61) 0)))
 (let (($x386 (= (+ ?x479 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x443 (and $x138 $x386 (= (+ ?x529 (* n k) ?x585 ?x56) 0) $x520 $x403)))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x66 (+ n 1)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let ((?x78 (- (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) ?x66)) (* 5 ?x74))))
 (let (($x101 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* 4 ?x74 ?x74 ?x66 ?x68) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x101)))
 (rewrite (= $x102 $x443))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x494 (mp (mp @x104 (quant-intro (proof-bind ?x308) (= $x103 $x106)) $x106) (rewrite (= $x106 $x106)) $x106)))
 (let ((@x347 (mp (mp @x494 (quant-intro (proof-bind ?x613) (= $x106 $x228)) $x228) (quant-intro (proof-bind ?x427) (= $x228 $x419)) $x419)))
 (let ((@x337 (mp (mp~ @x347 (sk (~ $x419 $x596)) $x596) (rewrite (= $x596 $x480)) $x480)))
 (let ((@x423 (and-elim @x337 $x441)))
 (let ((@x379 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x467 $x491)) @x423 $x491)))
 (let (($x197 (<= ?x162 0)))
 (let ((@x563 (and-elim @x337 $x340)))
 (let ((@x165 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x233 (not $x197) (not $x491))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x340) $x197)) @x563 $x197) @x379 $x233)))
 (let (($x551 (>= ?x301 6)))
 (let (($x391 (>= ?x162 0)))
 (let (($x346 (>= ?x170 6)))
 (let ((@x374 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x467 $x346)) @x423 $x346)))
 (let ((@x378 ((_ th-lemma arith farkas -1 1 1) (hypothesis (not $x551)) @x374 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x340) $x391)) @x563 $x391) false)))
 (let ((@x380 (lemma @x378 $x551)))
 (let (($x495 (<= ?x413 4)))
 (let ((@x367 (and-elim @x337 $x518)))
 (let ((@x189 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x518) $x495)) @x367 $x495)))
 (let (($x486 (>= ?x413 4)))
 (let ((@x318 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x518) $x486)) @x367 $x486)))
 (let (($x107 (<= ?x523 0)))
 (let ((@x227 (and-elim @x337 $x525)))
 (let ((@x310 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x525) $x107)) @x227 $x107)))
 (let (($x519 (>= ?x523 0)))
 (let ((@x180 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x525) $x519)) @x227 $x519)))
 (let (($x1102 (<= c!3 1)))
 (let ((@x1383 ((_ th-lemma arith) (hypothesis (not $x1102)) @x380 @x165 @x318 @x189 @x380 @x165 @x374 @x379 @x380 @x165 @x374 @x379 @x380 @x165 @x380 @x165 @x374 @x379 @x180 @x310 @x380 @x165 @x374 @x379 false)))
 (let ((@x1199 ((_ th-lemma arith) (hypothesis $x1359) (lemma @x1383 $x1102) @x374 @x379 @x380 @x165 @x180 @x310 @x374 @x379 @x380 @x165 @x318 @x189 @x374 @x379 @x380 @x165 false)))
 (let (($x940 (<= k!2 8)))
 (let ((@x915 (hypothesis $x940)))
 (let (($x839 (>= k!2 8)))
 (let ((@x855 (hypothesis (not $x839))))
 (let ((@x860 ((_ th-lemma arith gomory-cut -1 1/2 1) @x855 @x374 @x380 (>= (+ m!1 (* (- 8) n!0) (* (- 2) ?x555)) 2))))
 (let (($x817 (<= k!2 4)))
 (let (($x857 (not $x817)))
 (let ((@x853 (hypothesis $x817)))
 (let (($x759 (>= c!3 0)))
 (let ((?x704 (* (- 8) n!0)))
 (let ((?x186 (* 2 c!3)))
 (let ((?x706 (+ ?x186 ?x224 k!2 m!1 ?x704 (* (- 1) ?x555))))
 (let (($x707 (>= ?x706 8)))
 (let (($x382 (>= n!0 0)))
 (let (($x432 (>= n!0 (- 1))))
 (let (($x553 (not $x432)))
 (let ((@x383 (hypothesis (not $x382))))
 (let ((@x353 (hypothesis $x432)))
 (let (($x381 (>= k!2 0)))
 (let ((@x363 (hypothesis (not $x381))))
 (let ((@x147 (unit-resolution (lemma ((_ th-lemma arith) @x383 @x379 @x383 @x363 @x380 false) (or $x382 $x381)) @x363 $x382)))
 (let ((@x473 (lemma ((_ th-lemma arith farkas -3 -1 1 1) @x147 @x380 @x379 @x363 false) $x381)))
 (let ((@x387 ((_ th-lemma arith gomory-cut 1/5 4/5) @x318 @x473 (>= (+ ?x186 ?x224 k!2 (* (- 1) n!0)) 1))))
 (let (($x375 (>= ?x224 1)))
 (let (($x341 (>= ?x416 2)))
 (let (($x420 (not $x341)))
 (let ((@x326 (unit-resolution (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis $x341) @x473 @x383 false) (or $x420 $x382)) @x383 $x420)))
 (let ((@x368 (hypothesis (not $x375))))
 (let ((@x151 (lemma ((_ th-lemma arith farkas -1/3 2 2 3 -1/3 1) @x318 (hypothesis $x420) @x310 @x368 @x473 @x383 false) (or $x341 $x375 $x382))))
 (let ((@x546 ((_ th-lemma arith farkas 1/3 -1/3 2/3 1/3 1/3 1/3 1/3 -1/3 1 1 1 1) @x165 @x374 @x383 (unit-resolution @x151 @x326 @x383 $x375) @x383 @x353 @x383 @x387 @x353 @x383 @x353 @x383 false)))
 (let ((@x203 ((_ th-lemma arith) @x387 (unit-resolution (lemma @x546 (or $x553 $x382)) @x383 $x553) @x318 @x189 @x180 @x310 @x180 @x310 @x380 @x165 @x374 @x379 @x180 @x310 false)))
 (let ((@x204 (lemma @x203 $x382)))
 (let (($x272 (>= c!3 1)))
 (let (($x174 (<= m!1 6)))
 (let (($x655 (not $x174)))
 (let ((@x117 (hypothesis $x174)))
 (let ((?x663 (+ (* 24 c!3) (* 10 ?x224) (* 8 k!2) m!1 (* (- 16) n!0))))
 (let ((@x654 ((_ th-lemma arith farkas 1 1/8 -1/8 5/4 1 1 1) @x310 @x117 ((_ th-lemma arith gomory-cut 1/2 -3/4 1/2 1/8 3/4 1/4) @x318 @x368 @x473 @x374 @x204 @x374 (>= ?x663 14)) @x368 @x204 @x117 @x374 false)))
 (let ((@x716 (unit-resolution (lemma @x654 (or $x655 $x375)) @x368 $x655)))
 (let ((@x708 (hypothesis (not $x272))))
 (let (($x431 (<= n!0 1)))
 (let (($x712 (not $x431)))
 (let ((@x710 (hypothesis $x655)))
 (let ((@x714 (lemma ((_ th-lemma arith farkas -1/9 1/9 -1/3 -1/3 -1/3 -1/3 1) @x710 @x379 @x710 @x379 (hypothesis $x431) @x180 @x708 false) (or $x712 $x174 $x272))))
 (let ((@x700 ((_ th-lemma arith) (unit-resolution @x714 @x708 @x710 $x712) @x708 @x374 @x379 @x374 @x379 @x380 @x165 @x380 @x165 @x374 @x379 @x180 @x310 @x318 @x189 @x380 @x165 @x380 @x165 @x374 @x379 @x374 @x379 @x318 @x189 false)))
 (let ((@x724 ((_ th-lemma arith farkas 1/6 -1/6 1 1) @x379 @x716 @x368 (unit-resolution (lemma @x700 (or $x272 $x174)) @x716 $x272) false)))
 (let ((@x725 (lemma @x724 $x375)))
 (let ((@x744 ((_ th-lemma arith) @x473 @x204 (hypothesis (not $x707)) @x374 @x380 @x725 @x180 @x204 @x374 @x379 @x380 @x165 @x180 @x310 @x380 @x165 @x374 @x379 @x180 @x310 @x380 @x165 @x318 @x189 @x374 @x379 false)))
 (let ((@x745 (lemma @x744 $x707)))
 (let ((@x736 ((_ th-lemma arith) (hypothesis (not $x759)) @x745 @x180 @x310 @x180 @x310 @x374 @x379 @x380 @x165 @x180 @x310 @x180 @x310 @x318 @x189 @x374 @x379 @x380 @x165 @x374 @x379 @x380 @x165 false)))
 (let ((@x732 (lemma @x736 $x759)))
 (let (($x607 (<= k!2 3)))
 (let ((@x772 (hypothesis $x607)))
 (let (($x742 (<= k!2 0)))
 (let ((@x747 (hypothesis $x742)))
 (let ((@x755 (lemma ((_ th-lemma arith farkas 6 3 1 1 1 9 1) @x379 @x165 @x473 @x747 @x189 @x745 @x747 false) (not $x742))))
 (let ((@x773 ((_ th-lemma arith gomory-cut 1/2 1 1/2) @x374 @x380 @x755 (>= (+ k!2 m!1 ?x704 (* (- 2) ?x555)) 7))))
 (let ((@x774 ((_ th-lemma arith farkas 2/3 -1/9 -5/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 1 2) @x773 @x165 @x379 @x773 @x379 @x165 @x772 @x773 @x379 @x165 @x772 @x189 @x725 @x732 false)))
 (let ((@x776 (lemma @x774 (not $x607))))
 (let (($x819 (>= ?x706 10)))
 (let ((@x816 ((_ th-lemma arith gomory-cut 1/2 1 1/2) @x374 @x380 @x776 (>= (+ k!2 m!1 ?x704 (* (- 2) ?x555)) 8))))
 (let ((@x780 ((_ th-lemma arith) @x380 @x165 @x318 @x189 @x374 @x379 @x380 @x165 @x374 @x379 @x380 @x165 @x725 (hypothesis (not $x819)) @x732 @x816 @x180 @x310 @x374 @x379 false)))
 (let ((@x820 (lemma @x780 $x819)))
 (let ((@x859 (lemma ((_ th-lemma arith farkas 1 1 6 3 9 1 1 1 1) @x189 @x855 @x379 @x165 @x820 @x776 @x853 @x776 @x853 false) (or $x857 $x839))))
 (let ((@x861 (unit-resolution @x859 @x855 $x857)))
 (let (($x832 (<= k!2 5)))
 (let (($x866 (not $x832)))
 (let ((@x863 (hypothesis $x832)))
 (let ((@x864 (hypothesis $x857)))
 (let ((@x868 (lemma ((_ th-lemma arith farkas -2/3 -1/9 -1/3 -1/9 -1/9 -1/9 -1/9 -1/9 1) @x379 @x863 @x165 @x864 @x863 @x864 @x863 @x189 @x820 false) (or $x866 $x817))))
 (let ((@x862 (unit-resolution @x868 @x861 $x866)))
 (let ((@x869 ((_ th-lemma arith gcd-test -2/3 -2/3 -1/9 1/6 -1/18 -1/9 -1/3 -1/3 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9) @x374 @x379 @x862 @x860 @x379 @x165 @x380 @x165 @x862 @x860 @x379 @x165 @x862 @x860 @x379 @x165 @x861 @x860 @x379 @x165 @x318 @x189 false)))
 (let ((@x870 (lemma @x869 $x839)))
 (let ((?x954 (+ (* 8 c!3) (* 4 ?x224) (* 4 k!2) (* 3 m!1) (* (- 26) n!0) (* (- 4) ?x555))))
 (let ((@x963 ((_ th-lemma arith farkas 9/4 15/4 3 1 1 1 1 1 1) ((_ th-lemma arith gomory-cut 3/4 3/5 1/5 1/5 1/5) @x374 @x380 @x870 @x870 @x318 (>= ?x954 54)) @x379 @x165 @x870 @x915 @x870 @x915 @x189 @x915 false)))
 (let ((@x965 (lemma @x963 (not $x940))))
 ((_ th-lemma arith farkas -7/3 -5/9 -5/9 -5/3 -5/9 1) @x374 @x965 @x318 @x380 @x965 (lemma @x1199 (not $x1359)) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 81
 :arith-assert-diseq        33
 :arith-assert-lower        880
 :arith-assert-upper        337
 :arith-bound-prop          8
 :arith-branch-var          26
 :arith-conflicts           53
 :arith-eq-adapter          9
 :arith-fixed-eqs           163
 :arith-gcd-tests           234
 :arith-gomory-cuts         21
 :arith-grobner             51
 :arith-ineq-splits         26
 :arith-max-min             4204
 :arith-nonlinear-bounds    231
 :arith-nonlinear-horner    400
 :arith-num-rows            20
 :arith-offset-eqs          5
 :arith-patches             80
 :arith-patches_succ        28
 :arith-pivots              1344
 :arith-pseudo-nonlinear    162
 :arith-row-summations      4919
 :arith-tableau-max-columns 70
 :arith-tableau-max-rows    20
 :conflicts                 59
 :decisions                 230
 :del-clause                85
 :final-checks              171
 :max-memory                4.10
 :memory                    3.31
 :minimized-lits            9
 :mk-bool-var               185
 :mk-clause                 113
 :num-allocs                3424008
 :num-checks                1
 :propagations              196
 :rlimit-count              285622
 :time                      0.08
 :total-time                0.09)
