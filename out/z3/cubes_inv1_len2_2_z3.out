unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x506 (* k!2 n!0)))
 (let ((?x328 (* (- 1) ?x506)))
 (let ((?x369 (* 3 c!3)))
 (let ((?x345 (* (- 2) n!0)))
 (let ((?x463 (+ k!2 ?x345 ?x369 ?x328)))
 (let (($x229 (<= ?x463 0)))
 (let (($x135 (= ?x463 0)))
 (let ((?x493 (* k!2 m!1)))
 (let ((?x275 (* 64 ?x493)))
 (let ((?x599 (* 10 (* k!2 m!1 m!1))))
 (let ((?x451 (* 10 (* k!2 k!2 m!1))))
 (let ((?x403 (* k!2 k!2)))
 (let ((?x474 (* 60 ?x403)))
 (let ((?x296 (* 24 c!3)))
 (let ((?x559 (* 60 (* k!2 k!2 n!0))))
 (let ((?x320 (* 24 k!2)))
 (let ((?x311 (+ (* 60 (* k!2 n!0 m!1)) ?x320 ?x559 ?x296 (* 10 (* k!2 n!0 m!1 m!1)) (* 64 (* m!1 c!3)) (* 10 (* k!2 n!0 m!1 c!3)) (* 60 (* k!2 n!0 c!3)) ?x474 (* 10 (* k!2 k!2 n!0 m!1)) (* 10 (* m!1 m!1 c!3)) ?x451 ?x599 ?x275 (* 60 (* k!2 c!3)) (* 10 (* k!2 m!1 c!3)) (* 10 (* n!0 m!1 m!1 c!3)) (* 60 (* n!0 m!1 c!3)))))
 (let ((?x409 (* 9 ?x506)))
 (let ((?x307 (* (- 2) ?x493)))
 (let ((?x382 (* (- 1) ?x403)))
 (let ((?x327 (* n!0 c!3)))
 (let ((?x363 (* 9 ?x327)))
 (let ((?x317 (* (- 1) (* m!1 m!1))))
 (let ((?x357 (* 27 c!3)))
 (let ((?x306 (* 5 m!1)))
 (let ((?x417 (* (- 9) n!0)))
 (let ((?x502 (* 32 k!2)))
 (let ((?x154 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x155 (= ?x154 (- 6))))
 (let (($x347 (not $x155)))
 (let ((?x134 (* 3 k!2)))
 (let ((?x201 (+ ?x134 ?x345 ?x369 (* (- 1) (* n!0 m!1)) ?x328)))
 (let (($x412 (or (not (= ?x201 2)) (not (= (+ k!2 ?x417 (* (- 3) (* n!0 n!0)) m!1) 6)) $x347 (not (= (+ ?x502 ?x417 ?x306 ?x357 ?x317 ?x363 ?x382 ?x307 ?x409) 13)) (not (= (* ?x311 (+ (- 6) (* (- 6) n!0) m!1)) 0)))))
 (let ((?x177 (* n!0 n!0)))
 (let ((?x605 (* (- 3) ?x177)))
 (let ((?x467 (* (- 3) n!0)))
 (let ((?x189 (+ k!2 ?x467 ?x605)))
 (let (($x473 (= ?x189 0)))
 (let ((?x454 (* 18 c!3)))
 (let ((?x446 (* 5 k!2)))
 (let ((?x233 (+ ?x446 ?x417 ?x454 ?x363 ?x382)))
 (let (($x606 (= ?x233 4)))
 (let (($x360 (and $x155 $x606 $x135 $x473 $x412)))
 (let ((?x381 (* 9 (* c!3 n!0))))
 (let ((?x367 (+ ?x296 ?x320 ?x474 (* 60 (* c!3 k!2)) (* 10 (* c!3 k!2 m!1)) ?x451 (* 60 (* c!3 m!1 n!0)) (* 60 (* c!3 k!2 n!0)) ?x559 ?x599 ?x275 (* 10 (* c!3 m!1 m!1)) (* 10 (* c!3 k!2 m!1 n!0)) (* 10 (* k!2 k!2 m!1 n!0)) (* 10 (* c!3 m!1 m!1 n!0)) (* 10 (* k!2 m!1 m!1 n!0)) (* 64 (* c!3 m!1)) (* 60 (* k!2 m!1 n!0)))))
 (let (($x601 (or (not (= (* ?x367 (+ (- 6) m!1 (* (- 6) n!0))) 0)) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ ?x357 ?x502 ?x306 ?x417 ?x382 ?x409 ?x381 ?x307 ?x317) 13)) (not (= (+ ?x369 ?x134 ?x345 ?x328 (* (- 1) (* m!1 n!0))) 2)) (not (= (+ k!2 m!1 ?x417 ?x605) 6)))))
 (let (($x211 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x157 (and $x211 (= (+ ?x454 ?x446 ?x417 ?x382 ?x381) 4) (= (+ ?x369 k!2 ?x345 ?x328) 0) $x473 $x601)))
 (let (($x442 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x583 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x570 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x578 (not $x570)))
 (let ((?x160 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x548 (+ (* 27 c) (* 32 k) ?x460 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x552 (not (= ?x548 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x595 (* 10 (* k m m n))))
 (let ((?x593 (* 10 (* c m m n))))
 (let ((?x591 (* 10 (* k k m n))))
 (let ((?x589 (* 10 (* c k m n))))
 (let ((?x215 (+ (* 24 c) (* 24 k) (* 60 ?x46) (* 60 (* c k)) (* 10 (* c k m)) (* 10 (* k k m)) (* 60 (* c m n)) (* 60 (* c k n)) (* 60 (* k k n)) (* 10 (* k m m)) (* 64 (* k m)) (* 10 (* c m m)) ?x589 ?x591 ?x593 ?x595 (* 64 (* c m)) (* 60 (* k m n)))))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x215 ?x132) 0)) $x361 $x552 $x578 $x583)))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x330 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let ((?x277 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x245 (* 10 (* (+ 1 n) (+ 6 m) (+ k m) (+ c k)))))
 (let (($x438 (= (* (+ ?x245 (* 4 (* (+ 6 m) (+ c k)))) ?x132) 0)))
 (let (($x278 (not $x438)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x243 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x471 ?x61) (- 3))))
 (let (($x254 (not $x243)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x178 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x460 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x366 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x366 (or (not (= ?x178 13)) $x254 $x278 (not (= ?x277 2)) $x361))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x448 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x583 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x570 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x578 (not $x570)))
 (let ((?x160 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x548 (+ (* 27 c) (* 32 k) ?x460 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x552 (not (= ?x548 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x595 (* 10 (* k m m n))))
 (let ((?x593 (* 10 (* c m m n))))
 (let ((?x591 (* 10 (* k k m n))))
 (let ((?x589 (* 10 (* c k m n))))
 (let ((?x215 (+ (* 24 c) (* 24 k) (* 60 ?x46) (* 60 (* c k)) (* 10 (* c k m)) (* 10 (* k k m)) (* 60 (* c m n)) (* 60 (* c k n)) (* 60 (* k k n)) (* 10 (* k m m)) (* 64 (* k m)) (* 10 (* c m m)) ?x589 ?x591 ?x593 ?x595 (* 64 (* c m)) (* 60 (* k m n)))))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (let (($x217 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x215 ?x132) 0)) $x361 $x552 $x578 $x583))))
 (let ((?x277 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let ((?x245 (* 10 (* (+ 1 n) (+ 6 m) (+ k m) (+ c k)))))
 (let (($x438 (= (* (+ ?x245 (* 4 (* (+ 6 m) (+ c k)))) ?x132) 0)))
 (let (($x278 (not $x438)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x243 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x471 ?x61) (- 3))))
 (let (($x254 (not $x243)))
 (let ((?x37 (* 18 c)))
 (let ((?x178 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x460 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x366 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let (($x173 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x222 ?x223) 4)))
 (let (($x522 (and $x143 $x173 (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x366 (or (not (= ?x178 13)) $x254 $x278 (not (= ?x277 2)) $x361))))
 (rewrite (= $x522 $x217))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x427 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x482 (* (- 18) c)))
 (let ((?x281 (+ ?x482 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x276 (+ (* 10 (* (+ 1 n) (+ 6 m) ?x74 (+ c k))) (* 4 (* (+ 6 m) (+ c k))))))
 (let (($x278 (not (= (* ?x276 ?x132) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x243 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x471 ?x61) (- 3))))
 (let (($x254 (not $x243)))
 (let ((?x56 (* 2 n)))
 (let ((?x462 (+ 1 n)))
 (let ((?x246 (* ?x462 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x459 (or (not (= (+ ?x512 (* (- 4) k) ?x246 ?x471 ?x56) (- 2))) $x254 $x278 (not (= ?x281 (- 13))) $x361)))
 (let (($x366 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let (($x390 (= (+ ?x482 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x143 $x390 (= (+ ?x512 (* n k) ?x400 ?x56) 0) $x366 $x459)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x394 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let ((?x277 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x245 (* 10 (* (+ 1 n) (+ 6 m) (+ k m) (+ c k)))))
 (let (($x438 (= (* (+ ?x245 (* 4 (* (+ 6 m) (+ c k)))) ?x132) 0)))
 (let (($x278 (not $x438)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x243 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x471 ?x61) (- 3))))
 (let (($x254 (not $x243)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x460 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x178 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x460 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x366 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x522 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x366 (or (not (= ?x178 13)) $x254 $x278 (not (= ?x277 2)) $x361))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x482 (* (- 18) c)))
 (let ((?x281 (+ ?x482 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x462 (+ 1 n)))
 (let ((?x246 (* ?x462 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x459 (or (not (= (+ ?x512 (* (- 4) k) ?x246 ?x471 ?x56) (- 2))) $x254 $x278 (not (= ?x281 (- 13))) $x361)))
 (let (($x390 (= (+ ?x482 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x533 (and $x143 $x390 (= (+ ?x512 (* n k) ?x400 ?x56) 0) $x366 $x459)))
 (rewrite (= $x533 $x522)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 ?x66))))
 (let (($x104 (= (* ?x68 (+ (* 10 ?x71 ?x74 ?x99 ?x66) (* 4 ?x71 ?x99))) 0)))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x106 (or (not (= ?x68 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not $x104))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x106)))))))))))))))) :qid k!38))
 ))
 (let ((?x430 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x482 (* (- 18) c)))
 (let ((?x281 (+ ?x482 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x126 (* (- 6) n)))
 (let ((?x132 (+ (- 6) m ?x126)))
 (let ((?x276 (+ (* 10 (* (+ 1 n) (+ 6 m) ?x74 (+ c k))) (* 4 (* (+ 6 m) (+ c k))))))
 (let (($x278 (not (= (* ?x276 ?x132) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x400 (* (- 1) k)))
 (let (($x243 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x400 ?x471 ?x61) (- 3))))
 (let (($x254 (not $x243)))
 (let ((?x56 (* 2 n)))
 (let ((?x462 (+ 1 n)))
 (let ((?x246 (* ?x462 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x459 (or (not (= (+ ?x512 (* (- 4) k) ?x246 ?x471 ?x56) (- 2))) $x254 $x278 (not (= ?x281 (- 13))) $x361)))
 (let (($x366 (= (+ (* 3 (* n n)) ?x400 ?x61) 0)))
 (let (($x390 (= (+ ?x482 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x533 (and $x143 $x390 (= (+ ?x512 (* n k) ?x400 ?x56) 0) $x366 $x459)))
 (let ((?x102 (+ (* 10 (+ c k) ?x74 (+ m 6) (+ n 1)) (* 4 (+ c k) (+ m 6)))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x106 (or (not (= ?x68 0)) (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x102) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x107 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x106)))
 (rewrite (= $x107 $x533))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x499 (mp (mp @x109 (quant-intro (proof-bind ?x430) (= $x108 $x427)) $x427) (rewrite (= $x427 $x427)) $x427)))
 (let ((@x252 (mp (mp @x499 (quant-intro (proof-bind ?x394) (= $x427 $x330)) $x330) (quant-intro (proof-bind ?x448) (= $x330 $x442)) $x442)))
 (let ((@x250 (mp (mp~ @x252 (sk (~ $x442 $x157)) $x157) (rewrite (= $x157 $x360)) $x360)))
 (let ((@x432 (and-elim @x250 $x135)))
 (let ((@x318 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x135) $x229)) @x432 $x229)))
 (let (($x537 (>= ?x463 0)))
 (let ((@x678 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x135) $x537)) @x432 $x537)))
 (let (($x647 (<= k!2 0)))
 (let (($x372 (>= ?x201 2)))
 (let (($x139 (not $x372)))
 (let (($x434 (<= ?x201 2)))
 (let (($x507 (<= ?x189 0)))
 (let ((@x458 (and-elim @x250 $x473)))
 (let ((@x359 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x473) $x507)) @x458 $x507)))
 (let (($x356 (>= ?x189 0)))
 (let ((@x455 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x473) $x356)) @x458 $x356)))
 (let (($x120 (<= ?x154 (- 6))))
 (let ((@x521 (and-elim @x250 $x155)))
 (let ((@x515 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x347 $x120)) @x521 $x120)))
 (let (($x556 (>= ?x154 (- 6))))
 (let ((@x622 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x347 $x556)) @x521 $x556)))
 (let ((@x656 ((_ th-lemma arith) (hypothesis (not $x434)) @x622 @x515 @x678 @x318 @x455 @x359 false)))
 (let (($x399 (<= ?x233 4)))
 (let ((@x447 (and-elim @x250 $x606)))
 (let ((@x675 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x606) $x399)) @x447 $x399)))
 (let (($x490 (>= ?x233 4)))
 (let ((@x239 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x606) $x490)) @x447 $x490)))
 (let ((@x1098 ((_ th-lemma arith) @x239 @x675 @x239 @x675 @x455 @x359 @x239 @x675 @x239 @x675 @x678 @x318 @x455 @x359 @x455 @x359 @x622 @x515 @x455 @x359 @x678 @x318 (hypothesis $x372) (lemma @x656 $x434) false)))
 (let ((@x1099 (lemma @x1098 $x139)))
 (let (($x116 (<= k!2 3)))
 (let (($x991 (<= c!3 0)))
 (let (($x652 (not $x991)))
 (let (($x115 (>= c!3 0)))
 (let (($x698 (>= n!0 0)))
 (let (($x813 (>= k!2 0)))
 (let (($x117 (not $x813)))
 (let (($x827 (= k!2 0)))
 (let (($x649 (not $x827)))
 (let (($x661 (not $x698)))
 (let ((@x628 (hypothesis $x661)))
 (let ((@x653 (hypothesis $x827)))
 (let ((@x870 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x649 $x813)) @x653 $x813)))
 (let (($x481 (>= ?x403 0)))
 (let ((@x513 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x481)) false) $x481)))
 (let (($x696 (>= ?x177 0)))
 (let ((@x707 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x696)) false) $x696)))
 (let ((@x822 ((_ th-lemma arith gomory-cut 3/8 1/2 1/8 1/8 -3/4) @x707 @x455 @x513 @x239 @x628 (>= (+ k!2 ?x467 (* (- 1) ?x177) (* 2 c!3) ?x327) 2))))
 (let (($x777 (>= n!0 (- 1))))
 (let (($x824 (not $x777)))
 (let (($x820 (not $x115)))
 (let ((@x821 (hypothesis $x820)))
 (let ((@x819 (hypothesis $x777)))
 (let ((@x826 (lemma ((_ th-lemma arith farkas 1 -1 2 2 2 2 1 1 1) @x359 @x822 @x819 @x628 @x819 @x628 @x821 @x819 @x628 false) (or $x824 $x698 $x115))))
 (let ((@x831 ((_ th-lemma arith) @x622 (unit-resolution @x826 @x821 @x628 $x824) @x822 @x455 @x359 @x622 @x515 @x455 @x359 @x455 @x359 @x239 @x675 @x678 @x318 @x455 @x359 false)))
 (let ((@x871 (unit-resolution (lemma @x831 (or $x115 $x698)) @x628 $x115)))
 (let ((@x872 ((_ th-lemma arith farkas 1 1 2 3 1 1) @x318 @x870 @x628 @x871 @x870 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x649 $x647)) @x653 $x647) false)))
 (let ((@x641 (hypothesis $x139)))
 (let (($x868 (not $x647)))
 (let ((@x875 (hypothesis $x868)))
 (let ((@x879 ((_ th-lemma arith farkas 1 1 3 1/3 1/3 1/3 1/3 1/3 1 1) @x318 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x813 $x647)) @x875 $x813) @x871 @x515 @x875 @x678 @x641 @x628 @x875 @x628 false)))
 (let ((@x816 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x827 $x868 $x117)) (unit-resolution (lemma @x879 (or $x647 $x372 $x698)) @x628 @x641 $x647) (unit-resolution (lemma @x872 (or $x649 $x698)) @x628 $x649) $x117)))
 (let (($x890 (<= (+ n!0 ?x177) (- 1))))
 (let (($x627 (not $x890)))
 (let ((@x629 (hypothesis $x890)))
 (let ((@x772 (unit-resolution (lemma ((_ th-lemma arith) @x629 @x628 @x629 @x628 @x629 false) (or $x627 $x698)) @x628 $x627)))
 (let ((@x123 (lemma ((_ th-lemma arith farkas -3 -1 1) @x772 @x455 @x816 false) (or $x698 $x372))))
 (let ((@x670 (unit-resolution @x123 @x1099 $x698)))
 (let (($x704 (not $x116)))
 (let ((@x1064 (hypothesis $x704)))
 (let ((@x1102 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x116 $x868)) @x1064 $x868)))
 (let ((@x669 ((_ th-lemma arith) @x821 (hypothesis $x698) @x821 @x875 @x678 @x239 @x675 @x622 @x515 @x239 @x675 @x455 @x359 @x239 @x675 @x678 @x318 @x239 @x675 false)))
 (let ((@x898 (lemma @x669 (or $x115 $x661 $x647))))
 (let ((@x979 (hypothesis $x991)))
 (let ((@x774 (hypothesis $x115)))
 (let ((@x980 ((_ th-lemma arith) @x622 @x515 @x455 @x359 @x774 @x979 @x455 @x359 @x455 @x359 @x774 @x979 @x774 @x979 @x239 @x675 @x455 @x359 @x678 @x318 @x774 @x979 false)))
 (let ((@x1104 (unit-resolution (lemma @x980 (or $x652 $x820)) (unit-resolution @x898 @x1102 @x670 $x115) $x652)))
 (let (($x140 (<= n!0 1)))
 (let (($x1067 (not $x140)))
 (let (($x125 (<= m!1 6)))
 (let (($x1001 (not $x125)))
 (let ((@x1056 (hypothesis $x125)))
 (let ((@x766 (unit-resolution @x123 @x641 $x698)))
 (let ((@x1048 (lemma ((_ th-lemma arith farkas 1 2 1 1 1 -1 1 1) @x515 @x875 @x515 @x766 @x1056 @x678 @x641 @x1056 false) (or $x1001 $x647 $x372))))
 (let ((@x1059 (hypothesis $x140)))
 (let ((@x1065 (hypothesis $x652)))
 (let ((@x1066 ((_ th-lemma arith farkas 1 -3 2 1 1 1 1 1) @x318 @x1065 @x1059 @x1064 @x678 @x641 (hypothesis $x1001) @x1059 false)))
 (let ((@x1106 (unit-resolution (lemma @x1066 (or $x1067 $x991 $x116 $x372 $x125)) (unit-resolution @x1048 @x1102 @x1099 $x1001) @x1099 @x1064 @x1104 $x1067)))
 (let (($x768 (<= c!3 1)))
 (let ((@x1091 ((_ th-lemma arith) (hypothesis (not $x768)) @x455 @x359 @x678 @x318 @x455 @x359 @x455 @x359 @x239 @x675 false)))
 (let ((@x905 (hypothesis $x768)))
 (let ((@x977 (hypothesis $x1067)))
 (let ((@x903 ((_ th-lemma arith) @x977 @x455 @x977 @x455 @x905 @x239 @x1065 @x905 @x1065 @x905 @x905 @x1065 @x905 @x1065 @x905 false)))
 (let ((@x1108 (unit-resolution (lemma @x903 (or (not $x768) $x140 $x991)) (lemma @x1091 $x768) (or $x140 $x991))))
 (let ((@x138 (hypothesis $x116)))
 (let ((@x655 ((_ th-lemma arith farkas 21 21 21 21 21 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9 9 6 6 6 6 6 6 6 6 6 1) @x678 @x641 @x875 @x515 @x766 @x678 @x641 @x875 @x515 @x766 @x455 @x707 @x138 @x678 @x641 @x875 @x515 @x766 @x455 @x707 @x138 @x675 @x766 (unit-resolution @x898 @x875 @x766 $x115) @x678 @x641 @x875 @x515 @x766 @x455 @x707 @x138 @x678 @x138 false)))
 (let ((@x1111 (unit-resolution (lemma @x655 (or $x704 $x372 $x647)) (lemma (unit-resolution @x1108 @x1106 @x1104 false) $x116) @x1099 $x647)))
 (let ((@x1116 (unit-resolution ((_ th-lemma arith assign-bounds -3 -3 -1) (or $x813 (not $x696) $x661 (not $x356))) @x707 @x455 (or $x813 $x661))))
 (let ((@x1117 (unit-resolution @x1116 @x670 $x813)))
 ((_ th-lemma arith gcd-test -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 2/3 2/3 2/3 2/3 2/3 2/3) @x455 @x359 @x239 @x675 @x513 @x1117 @x1111 @x1117 @x1111 @x1117 @x1111 @x678 @x318 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 54
 :arith-assert-diseq        25
 :arith-assert-lower        412
 :arith-assert-upper        250
 :arith-bound-prop          8
 :arith-branch-var          17
 :arith-conflicts           25
 :arith-eq-adapter          15
 :arith-fixed-eqs           70
 :arith-gcd-tests           101
 :arith-gomory-cuts         12
 :arith-grobner             20
 :arith-ineq-splits         17
 :arith-max-min             2343
 :arith-nonlinear-bounds    209
 :arith-nonlinear-horner    184
 :arith-num-rows            16
 :arith-offset-eqs          6
 :arith-patches             39
 :arith-patches_succ        6
 :arith-pivots              299
 :arith-pseudo-nonlinear    83
 :arith-row-summations      1367
 :arith-tableau-max-columns 65
 :arith-tableau-max-rows    16
 :conflicts                 29
 :decisions                 130
 :del-clause                50
 :final-checks              89
 :max-memory                3.91
 :memory                    3.25
 :minimized-lits            6
 :mk-bool-var               146
 :mk-clause                 93
 :num-allocs                2158460
 :num-checks                1
 :propagations              101
 :rlimit-count              86642
 :time                      0.04
 :total-time                0.05)
