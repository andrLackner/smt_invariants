unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let (($x1067 (>= c!3 (- 1))))
 (let ((?x460 (* k!2 n!0)))
 (let ((?x455 (* (- 1) ?x460)))
 (let ((?x578 (* (- 2) n!0)))
 (let ((?x513 (* 3 c!3)))
 (let ((?x291 (+ k!2 ?x513 ?x578 ?x455)))
 (let (($x585 (<= ?x291 0)))
 (let (($x468 (= ?x291 0)))
 (let ((?x370 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x381 (= ?x370 (- 6))))
 (let (($x501 (not $x381)))
 (let (($x355 (not (= (+ k!2 (* (- 3) (* n!0 n!0)) (* (- 9) n!0) m!1) 6))))
 (let ((?x203 (* (- 9) ?x460)))
 (let ((?x449 (* k!2 k!2)))
 (let ((?x424 (* (- 5) m!1)))
 (let ((?x400 (* m!1 m!1)))
 (let ((?x384 (* c!3 n!0)))
 (let ((?x593 (* (- 9) ?x384)))
 (let ((?x198 (* 9 n!0)))
 (let ((?x423 (* (- 27) c!3)))
 (let ((?x421 (* (- 32) k!2)))
 (let ((?x197 (* k!2 m!1)))
 (let ((?x429 (* 2 ?x197)))
 (let ((?x401 (* 72 (* c!3 c!3 m!1))))
 (let ((?x463 (* k!2 k!2 m!1)))
 (let ((?x512 (* 72 ?x463)))
 (let ((?x350 (* 216 ?x449)))
 (let ((?x601 (* 42 m!1)))
 (let ((?x404 (* 6 (* c!3 c!3 m!1 m!1))))
 (let ((?x571 (* 7 ?x400)))
 (let ((?x398 (* 216 (* c!3 c!3))))
 (let ((?x419 (* 6 (* k!2 k!2 m!1 m!1))))
 (let ((?x600 (* 42 k!2)))
 (let ((?x535 (* 7 ?x197)))
 (let ((?x586 (+ ?x535 (* 432 (* k!2 c!3)) ?x600 ?x419 ?x398 ?x571 ?x404 ?x601 ?x350 ?x512 (* 12 (* k!2 c!3 m!1 m!1)) (* 144 (* k!2 c!3 m!1)) ?x401)))
 (let (($x496 (= (* ?x586 (+ 13 ?x429 ?x421 ?x423 ?x198 ?x593 ?x400 ?x424 ?x449 ?x203)) 0)))
 (let (($x458 (= (+ (* 3 k!2) ?x513 ?x578 ?x455 (* (- 1) (* n!0 m!1))) 2)))
 (let (($x478 (or (not (= (+ ?x429 ?x421 ?x423 ?x198 ?x593 ?x400 ?x424 ?x449 ?x203) (- 13))) (not $x458) (not $x496) $x355 $x501)))
 (let ((?x334 (* (- 3) n!0)))
 (let ((?x347 (* n!0 n!0)))
 (let ((?x157 (* (- 3) ?x347)))
 (let ((?x252 (+ k!2 ?x157 ?x334)))
 (let (($x331 (= ?x252 0)))
 (let ((?x450 (* (- 1) ?x449)))
 (let ((?x451 (* 9 ?x384)))
 (let ((?x371 (* (- 9) n!0)))
 (let ((?x590 (* 18 c!3)))
 (let ((?x594 (* 5 k!2)))
 (let ((?x498 (+ ?x594 ?x590 ?x371 ?x451 ?x450)))
 (let (($x257 (= ?x498 4)))
 (let (($x153 (and $x381 $x257 $x468 $x331 $x478)))
 (let (($x277 (= (+ ?x513 (* 3 k!2) ?x578 ?x455 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x177 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x371 ?x450 (* 9 ?x460) ?x451 (* (- 2) ?x197) (* (- 1) ?x400))))
 (let ((?x420 (+ ?x600 ?x601 ?x350 ?x398 (* 432 (* c!3 k!2)) ?x512 (* 144 (* c!3 k!2 m!1)) ?x535 ?x571 ?x401 ?x404 (* 12 (* c!3 k!2 m!1 m!1)) ?x419)))
 (let (($x239 (= (* ?x420 (+ 13 ?x423 ?x421 ?x424 ?x198 ?x449 ?x203 ?x593 ?x429 ?x400)) 0)))
 (let (($x319 (or (not $x239) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= ?x177 13)) (not (= (+ k!2 m!1 ?x371 ?x157) 6)) (not $x277))))
 (let (($x448 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x328 (and $x448 (= (+ ?x590 ?x594 ?x371 ?x450 ?x451) 4) (= (+ ?x513 k!2 ?x578 ?x455) 0) (= (+ k!2 ?x334 ?x157) 0) $x319)))
 (let (($x405 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x606 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x614 (not $x606)))
 (let (($x551 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x158 (* c n)))
 (let ((?x160 (* 9 ?x158)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x523 (+ (* 27 c) (* 32 k) ?x435 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x527 (not (= ?x523 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x486 (* m m)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x507 (+ 13 (* (- 27) c) (* (- 32) k) ?x452 ?x45 ?x46 (* (- 9) ?x52) (* (- 9) ?x158) (* 2 (* k m)) ?x486)))
 (let ((?x656 (* 6 (* k k m m))))
 (let ((?x650 (* 6 (* c c m m))))
 (let ((?x579 (* 7 ?x486)))
 (let ((?x485 (* k m)))
 (let ((?x566 (* 7 ?x485)))
 (let ((?x359 (+ (* 42 k) (* 42 m) (* 216 ?x46) (* 216 (* c c)) (* 432 (* c k)) (* 72 (* k k m)) (* 144 (* c k m)) ?x566 ?x579 (* 72 (* c c m)) ?x650 (* 12 (* c k m m)) ?x656)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x359 ?x507) 0)) $x361 $x527 $x551 $x614)))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x410 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x508 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x435 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let ((?x288 (+ (* 7 (* (+ 6 m) ?x74)) (* 6 (* (+ 6 m) (+ 6 m) ?x71 ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x383 (= (+ ?x260 (* 4 k) (* (- 1) (* ?x575 ?x74)) m ?x262) 2)))
 (let (($x327 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x327 (or (not $x383) $x256 $x289 (not (= ?x508 13)) $x361))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x111 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x606 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x614 (not $x606)))
 (let (($x551 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x158 (* c n)))
 (let ((?x160 (* 9 ?x158)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x523 (+ (* 27 c) (* 32 k) ?x435 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x527 (not (= ?x523 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x486 (* m m)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x507 (+ 13 (* (- 27) c) (* (- 32) k) ?x452 ?x45 ?x46 (* (- 9) ?x52) (* (- 9) ?x158) (* 2 (* k m)) ?x486)))
 (let ((?x656 (* 6 (* k k m m))))
 (let ((?x650 (* 6 (* c c m m))))
 (let ((?x579 (* 7 ?x486)))
 (let ((?x485 (* k m)))
 (let ((?x566 (* 7 ?x485)))
 (let ((?x359 (+ (* 42 k) (* 42 m) (* 216 ?x46) (* 216 (* c c)) (* 432 (* c k)) (* 72 (* k k m)) (* 144 (* c k m)) ?x566 ?x579 (* 72 (* c c m)) ?x650 (* 12 (* c k m m)) ?x656)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (let (($x275 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x359 ?x507) 0)) $x361 $x527 $x551 $x614))))
 (let ((?x37 (* 18 c)))
 (let ((?x508 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x435 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let ((?x288 (+ (* 7 (* (+ 6 m) ?x74)) (* 6 (* (+ 6 m) (+ 6 m) ?x71 ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let (($x383 (= (+ ?x260 (* 4 k) (* (- 1) (* ?x575 ?x74)) m ?x262) 2)))
 (let (($x327 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let (($x502 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x222 ?x223) 4)))
 (let (($x285 (and $x143 $x502 (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x327 (or (not $x383) $x256 $x289 (not (= ?x508 13)) $x361))))
 (rewrite (= $x285 $x275))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x411 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x288 (+ (* 7 (* (+ 6 m) ?x74)) (* 6 (* (+ 6 m) (+ 6 m) ?x71 ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x471 (* ?x575 ?x74)))
 (let ((?x499 (* (- 3) c)))
 (let (($x229 (or (not (= (+ ?x499 (* (- 4) k) ?x471 ?x640 ?x56) (- 2))) $x256 $x289 $x361 (not (= (+ ?x467 ?x557 ?x246 ?x452 ?x45 ?x80) (- 13))))))
 (let (($x327 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let (($x487 (= (+ ?x467 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x143 $x487 (= (+ ?x499 (* n k) ?x514 ?x56) 0) $x327 $x229))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x597 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x508 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x435 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let ((?x288 (+ (* 7 (* (+ 6 m) ?x74)) (* 6 (* (+ 6 m) (+ 6 m) ?x71 ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x383 (= (+ ?x260 (* 4 k) (* (- 1) (* ?x575 ?x74)) m ?x262) 2)))
 (let (($x327 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x285 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x327 (or (not $x383) $x256 $x289 (not (= ?x508 13)) $x361))))
 (let ((?x56 (* 2 n)))
 (let ((?x471 (* ?x575 ?x74)))
 (let ((?x499 (* (- 3) c)))
 (let (($x229 (or (not (= (+ ?x499 (* (- 4) k) ?x471 ?x640 ?x56) (- 2))) $x256 $x289 $x361 (not (= (+ ?x467 ?x557 ?x246 ?x452 ?x45 ?x80) (- 13))))))
 (let (($x487 (= (+ ?x467 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x472 (and $x143 $x487 (= (+ ?x499 (* n k) ?x514 ?x56) 0) $x327 $x229)))
 (rewrite (= $x472 $x285)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x99 (+ m 6)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 (+ n 1)) ?x80)))
 (let (($x104 (= (* ?x81 (+ (* 7 ?x74 ?x99) (* 6 ?x71 ?x71 ?x99 ?x99))) 0)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x106 (or $x70 (not (= ?x81 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not $x104))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x106))))))))))))))))) :qid k!38))
 ))
 (let ((?x413 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x288 (+ (* 7 (* (+ 6 m) ?x74)) (* 6 (* (+ 6 m) (+ 6 m) ?x71 ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x471 (* ?x575 ?x74)))
 (let ((?x499 (* (- 3) c)))
 (let (($x229 (or (not (= (+ ?x499 (* (- 4) k) ?x471 ?x640 ?x56) (- 2))) $x256 $x289 $x361 (not (= (+ ?x467 ?x557 ?x246 ?x452 ?x45 ?x80) (- 13))))))
 (let (($x327 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let (($x487 (= (+ ?x467 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x472 (and $x143 $x487 (= (+ ?x499 (* n k) ?x514 ?x56) 0) $x327 $x229)))
 (let ((?x102 (+ (* 7 ?x74 (+ m 6)) (* 6 ?x71 ?x71 (+ m 6) (+ m 6)))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 (+ n 1)) ?x80)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x106 (or $x70 (not (= ?x81 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x81 ?x102) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x107 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x106)))
 (rewrite (= $x107 $x472)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x474 (mp (mp @x109 (quant-intro (proof-bind ?x413) (= $x108 $x411)) $x411) (rewrite (= $x411 $x411)) $x411)))
 (let ((@x120 (mp (mp @x474 (quant-intro (proof-bind ?x597) (= $x411 $x410)) $x410) (quant-intro (proof-bind ?x111) (= $x410 $x405)) $x405)))
 (let ((@x269 (mp (mp~ @x120 (sk (~ $x405 $x328)) $x328) (rewrite (= $x328 $x153)) $x153)))
 (let ((@x335 (and-elim @x269 $x468)))
 (let ((@x237 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x468) $x585)) @x335 $x585)))
 (let (($x152 (>= ?x291 0)))
 (let ((@x351 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x468) $x152)) @x335 $x152)))
 (let (($x427 (<= ?x498 4)))
 (let ((@x199 (and-elim @x269 $x257)))
 (let ((@x134 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x257) $x427)) @x199 $x427)))
 (let (($x428 (>= ?x498 4)))
 (let ((@x509 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x257) $x428)) @x199 $x428)))
 (let (($x456 (<= ?x252 0)))
 (let ((@x297 (and-elim @x269 $x331)))
 (let ((@x465 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x331) $x456)) @x297 $x456)))
 (let (($x510 (>= ?x252 0)))
 (let ((@x390 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x331) $x510)) @x297 $x510)))
 (let ((@x1097 ((_ th-lemma arith) (hypothesis (not $x1067)) @x390 @x465 @x390 @x465 @x390 @x465 @x509 @x134 @x351 @x237 false)))
 (let ((@x1110 (lemma @x1097 $x1067)))
 (let (($x886 (>= ?x384 2)))
 (let (($x577 (>= ?x384 1)))
 (let (($x394 (<= k!2 0)))
 (let ((@x442 (hypothesis (not $x577))))
 (let (($x683 (>= c!3 1)))
 (let (($x412 (>= c!3 0)))
 (let (($x330 (not $x412)))
 (let ((@x313 (hypothesis $x330)))
 (let (($x303 (>= n!0 0)))
 (let (($x453 (<= ?x370 (- 6))))
 (let ((@x492 (and-elim @x269 $x381)))
 (let ((@x128 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x501 $x453)) @x492 $x453)))
 (let (($x454 (>= ?x370 (- 6))))
 (let ((@x325 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x501 $x454)) @x492 $x454)))
 (let (($x232 (not $x303)))
 (let ((@x316 (hypothesis $x232)))
 (let (($x242 (>= n!0 (- 1))))
 (let (($x304 (not $x242)))
 (let ((@x293 (hypothesis $x242)))
 (let (($x342 (>= ?x449 0)))
 (let ((@x357 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x342)) false) $x342)))
 (let ((@x416 (lemma ((_ th-lemma arith farkas -2/5 -1/3 -6/5 -3/5 1/15 1/15 1 1 1 1) @x316 @x465 @x313 @x442 @x357 @x509 @x293 @x316 @x293 @x316 false) (or $x304 $x303 $x412 $x577))))
 (let ((@x534 ((_ th-lemma arith farkas 1 1 1) @x442 @x313 (unit-resolution @x416 @x313 @x316 @x442 $x304) false)))
 (let ((@x559 ((_ th-lemma arith) (unit-resolution (lemma @x534 (or $x412 $x577 $x303)) @x316 @x442 $x412) @x316 @x325 @x390 @x465 @x325 @x128 @x390 @x465 @x351 @x237 @x509 @x134 @x390 @x465 @x351 @x237 false)))
 (let ((@x324 (unit-resolution (lemma @x559 (or $x303 $x577)) @x442 $x303)))
 (let ((@x546 ((_ th-lemma arith) @x324 @x442 @x357 @x509 @x313 @x324 @x442 @x357 @x509 @x313 @x324 @x509 @x313 @x313 false)))
 (let ((@x726 (unit-resolution (lemma @x546 (or $x412 $x577)) @x442 $x412)))
 (let ((@x114 (hypothesis (not $x683))))
 (let ((@x380 (hypothesis $x412)))
 (let ((@x692 ((_ th-lemma arith) @x325 @x128 @x380 @x114 @x390 @x465 @x380 @x114 @x380 @x114 @x509 @x134 @x380 @x114 @x351 @x237 false)))
 (let ((@x741 (unit-resolution (lemma @x692 (or $x683 $x330)) @x726 $x683)))
 (let (($x170 (not $x394)))
 (let ((@x169 (hypothesis $x170)))
 (let ((@x730 (lemma ((_ th-lemma arith farkas 3 1 2 2 1 1 1 1) @x726 @x237 @x442 @x741 @x169 @x324 @x442 @x741 false) (or $x394 $x577))))
 (let (($x353 (>= k!2 0)))
 (let ((@x161 (lemma ((_ th-lemma arith farkas 1/3 1 -1/3) @x390 (hypothesis $x303) (hypothesis (not $x353)) false) (or $x353 $x232))))
 (let ((@x739 (unit-resolution @x161 @x324 $x353)))
 (let ((@x740 ((_ th-lemma arith farkas 1/6 1/3 3/2 1/2 1/2 1/2) @x739 @x390 @x741 @x739 (unit-resolution @x730 @x442 $x394) @x237 false)))
 (let ((@x679 (lemma @x740 $x577)))
 (let ((@x1113 ((_ th-lemma arith) @x390 @x465 @x679 (hypothesis (not $x886)) @x351 @x237 @x390 @x465 @x351 @x237 @x509 @x134 @x351 @x237 @x390 @x465 false)))
 (let ((?x811 (+ k!2 (* (- 2) ?x347) ?x578)))
 (let (($x812 (>= ?x811 1)))
 (let (($x983 (not $x812)))
 (let (($x971 (<= k!2 3)))
 (let (($x1182 (<= n!0 0)))
 (let (($x1446 (>= n!0 2)))
 (let (($x1422 (not $x1446)))
 (let ((@x2947 ((_ th-lemma arith) (hypothesis $x1446) @x390 @x465 @x351 @x237 @x390 @x465 @x351 @x237 @x509 @x134 @x390 @x465 @x351 @x237 false)))
 (let ((@x1441 (hypothesis $x1422)))
 (let (($x1128 (not $x1182)))
 (let ((@x1172 (hypothesis $x1128)))
 (let ((@x1442 (lemma ((_ th-lemma arith farkas 1 2 3 3 3 1 1) @x237 @x1441 @x679 @x1172 @x1441 @x1172 @x1441 false) (or $x1446 $x1182))))
 (let (($x820 (not $x971)))
 (let ((@x1109 (hypothesis $x820)))
 (let (($x988 (>= ?x463 112)))
 (let ((@x1190 ((_ th-lemma arith) ((_ th-lemma arith gomory-cut 1 1/2) @x390 @x1109 (>= ?x811 2)) @x465 @x1109 (hypothesis (not $x988)) @x390 @x465 @x390 @x465 @x325 @x128 @x509 @x134 @x390 @x465 @x351 @x237 @x390 @x465 false)))
 (let ((@x725 ((_ th-lemma arith farkas 1 1 1 1 1) @x679 (unit-resolution (lemma @x1190 (or $x988 $x971)) @x1109 $x988) @x1109 @x325 (hypothesis $x1182) false)))
 (let ((@x2898 (unit-resolution (lemma @x725 (or $x1128 $x971)) (unit-resolution @x1442 (lemma @x2947 $x1422) $x1182) $x971)))
 (let ((@x1100 (hypothesis $x971)))
 (let ((@x981 (hypothesis $x812)))
 (let ((@x1136 ((_ th-lemma arith) @x679 @x981 @x465 @x1100 @x351 @x1110 @x134 @x509 @x134 @x509 @x134 @x351 @x237 @x981 @x465 @x1100 @x981 @x465 @x1100 @x981 @x465 @x1100 @x981 @x465 @x1100 @x351 @x237 @x981 @x465 @x1100 @x390 @x465 @x981 @x465 @x1100 false)))
 (let ((@x2853 (unit-resolution (lemma ((_ th-lemma arith farkas -1/3 -2/3 1) @x169 @x390 (hypothesis $x983) false) (or $x812 $x394)) (unit-resolution (lemma @x1136 (or $x820 $x983)) @x2898 $x983) $x394)))
 (let (($x1204 (>= m!1 0)))
 (let (($x979 (>= ?x586 0)))
 (let ((?x1058 (+ (* 2 k!2) (* (- 1) ?x347) (* 6 c!3) (* (- 4) n!0) (* 3 ?x384))))
 (let (($x897 (>= ?x1058 2)))
 (let ((@x1068 ((_ th-lemma arith) (lemma ((_ th-lemma arith farkas -3 1 1 1) (hypothesis (not $x897)) @x390 @x509 @x357 false) $x897) (hypothesis (not $x979)) @x390 @x465 @x390 @x465 @x390 @x465 @x509 @x134 @x351 @x237 @x390 @x465 @x325 @x128 @x390 @x465 @x351 @x237 @x390 @x465 @x509 @x134 @x325 @x128 @x325 @x128 @x509 @x134 @x351 @x237 false)))
 (let ((@x2883 ((_ th-lemma arith) (hypothesis (not $x1204)) (lemma @x1068 $x979) @x390 @x465 @x325 @x128 @x390 @x465 @x390 @x465 @x390 @x465 @x390 @x465 @x325 @x128 @x325 @x128 @x351 @x237 @x325 @x128 @x351 @x237 @x509 @x134 @x351 @x237 @x509 @x134 @x325 @x128 @x509 @x134 @x509 @x134 @x351 @x237 false)))
 (let (($x1095 (>= ?x347 1)))
 (let (($x1063 (>= ?x347 0)))
 (let ((@x1161 ((_ th-lemma arith) (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x1063)) false) $x1063) (hypothesis (not $x1095)) @x325 @x128 @x390 @x465 @x390 @x465 @x509 @x134 @x390 @x465 @x390 @x465 @x509 @x134 @x351 @x237 @x390 @x465 false)))
 (let ((@x1163 (lemma @x1161 $x1095)))
 (let ((@x2912 (unit-resolution ((_ th-lemma arith assign-bounds 1/3 1 1/6 1/6) (or $x353 (not $x510) (not $x1095) (not $x1204) (not $x454))) @x390 @x325 @x1163 (lemma @x2883 $x1204) $x353)))
 (let (($x1232 (<= m!1 0)))
 (let ((@x2880 (unit-resolution ((_ th-lemma arith assign-bounds 1 -2 2 6) (or $x1232 (not $x454) $x170 (not $x510) (not $x1095))) @x390 @x2853 @x1163 @x325 $x1232)))
 ((_ th-lemma arith farkas -1/18 -1/12 -1/12 5/18 -1/18 -1/18 1/2 1) @x134 @x128 @x2880 @x2912 @x2912 @x2853 (lemma @x1113 $x886) @x1110 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 167
 :arith-assert-diseq        95
 :arith-assert-lower        1899
 :arith-assert-upper        878
 :arith-bound-prop          40
 :arith-branch-var          99
 :arith-conflicts           104
 :arith-eq-adapter          14
 :arith-fixed-eqs           217
 :arith-gcd-tests           965
 :arith-gomory-cuts         72
 :arith-grobner             105
 :arith-ineq-splits         99
 :arith-max-min             8490
 :arith-nonlinear-bounds    512
 :arith-nonlinear-horner    1075
 :arith-num-rows            22
 :arith-offset-eqs          17
 :arith-patches             210
 :arith-patches_succ        13
 :arith-pivots              2816
 :arith-pseudo-nonlinear    217
 :arith-row-summations      18633
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    22
 :conflicts                 114
 :decisions                 650
 :del-clause                247
 :final-checks              451
 :max-memory                4.38
 :memory                    3.50
 :minimized-lits            28
 :mk-bool-var               552
 :mk-clause                 335
 :num-allocs                17437992
 :num-checks                1
 :propagations              713
 :restarts                  1
 :rlimit-count              1039954
 :time                      0.37
 :total-time                0.37)
