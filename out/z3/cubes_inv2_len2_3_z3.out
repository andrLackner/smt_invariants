unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x475 (* (- 1) k!2)))
 (let ((?x153 (* n!0 n!0)))
 (let ((?x579 (* 3 ?x153)))
 (let ((?x490 (+ ?x579 (* 3 n!0) ?x475)))
 (let (($x388 (<= ?x490 0)))
 (let (($x462 (= ?x490 0)))
 (let ((?x111 (* (- 27) c!3)))
 (let ((?x570 (* m!1 m!1)))
 (let ((?x544 (* n!0 k!2)))
 (let ((?x584 (* (- 9) ?x544)))
 (let ((?x237 (* 2 (* m!1 k!2))))
 (let ((?x165 (* (- 32) k!2)))
 (let ((?x405 (* n!0 c!3)))
 (let ((?x276 (* (- 9) ?x405)))
 (let ((?x723 (* 9 n!0)))
 (let ((?x173 (* (- 5) m!1)))
 (let ((?x191 (* k!2 k!2)))
 (let ((?x439 (* 324 (* k!2 k!2 k!2))))
 (let ((?x705 (* m!1 n!0)))
 (let ((?x546 (* (- 9) ?x705)))
 (let ((?x707 (* (- 9) k!2)))
 (let ((?x341 (* (- 9) m!1)))
 (let ((?x116 (+ (* 648 (* m!1 k!2 c!3)) (* 216 (* m!1 m!1 k!2 c!3)) (* 324 (* m!1 m!1 c!3)) (* 108 (* m!1 m!1 m!1 c!3)) (* 108 (* m!1 k!2 k!2 c!3)) (* 9 (* m!1 m!1 m!1 m!1 c!3)) (* 9 (* m!1 m!1 m!1 m!1 k!2)) ?x341 (* 324 (* k!2 k!2 c!3)) (* 9 (* m!1 m!1 k!2 k!2 k!2)) (* 216 (* m!1 m!1 k!2 k!2)) (* 108 (* m!1 m!1 m!1 k!2)) (* 648 (* m!1 k!2 k!2)) (* 9 (* m!1 m!1 k!2 k!2 c!3)) ?x707 ?x584 (* 324 (* m!1 m!1 k!2)) (* 108 (* m!1 k!2 k!2 k!2)) (* 18 (* m!1 m!1 m!1 k!2 c!3)) (* 18 (* m!1 m!1 m!1 k!2 k!2)) ?x546 ?x439)))
 (let (($x122 (= (* ?x116 (+ 13 ?x191 ?x173 ?x723 ?x276 ?x165 ?x237 ?x584 ?x570 ?x111)) 0)))
 (let (($x204 (= (+ (* 2 n!0) (* (- 3) k!2) ?x544 (* (- 3) c!3) ?x705) (- 2))))
 (let ((?x587 (+ m!1 (* (- 6) n!0))))
 (let (($x588 (= ?x587 6)))
 (let (($x415 (not $x588)))
 (let (($x138 (or (not (= (+ ?x191 ?x173 ?x723 ?x276 ?x165 ?x237 ?x584 ?x570 ?x111) (- 13))) $x415 (not $x204) (not $x122) (not (= (+ ?x579 (* (- 1) m!1) ?x723 ?x475) (- 6))))))
 (let ((?x476 (* (- 3) c!3)))
 (let ((?x322 (* 2 n!0)))
 (let ((?x477 (+ ?x322 ?x475 ?x544 ?x476)))
 (let (($x371 (= ?x477 0)))
 (let ((?x387 (+ ?x191 ?x723 ?x276 (* (- 5) k!2) (* (- 18) c!3))))
 (let (($x436 (= ?x387 (- 4))))
 (let (($x146 (and $x588 $x436 $x371 $x462 $x138)))
 (let ((?x161 (* k!2 n!0)))
 (let ((?x343 (* (- 9) ?x161)))
 (let ((?x716 (+ 13 ?x111 ?x165 ?x173 ?x723 ?x191 ?x343 (* (- 9) (* c!3 n!0)) (* 2 (* k!2 m!1)) ?x570)))
 (let ((?x174 (+ ?x707 ?x341 ?x343 (* 216 (* k!2 k!2 m!1 m!1)) ?x439 (* 108 (* k!2 k!2 k!2 m!1)) (* 216 (* c!3 k!2 m!1 m!1)) (* 324 (* c!3 m!1 m!1)) (* 108 (* c!3 m!1 m!1 m!1)) (* 648 (* c!3 k!2 m!1)) (* 324 (* c!3 k!2 k!2)) ?x546 (* 648 (* k!2 k!2 m!1)) (* 108 (* k!2 m!1 m!1 m!1)) (* 9 (* c!3 k!2 k!2 m!1 m!1)) (* 9 (* k!2 k!2 k!2 m!1 m!1)) (* 18 (* c!3 k!2 m!1 m!1 m!1)) (* 18 (* k!2 k!2 m!1 m!1 m!1)) (* 9 (* c!3 m!1 m!1 m!1 m!1)) (* 9 (* k!2 m!1 m!1 m!1 m!1)) (* 108 (* c!3 k!2 k!2 m!1)) (* 324 (* k!2 m!1 m!1)))))
 (let ((?x163 (* (- 1) ?x161)))
 (let ((?x160 (* (- 2) n!0)))
 (let ((?x164 (* 3 c!3)))
 (let ((?x169 (* c!3 n!0)))
 (let ((?x411 (* 9 ?x169)))
 (let ((?x168 (* (- 1) ?x191)))
 (let ((?x710 (* (- 9) n!0)))
 (let ((?x396 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x710 ?x168 (* 9 ?x161) ?x411 (* (- 2) (* k!2 m!1)) (* (- 1) ?x570))))
 (let (($x542 (or (not (= (+ k!2 m!1 ?x710 (* (- 3) ?x153)) 6)) $x415 (not (= ?x396 13)) (not (= (+ ?x164 (* 3 k!2) ?x160 ?x163 (* (- 1) ?x705)) 2)) (not (= (* ?x174 ?x716) 0)))))
 (let (($x372 (and $x588 (= (+ (* 18 c!3) (* 5 k!2) ?x710 ?x168 ?x411) 4) (= (+ ?x164 k!2 ?x160 ?x163) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x153)) 0) $x542)))
 (let (($x742 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x485 (* m m)))
 (let ((?x52 (* k n)))
 (let ((?x402 (* (- 9) ?x52)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x451 (* (- 5) m)))
 (let ((?x506 (+ 13 (* (- 27) c) (* (- 32) k) ?x451 ?x45 ?x46 ?x402 (* (- 9) (* c n)) (* 2 (* k m)) ?x485)))
 (let ((?x668 (* 9 (* k m m m m))))
 (let ((?x666 (* 9 (* c m m m m))))
 (let ((?x656 (* 9 (* k k k m m))))
 (let ((?x654 (* 9 (* c k k m m))))
 (let ((?x535 (* m n)))
 (let ((?x706 (* (- 9) ?x535)))
 (let ((?x703 (* (- 9) m)))
 (let ((?x408 (* (- 9) k)))
 (let ((?x218 (+ ?x408 ?x703 ?x402 (* 216 (* k k m m)) (* 324 (* k k k)) (* 108 (* k k k m)) (* 216 (* c k m m)) (* 324 (* c m m)) (* 108 (* c m m m)) (* 648 (* c k m)) (* 324 (* c k k)) ?x706 (* 648 (* k k m)) (* 108 (* k m m m)) ?x654 ?x656 (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x666 ?x668 (* 108 (* c k k m)) (* 324 (* k m m)))))
 (let ((?x262 (* (- 1) ?x52)))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let (($x613 (not (= (+ ?x259 (* 3 k) ?x261 ?x262 (* (- 1) ?x535)) 2))))
 (let ((?x157 (* c n)))
 (let ((?x159 (* 9 ?x157)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x522 (+ (* 27 c) (* 32 k) ?x434 ?x221 ?x222 (* 9 ?x52) ?x159 (* (- 2) (* k m)) (* (- 1) ?x485))))
 (let (($x526 (not (= ?x522 13))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let (($x478 (or (not (= (+ k m ?x221 (* (- 3) (* n n))) 6)) $x360 $x526 $x613 (not (= (* ?x218 ?x506) 0)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x264 (= (+ ?x259 k ?x261 ?x262) 0)))
 (let (($x219 (= (+ (* 18 c) (* 5 k) ?x221 ?x222 ?x159) 4)))
 (and $x142 $x219 $x264 $x300 $x478)))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x510 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let ((?x752 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x261)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x416 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x434 ?x221 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x451 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x336 (+ 1 n)))
 (let ((?x312 (* ?x336 ?x71)))
 (let ((?x407 (* (- 9) ?x312)))
 (let ((?x176 (* (- 23) k)))
 (let ((?x465 (* (- 18) c)))
 (let ((?x271 (+ (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 ?x71)) (* (- 9) (* ?x336 ?x74)))))
 (let (($x320 (not (= (* ?x271 (+ 13 ?x465 ?x176 ?x407 ?x451 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x443 (* (- 1) m)))
 (let ((?x323 (* (- 1) k)))
 (let (($x290 (not (= (+ (* 3 (* ?x336 ?x336)) ?x323 ?x443 ?x61) (- 3)))))
 (let (($x486 (= (+ (* 3 (* n n)) ?x323 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x142 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x221 ?x222) 4) (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x486 (or $x290 $x320 $x360 (not (= ?x416 13)) (not (= ?x752 2))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x741 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x485 (* m m)))
 (let ((?x52 (* k n)))
 (let ((?x402 (* (- 9) ?x52)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x451 (* (- 5) m)))
 (let ((?x506 (+ 13 (* (- 27) c) (* (- 32) k) ?x451 ?x45 ?x46 ?x402 (* (- 9) (* c n)) (* 2 (* k m)) ?x485)))
 (let ((?x668 (* 9 (* k m m m m))))
 (let ((?x666 (* 9 (* c m m m m))))
 (let ((?x656 (* 9 (* k k k m m))))
 (let ((?x654 (* 9 (* c k k m m))))
 (let ((?x535 (* m n)))
 (let ((?x706 (* (- 9) ?x535)))
 (let ((?x703 (* (- 9) m)))
 (let ((?x408 (* (- 9) k)))
 (let ((?x218 (+ ?x408 ?x703 ?x402 (* 216 (* k k m m)) (* 324 (* k k k)) (* 108 (* k k k m)) (* 216 (* c k m m)) (* 324 (* c m m)) (* 108 (* c m m m)) (* 648 (* c k m)) (* 324 (* c k k)) ?x706 (* 648 (* k k m)) (* 108 (* k m m m)) ?x654 ?x656 (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x666 ?x668 (* 108 (* c k k m)) (* 324 (* k m m)))))
 (let ((?x262 (* (- 1) ?x52)))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let (($x613 (not (= (+ ?x259 (* 3 k) ?x261 ?x262 (* (- 1) ?x535)) 2))))
 (let ((?x157 (* c n)))
 (let ((?x159 (* 9 ?x157)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x522 (+ (* 27 c) (* 32 k) ?x434 ?x221 ?x222 (* 9 ?x52) ?x159 (* (- 2) (* k m)) (* (- 1) ?x485))))
 (let (($x526 (not (= ?x522 13))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let (($x478 (or (not (= (+ k m ?x221 (* (- 3) (* n n))) 6)) $x360 $x526 $x613 (not (= (* ?x218 ?x506) 0)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x264 (= (+ ?x259 k ?x261 ?x262) 0)))
 (let (($x219 (= (+ (* 18 c) (* 5 k) ?x221 ?x222 ?x159) 4)))
 (let (($x234 (and $x142 $x219 $x264 $x300 $x478)))
 (let ((?x752 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x261)))
 (let ((?x37 (* 18 c)))
 (let ((?x416 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x434 ?x221 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x71 (+ c k)))
 (let ((?x336 (+ 1 n)))
 (let ((?x312 (* ?x336 ?x71)))
 (let ((?x407 (* (- 9) ?x312)))
 (let ((?x176 (* (- 23) k)))
 (let ((?x465 (* (- 18) c)))
 (let ((?x271 (+ (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 ?x71)) (* (- 9) (* ?x336 ?x74)))))
 (let (($x320 (not (= (* ?x271 (+ 13 ?x465 ?x176 ?x407 ?x451 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x443 (* (- 1) m)))
 (let ((?x323 (* (- 1) k)))
 (let (($x290 (not (= (+ (* 3 (* ?x336 ?x336)) ?x323 ?x443 ?x61) (- 3)))))
 (let (($x486 (= (+ (* 3 (* n n)) ?x323 ?x61) 0)))
 (let (($x446 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x221 ?x222) 4)))
 (let (($x480 (and $x142 $x446 (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x486 (or $x290 $x320 $x360 (not (= ?x416 13)) (not (= ?x752 2))))))
 (rewrite (= $x480 $x234)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x348 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x451 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x336 (+ 1 n)))
 (let ((?x312 (* ?x336 ?x71)))
 (let ((?x407 (* (- 9) ?x312)))
 (let ((?x176 (* (- 23) k)))
 (let ((?x465 (* (- 18) c)))
 (let ((?x271 (+ (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 ?x71)) (* (- 9) (* ?x336 ?x74)))))
 (let (($x320 (not (= (* ?x271 (+ 13 ?x465 ?x176 ?x407 ?x451 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x443 (* (- 1) m)))
 (let ((?x323 (* (- 1) k)))
 (let (($x290 (not (= (+ (* 3 (* ?x336 ?x336)) ?x323 ?x443 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x370 (* ?x336 ?x74)))
 (let ((?x131 (* (- 3) c)))
 (let (($x378 (or (not (= (+ ?x131 (* (- 4) k) ?x370 ?x443 ?x56) (- 2))) $x290 (not (= (+ ?x465 ?x176 ?x407 ?x451 ?x45 ?x80) (- 13))) $x320 $x360)))
 (let (($x486 (= (+ (* 3 (* n n)) ?x323 ?x61) 0)))
 (let (($x568 (= (+ ?x465 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x142 $x568 (= (+ ?x131 (* n k) ?x323 ?x56) 0) $x486 $x378))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x577 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let ((?x752 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x261)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x416 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x434 ?x221 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x451 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x336 (+ 1 n)))
 (let ((?x312 (* ?x336 ?x71)))
 (let ((?x407 (* (- 9) ?x312)))
 (let ((?x176 (* (- 23) k)))
 (let ((?x465 (* (- 18) c)))
 (let ((?x271 (+ (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 ?x71)) (* (- 9) (* ?x336 ?x74)))))
 (let (($x320 (not (= (* ?x271 (+ 13 ?x465 ?x176 ?x407 ?x451 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x443 (* (- 1) m)))
 (let ((?x323 (* (- 1) k)))
 (let (($x290 (not (= (+ (* 3 (* ?x336 ?x336)) ?x323 ?x443 ?x61) (- 3)))))
 (let (($x486 (= (+ (* 3 (* n n)) ?x323 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x480 (and $x142 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x221 ?x222) 4) (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x486 (or $x290 $x320 $x360 (not (= ?x416 13)) (not (= ?x752 2))))))
 (let ((?x56 (* 2 n)))
 (let ((?x370 (* ?x336 ?x74)))
 (let ((?x131 (* (- 3) c)))
 (let (($x378 (or (not (= (+ ?x131 (* (- 4) k) ?x370 ?x443 ?x56) (- 2))) $x290 (not (= (+ ?x465 ?x176 ?x407 ?x451 ?x45 ?x80) (- 13))) $x320 $x360)))
 (let (($x568 (= (+ ?x465 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x438 (and $x142 $x568 (= (+ ?x131 (* n k) ?x323 ?x56) 0) $x486 $x378)))
 (rewrite (= $x438 $x480)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x98 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x101 (- (* 9 ?x71 ?x74 ?x74 ?x98 ?x98) (* 9 ?x74 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 (+ n 1)) ?x80)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x105 (or $x70 (not (= ?x81 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x81 ?x101) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x105))))))))))))))))) :qid k!38))
 ))
 (let ((?x350 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x451 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x336 (+ 1 n)))
 (let ((?x312 (* ?x336 ?x71)))
 (let ((?x407 (* (- 9) ?x312)))
 (let ((?x176 (* (- 23) k)))
 (let ((?x465 (* (- 18) c)))
 (let ((?x271 (+ (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 ?x71)) (* (- 9) (* ?x336 ?x74)))))
 (let (($x320 (not (= (* ?x271 (+ 13 ?x465 ?x176 ?x407 ?x451 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x443 (* (- 1) m)))
 (let ((?x323 (* (- 1) k)))
 (let (($x290 (not (= (+ (* 3 (* ?x336 ?x336)) ?x323 ?x443 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x370 (* ?x336 ?x74)))
 (let ((?x131 (* (- 3) c)))
 (let (($x378 (or (not (= (+ ?x131 (* (- 4) k) ?x370 ?x443 ?x56) (- 2))) $x290 (not (= (+ ?x465 ?x176 ?x407 ?x451 ?x45 ?x80) (- 13))) $x320 $x360)))
 (let (($x486 (= (+ (* 3 (* n n)) ?x323 ?x61) 0)))
 (let (($x568 (= (+ ?x465 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x438 (and $x142 $x568 (= (+ ?x131 (* n k) ?x323 ?x56) 0) $x486 $x378)))
 (let ((?x101 (- (* 9 ?x71 ?x74 ?x74 (+ m 6) (+ m 6)) (* 9 ?x74 (+ n 1)))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 (+ n 1)) ?x80)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x105 (or $x70 (not (= ?x81 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x81 ?x101) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x106 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x105)))
 (rewrite (= $x106 $x438)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x473 (mp (mp @x108 (quant-intro (proof-bind ?x350) (= $x107 $x348)) $x348) (rewrite (= $x348 $x348)) $x348)))
 (let ((@x515 (mp (mp @x473 (quant-intro (proof-bind ?x577) (= $x348 $x510)) $x510) (quant-intro (proof-bind ?x741) (= $x510 $x742)) $x742)))
 (let ((@x719 (mp (mp~ @x515 (sk (~ $x742 $x372)) $x372) (rewrite (= $x372 $x146)) $x146)))
 (let ((@x182 (and-elim @x719 $x462)))
 (let ((@x145 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x462) $x388)) @x182 $x388)))
 (let (($x524 (>= ?x490 0)))
 (let ((@x386 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x462) $x524)) @x182 $x524)))
 (let (($x124 (<= ?x477 0)))
 (let ((@x455 (and-elim @x719 $x371)))
 (let ((@x127 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x371) $x124)) @x455 $x124)))
 (let (($x136 (>= ?x477 0)))
 (let ((@x430 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x371) $x136)) @x455 $x136)))
 (let (($x123 (<= ?x387 (- 4))))
 (let ((@x128 (and-elim @x719 $x436)))
 (let ((@x548 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x436) $x123)) @x128 $x123)))
 (let (($x137 (>= ?x387 (- 4))))
 (let ((@x132 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x436) $x137)) @x128 $x137)))
 (let (($x889 (<= c!3 1)))
 (let ((@x1411 ((_ th-lemma arith) (hypothesis (not $x889)) @x386 @x145 @x430 @x127 @x386 @x145 @x386 @x145 @x132 @x548 false)))
 (let (($x553 (>= c!3 0)))
 (let ((@x431 (hypothesis (not $x553))))
 (let (($x252 (>= ?x405 1)))
 (let (($x826 (>= (+ ?x191 ?x723 ?x276 (* (- 4) k!2) (* (- 17) c!3)) (- 3))))
 (let (($x880 (not $x826)))
 (let (($x143 (<= ?x587 6)))
 (let ((@x202 (and-elim @x719 $x588)))
 (let (($x139 (>= ?x587 6)))
 (let ((@x806 ((_ th-lemma arith) @x431 (hypothesis $x826) @x132 @x548 @x386 @x145 @x386 @x145 @x132 @x548 @x386 @x145 @x132 @x548 @x386 @x145 @x132 @x548 @x386 @x145 @x132 @x548 @x430 @x127 @x386 @x145 @x430 @x127 @x386 @x145 @x386 @x145 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x415 $x139)) @x202 $x139) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x415 $x143)) @x202 $x143) @x132 @x548 false)))
 (let (($x286 (>= n!0 (- 1))))
 (let (($x474 (>= k!2 0)))
 (let ((@x130 (hypothesis (not $x474))))
 (let (($x556 (>= ?x544 0)))
 (let ((@x592 (lemma ((_ th-lemma arith farkas 1/3 1/3 1 1) @x145 @x130 (hypothesis (not $x556)) @x130 false) (or $x556 $x474))))
 (let ((@x456 (unit-resolution @x592 @x130 $x556)))
 (let ((@x427 ((_ th-lemma arith) @x456 @x431 @x127 @x130 @x130 @x456 @x431 @x127 @x130 @x386 @x145 false)))
 (let ((@x770 ((_ th-lemma arith) @x130 (unit-resolution (lemma @x427 (or $x553 $x474)) @x130 $x553) @x386 @x145 @x430 @x127 @x430 @x127 @x386 @x145 @x386 @x145 @x430 @x127 @x132 @x548 @x430 @x127 false)))
 (let ((@x691 ((_ th-lemma arith) (hypothesis (not $x286)) (lemma @x770 $x474) @x386 @x145 @x430 @x127 @x386 @x145 @x386 @x145 @x132 @x548 @x386 @x145 false)))
 (let ((@x357 (lemma @x691 $x286)))
 (let ((@x754 ((_ th-lemma arith farkas -9 9 13 5 -4) @x357 (hypothesis (not $x252)) @x431 (unit-resolution (lemma @x806 (or $x880 $x553)) @x431 $x880) @x132 false)))
 (let ((@x868 (unit-resolution (lemma @x754 (or $x252 $x553)) @x431 $x252)))
 (let ((@x895 ((_ th-lemma arith farkas 1 2/3 2/3 1/9 5/3 5/3 5/3 5/3 5/3 5/3 -5/9 1 1 1) @x431 @x868 @x431 @x548 @x357 @x868 @x431 @x357 @x868 @x431 @x386 @x357 @x868 @x431 false)))
 ((_ th-lemma arith) (lemma @x895 $x553) (lemma @x1411 $x889) @x386 @x145 @x132 @x548 @x386 @x145 @x430 @x127 @x386 @x145 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 88
 :arith-assert-diseq        11
 :arith-assert-lower        502
 :arith-assert-upper        294
 :arith-bound-prop          1
 :arith-branch-var          16
 :arith-conflicts           36
 :arith-eq-adapter          9
 :arith-fixed-eqs           130
 :arith-gcd-tests           141
 :arith-gomory-cuts         13
 :arith-grobner             38
 :arith-ineq-splits         16
 :arith-max-min             4329
 :arith-nonlinear-bounds    195
 :arith-nonlinear-horner    312
 :arith-num-rows            23
 :arith-offset-eqs          1
 :arith-patches             46
 :arith-patches_succ        15
 :arith-pivots              557
 :arith-pseudo-nonlinear    143
 :arith-row-summations      2667
 :arith-tableau-max-columns 84
 :arith-tableau-max-rows    23
 :conflicts                 40
 :decisions                 122
 :del-clause                33
 :final-checks              114
 :max-memory                4.04
 :memory                    3.29
 :minimized-lits            13
 :mk-bool-var               157
 :mk-clause                 93
 :num-allocs                2690698
 :num-checks                1
 :propagations              76
 :rlimit-count              149526
 :time                      0.04
 :total-time                0.05)
