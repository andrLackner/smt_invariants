unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x168 (* (- 1) m!1)))
 (let ((?x177 (+ (* 6 n!0) ?x168)))
 (let (($x495 (<= ?x177 (- 6))))
 (let (($x178 (= ?x177 (- 6))))
 (let ((?x432 (* (- 3) c!3)))
 (let ((?x400 (* 2 n!0)))
 (let ((?x190 (* n!0 k!2)))
 (let ((?x176 (* n!0 m!1)))
 (let ((?x397 (+ ?x176 ?x190 ?x400 (* (- 3) k!2) ?x432)))
 (let ((?x514 (* n!0 n!0)))
 (let ((?x416 (* 3 ?x514)))
 (let ((?x431 (* (- 1) k!2)))
 (let ((?x442 (* 9 n!0)))
 (let ((?x339 (+ ?x442 ?x431 ?x416 ?x168)))
 (let ((?x570 (* k!2 k!2)))
 (let ((?x538 (* 3 ?x570)))
 (let ((?x169 (* 3 (* c!3 m!1))))
 (let ((?x250 (* 42 (* k!2 k!2 k!2))))
 (let ((?x248 (* 4 ?x514)))
 (let ((?x451 (* k!2 m!1)))
 (let ((?x251 (* 3 ?x451)))
 (let ((?x384 (* 8 n!0)))
 (let ((?x306 (* 42 (* k!2 k!2 m!1))))
 (let ((?x268 (* 7 (* c!3 c!3 m!1 m!1))))
 (let ((?x249 (* 42 (* c!3 c!3 m!1))))
 (let ((?x557 (* 7 (* k!2 k!2 k!2 m!1))))
 (let ((?x162 (* 7 (* k!2 k!2 m!1 m!1))))
 (let ((?x473 (+ 4 (* 84 (* k!2 k!2 c!3)) ?x162 ?x557 ?x249 ?x268 (* 84 (* k!2 c!3 m!1)) ?x306 (* 3 (* k!2 c!3)) ?x384 (* 14 (* k!2 c!3 m!1 m!1)) ?x251 (* 42 (* k!2 c!3 c!3)) (* 7 (* k!2 c!3 c!3 m!1)) ?x248 (* 14 (* k!2 k!2 c!3 m!1)) ?x250 ?x169 ?x538)))
 (let ((?x484 (* 5 m!1)))
 (let ((?x567 (* (- 1) ?x570)))
 (let ((?x480 (* (- 2) ?x451)))
 (let ((?x196 (* 27 c!3)))
 (let ((?x197 (* 32 k!2)))
 (let ((?x524 (* (- 1) (* m!1 m!1))))
 (let ((?x566 (* (- 9) n!0)))
 (let ((?x179 (* n!0 c!3)))
 (let ((?x507 (* 9 ?x179)))
 (let (($x175 (= (+ ?x507 (* 9 ?x190) ?x566 ?x524 ?x197 ?x196 ?x480 ?x567 ?x484) 13)))
 (let (($x239 (not $x178)))
 (let (($x411 (or $x239 (not $x175) (not (= (* (+ (- 6) (* (- 6) n!0) m!1) ?x473) 0)) (not (= ?x339 (- 6))) (not (= ?x397 (- 2))))))
 (let ((?x444 (+ (* 3 n!0) ?x431 ?x416)))
 (let (($x395 (= ?x444 0)))
 (let ((?x240 (+ ?x190 ?x400 ?x431 ?x432)))
 (let (($x323 (= ?x240 0)))
 (let ((?x540 (* 18 c!3)))
 (let ((?x565 (* 5 k!2)))
 (let ((?x477 (+ ?x507 ?x566 ?x565 ?x540 ?x567)))
 (let (($x426 (= ?x477 4)))
 (let (($x429 (and $x178 $x426 $x323 $x395 $x411)))
 (let ((?x170 (+ 4 ?x384 ?x538 ?x306 (* 42 (* c!3 c!3 k!2)) ?x248 ?x249 (* 84 (* c!3 k!2 k!2)) ?x250 ?x251 (* 84 (* c!3 k!2 m!1)) (* 7 (* c!3 c!3 k!2 m!1)) (* 14 (* c!3 k!2 k!2 m!1)) ?x557 ?x268 (* 14 (* c!3 k!2 m!1 m!1)) ?x162 (* 3 (* c!3 k!2)) ?x169)))
 (let ((?x129 (* k!2 n!0)))
 (let ((?x359 (* (- 1) ?x129)))
 (let ((?x128 (* (- 2) n!0)))
 (let ((?x368 (* 3 c!3)))
 (let (($x292 (= (+ ?x368 (* 3 k!2) ?x128 ?x359 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x422 (* 9 (* c!3 n!0))))
 (let (($x646 (= (+ ?x196 ?x197 ?x484 ?x566 ?x567 (* 9 ?x129) ?x422 ?x480 ?x524) 13)))
 (let (($x185 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x566 (* (- 3) ?x514)) 6)) (not $x646) (not $x292) (not (= (* (+ (- 6) m!1 (* (- 6) n!0)) ?x170) 0)))))
 (let (($x408 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x502 (and $x408 (= (+ ?x540 ?x565 ?x566 ?x567 ?x422) 4) (= (+ ?x368 k!2 ?x128 ?x359) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x514)) 0) $x185)))
 (let (($x430 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x639 (* 3 (* c m))))
 (let ((?x636 (* 3 (* c k))))
 (let ((?x629 (* 7 (* k k m m))))
 (let ((?x623 (* 7 (* c c m m))))
 (let ((?x621 (* 7 (* k k k m))))
 (let ((?x615 (* 7 (* c c k m))))
 (let ((?x511 (* k m)))
 (let ((?x640 (* 3 ?x511)))
 (let ((?x271 (* n n)))
 (let ((?x412 (* 4 ?x271)))
 (let ((?x46 (* k k)))
 (let ((?x637 (* 3 ?x46)))
 (let ((?x587 (+ 4 (* 8 n) ?x637 (* 42 (* k k m)) (* 42 (* c c k)) ?x412 (* 42 (* c c m)) (* 84 (* c k k)) (* 42 (* k k k)) ?x640 (* 84 (* c k m)) ?x615 (* 14 (* c k k m)) ?x621 ?x623 (* 14 (* c k m m)) ?x629 ?x636 ?x639)))
 (let ((?x127 (* (- 6) n)))
 (let ((?x133 (+ (- 6) m ?x127)))
 (let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x571 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x579 (not $x571)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x461 (* 5 m)))
 (let ((?x549 (+ (* 27 c) (* 32 k) ?x461 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) ?x511) (* (- 1) (* m m)))))
 (let (($x553 (not (= ?x549 13))))
 (let (($x144 (= (+ m ?x127) 6)))
 (let (($x362 (not $x144)))
 (let (($x201 (or $x362 (not (= (+ k m ?x223 (* (- 3) ?x271)) 6)) $x553 $x579 (not (= (* ?x133 ?x587) 0)))))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (and $x144 $x221 $x266 $x302 $x201)))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x184 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x329 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x533 (+ (* 4 (* (+ 1 n) (+ 1 n))) ?x329 (* 3 (* (+ k m) (+ c k))))))
 (let ((?x127 (* (- 6) n)))
 (let ((?x133 (+ (- 6) m ?x127)))
 (let (($x498 (not (= (* ?x133 ?x533) 0))))
 (let (($x144 (= (+ m ?x127) 6)))
 (let (($x362 (not $x144)))
 (let ((?x61 (* 3 n)))
 (let ((?x371 (* (- 1) m)))
 (let ((?x388 (* (- 1) k)))
 (let (($x303 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x388 ?x371 ?x61) (- 3))))
 (let (($x237 (not $x303)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let ((?x318 (+ ?x261 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x263)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x461 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x328 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x461 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x419 (= (+ (* 3 (* n n)) ?x388 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x419 (or (not (= ?x328 13)) (not (= ?x318 2)) $x237 $x362 $x498))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x437 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x639 (* 3 (* c m))))
 (let ((?x636 (* 3 (* c k))))
 (let ((?x629 (* 7 (* k k m m))))
 (let ((?x623 (* 7 (* c c m m))))
 (let ((?x621 (* 7 (* k k k m))))
 (let ((?x615 (* 7 (* c c k m))))
 (let ((?x511 (* k m)))
 (let ((?x640 (* 3 ?x511)))
 (let ((?x271 (* n n)))
 (let ((?x412 (* 4 ?x271)))
 (let ((?x46 (* k k)))
 (let ((?x637 (* 3 ?x46)))
 (let ((?x587 (+ 4 (* 8 n) ?x637 (* 42 (* k k m)) (* 42 (* c c k)) ?x412 (* 42 (* c c m)) (* 84 (* c k k)) (* 42 (* k k k)) ?x640 (* 84 (* c k m)) ?x615 (* 14 (* c k k m)) ?x621 ?x623 (* 14 (* c k m m)) ?x629 ?x636 ?x639)))
 (let ((?x127 (* (- 6) n)))
 (let ((?x133 (+ (- 6) m ?x127)))
 (let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x571 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x579 (not $x571)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x461 (* 5 m)))
 (let ((?x549 (+ (* 27 c) (* 32 k) ?x461 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) ?x511) (* (- 1) (* m m)))))
 (let (($x553 (not (= ?x549 13))))
 (let (($x144 (= (+ m ?x127) 6)))
 (let (($x362 (not $x144)))
 (let (($x201 (or $x362 (not (= (+ k m ?x223 (* (- 3) ?x271)) 6)) $x553 $x579 (not (= (* ?x133 ?x587) 0)))))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (let (($x379 (and $x144 $x221 $x266 $x302 $x201)))
 (let ((?x329 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x533 (+ (* 4 (* (+ 1 n) (+ 1 n))) ?x329 (* 3 (* (+ k m) (+ c k))))))
 (let (($x498 (not (= (* ?x133 ?x533) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x371 (* (- 1) m)))
 (let ((?x388 (* (- 1) k)))
 (let (($x303 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x388 ?x371 ?x61) (- 3))))
 (let (($x237 (not $x303)))
 (let ((?x318 (+ ?x261 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x263)))
 (let ((?x37 (* 18 c)))
 (let ((?x328 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x461 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x419 (= (+ (* 3 ?x271) ?x388 ?x61) 0)))
 (let (($x278 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x223 ?x224) 4)))
 (let (($x433 (and $x144 $x278 (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x419 (or (not (= ?x328 13)) (not (= ?x318 2)) $x237 $x362 $x498))))
 (rewrite (= $x433 $x379)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x316 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x329 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x533 (+ (* 4 (* (+ 1 n) (+ 1 n))) ?x329 (* 3 (* (+ k m) (+ c k))))))
 (let ((?x127 (* (- 6) n)))
 (let ((?x133 (+ (- 6) m ?x127)))
 (let (($x498 (not (= (* ?x133 ?x533) 0))))
 (let (($x144 (= (+ m ?x127) 6)))
 (let (($x362 (not $x144)))
 (let ((?x56 (* 2 n)))
 (let ((?x371 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x517 (+ 1 n)))
 (let ((?x449 (* ?x517 ?x74)))
 (let ((?x377 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x483 (* (- 18) c)))
 (let ((?x364 (+ ?x483 (* (- 23) k) (* (- 9) (* ?x517 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x303 (= (+ (* 3 (* ?x517 ?x517)) (* (- 1) k) ?x371 (* 3 n)) (- 3))))
 (let (($x237 (not $x303)))
 (let (($x234 (or $x237 (not (= ?x364 (- 13))) (not (= (+ ?x377 (* (- 4) k) ?x449 ?x371 ?x56) (- 2))) $x362 $x498)))
 (let (($x419 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x358 (= (+ ?x483 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x144 $x358 (= (+ ?x377 (* n k) (* (- 1) k) ?x56) 0) $x419 $x234))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x458 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x329 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x533 (+ (* 4 (* (+ 1 n) (+ 1 n))) ?x329 (* 3 (* (+ k m) (+ c k))))))
 (let ((?x127 (* (- 6) n)))
 (let ((?x133 (+ (- 6) m ?x127)))
 (let (($x498 (not (= (* ?x133 ?x533) 0))))
 (let (($x144 (= (+ m ?x127) 6)))
 (let (($x362 (not $x144)))
 (let ((?x61 (* 3 n)))
 (let ((?x371 (* (- 1) m)))
 (let ((?x388 (* (- 1) k)))
 (let (($x303 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x388 ?x371 ?x61) (- 3))))
 (let (($x237 (not $x303)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let ((?x318 (+ ?x261 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x263)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x461 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x328 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x461 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x419 (= (+ (* 3 (* n n)) ?x388 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x433 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x419 (or (not (= ?x328 13)) (not (= ?x318 2)) $x237 $x362 $x498))))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x517 (+ 1 n)))
 (let ((?x449 (* ?x517 ?x74)))
 (let ((?x377 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x483 (* (- 18) c)))
 (let ((?x364 (+ ?x483 (* (- 23) k) (* (- 9) (* ?x517 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x234 (or $x237 (not (= ?x364 (- 13))) (not (= (+ ?x377 (* (- 4) k) ?x449 ?x371 ?x56) (- 2))) $x362 $x498)))
 (let (($x358 (= (+ ?x483 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x314 (and $x144 $x358 (= (+ ?x377 (* n k) ?x388 ?x56) 0) $x419 $x234)))
 (rewrite (= $x314 $x433)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x103 (+ (* 4 (+ n 1) (+ n 1)) (* 7 (+ c k) (+ c k) (+ k m) (+ m 6)) (* 3 (+ c k) (+ k m)))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) (+ k m)) (* 3 (+ n 1)))))
 (let ((?x74 (+ k m)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x107 (or (not (= ?x68 0)) (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x103) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x107))))))))))))))) :qid k!38))
 ))
 (let ((?x414 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x329 (* 7 (* (+ 6 m) (+ k m) (+ c k) (+ c k)))))
 (let ((?x533 (+ (* 4 (* (+ 1 n) (+ 1 n))) ?x329 (* 3 (* (+ k m) (+ c k))))))
 (let ((?x127 (* (- 6) n)))
 (let ((?x133 (+ (- 6) m ?x127)))
 (let (($x498 (not (= (* ?x133 ?x533) 0))))
 (let (($x144 (= (+ m ?x127) 6)))
 (let (($x362 (not $x144)))
 (let ((?x56 (* 2 n)))
 (let ((?x371 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x517 (+ 1 n)))
 (let ((?x449 (* ?x517 ?x74)))
 (let ((?x377 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x483 (* (- 18) c)))
 (let ((?x364 (+ ?x483 (* (- 23) k) (* (- 9) (* ?x517 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x303 (= (+ (* 3 (* ?x517 ?x517)) (* (- 1) k) ?x371 (* 3 n)) (- 3))))
 (let (($x237 (not $x303)))
 (let (($x234 (or $x237 (not (= ?x364 (- 13))) (not (= (+ ?x377 (* (- 4) k) ?x449 ?x371 ?x56) (- 2))) $x362 $x498)))
 (let (($x419 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x358 (= (+ ?x483 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x314 (and $x144 $x358 (= (+ ?x377 (* n k) (* (- 1) k) ?x56) 0) $x419 $x234)))
 (let ((?x103 (+ (* 4 (+ n 1) (+ n 1)) (* 7 (+ c k) (+ c k) ?x74 (+ m 6)) (* 3 (+ c k) ?x74))))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x107 (or (not (= ?x68 0)) (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x103) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x108 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x107)))
 (rewrite (= $x108 $x314)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x500 (mp (mp @x110 (quant-intro (proof-bind ?x414) (= $x109 $x316)) $x316) (rewrite (= $x316 $x316)) $x316)))
 (let ((@x439 (mp (mp @x500 (quant-intro (proof-bind ?x458) (= $x316 $x184)) $x184) (quant-intro (proof-bind ?x437) (= $x184 $x430)) $x430)))
 (let ((@x132 (mp (mp~ @x439 (sk (~ $x430 $x502)) $x502) (rewrite (= $x502 $x429)) $x429)))
 (let ((@x280 (and-elim @x132 $x178)))
 (let ((@x139 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x239 $x495)) @x280 $x495)))
 (let (($x202 (>= ?x177 (- 6))))
 (let ((@x457 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x239 $x202)) @x280 $x202)))
 (let (($x467 (<= ?x477 4)))
 (let ((@x135 (and-elim @x132 $x426)))
 (let ((@x138 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x426) $x467)) @x135 $x467)))
 (let (($x287 (>= ?x477 4)))
 (let ((@x677 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x426) $x287)) @x135 $x287)))
 (let (($x209 (<= ?x339 (- 6))))
 (let (($x456 (<= ?x444 0)))
 (let ((@x319 (and-elim @x132 $x395)))
 (let ((@x311 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x209 (not $x456) (not $x495))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x395) $x456)) @x319 $x456) @x139 $x209)))
 (let (($x208 (>= ?x339 (- 6))))
 (let (($x468 (>= ?x444 0)))
 (let ((@x401 ((_ th-lemma arith farkas -1 1 1) (hypothesis (not $x208)) @x457 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x395) $x468)) @x319 $x468) false)))
 (let ((@x322 (lemma @x401 $x208)))
 (let (($x475 (<= ?x240 0)))
 (let ((@x272 (and-elim @x132 $x323)))
 (let ((@x647 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x323) $x475)) @x272 $x475)))
 (let (($x474 (>= ?x240 0)))
 (let ((@x125 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x323) $x474)) @x272 $x474)))
 (let ((?x1615 (+ ?x190 ?x442 ?x431 (* (- 1) c!3) (* 2 ?x514) ?x168)))
 (let (($x1617 (>= ?x1615 22)))
 (let ((@x1587 (hypothesis $x1617)))
 (let ((@x1572 ((_ th-lemma arith) @x1587 @x1587 @x457 @x139 @x322 @x311 @x457 @x139 @x457 @x139 @x125 @x647 @x125 @x647 @x125 @x647 @x322 @x311 @x457 @x139 @x677 @x138 @x322 @x311 @x457 @x139 false)))
 (let ((@x1505 (lemma @x1572 (not $x1617))))
 (let (($x1687 (>= ?x1615 21)))
 (let (($x1135 (<= n!0 1)))
 (let (($x1146 (not $x1135)))
 (let (($x1034 (>= ?x190 4)))
 (let (($x195 (<= ?x397 (- 2))))
 (let (($x631 (not $x195)))
 (let (($x194 (>= ?x397 (- 2))))
 (let ((@x999 (hypothesis (not $x194))))
 (let ((@x1618 ((_ th-lemma arith) @x999 @x677 @x138 @x125 @x647 @x457 @x139 @x677 @x138 @x677 @x138 @x125 @x647 @x322 @x311 @x125 @x647 @x125 @x647 @x677 @x138 @x322 @x311 @x457 @x139 @x125 @x647 @x677 @x138 @x677 @x138 @x322 @x311 @x322 @x311 @x457 @x139 @x457 @x139 @x322 @x311 @x457 @x139 @x322 @x311 @x125 @x647 @x457 @x139 false)))
 (let ((@x1546 ((_ th-lemma arith) @x457 @x139 (lemma @x1618 $x194) (hypothesis $x195) @x125 @x647 @x322 @x311 @x322 @x311 @x457 @x139 @x457 @x139 @x125 @x647 false)))
 (let ((@x1451 (lemma @x1546 $x631)))
 (let ((@x634 (hypothesis $x631)))
 (let (($x1143 (not $x1034)))
 (let ((@x1144 (hypothesis $x1143)))
 (let ((@x1140 (hypothesis $x1135)))
 (let (($x590 (<= m!1 0)))
 (let (($x117 (not $x590)))
 (let ((@x569 (hypothesis $x590)))
 (let (($x591 (>= m!1 0)))
 (let ((@x689 (hypothesis (not $x591))))
 (let ((@x844 ((_ th-lemma arith) @x689 @x139 @x457 @x689 @x139 @x457 @x457 @x139 @x322 @x311 @x457 @x139 @x125 @x647 @x457 @x139 @x322 @x311 @x457 @x139 @x677 @x138 @x322 @x311 @x125 @x647 false)))
 (let ((@x671 (lemma @x844 $x591)))
 (let (($x402 (>= k!2 0)))
 (let (($x131 (>= n!0 0)))
 (let ((@x441 (hypothesis (not $x402))))
 (let (($x288 (not $x131)))
 (let ((@x445 (hypothesis $x288)))
 (let ((@x389 (unit-resolution (lemma ((_ th-lemma arith) @x445 @x457 @x445 @x441 @x311 false) (or $x131 $x402)) @x441 $x131)))
 (let ((@x347 (lemma ((_ th-lemma arith farkas -1/3 -1/3 1/3 1) @x441 @x311 @x457 @x389 false) $x402)))
 (let (($x850 (>= c!3 0)))
 (let ((@x848 ((_ th-lemma arith farkas 3 -1/3 3/2 1/6 1/2 -1/2 1 1 1 1 1) (hypothesis (not $x850)) @x457 @x647 @x671 @x569 @x634 @x347 @x671 @x569 @x634 @x647 false)))
 (let ((@x789 ((_ th-lemma arith farkas 3 -1/3 1 -1/3 1 1 1 1) (unit-resolution (lemma @x848 (or $x850 $x117 $x195)) @x569 @x634 $x850) @x139 @x125 @x569 @x347 @x569 @x139 @x347 false)))
 (let ((@x1002 (lemma ((_ th-lemma arith farkas 0 -1/2 1/3 -1/6 1/6 1/6 1 1 1 1) @x569 @x139 @x322 @x999 @x125 @x671 @x139 @x569 @x457 @x671 false) (or $x194 $x117))))
 (let ((@x997 ((_ th-lemma arith gcd-test 1/6 1/6 -1/6 -1/6 -1/6 -1/6 -1/6 -1/6 1/6 1/6 1/2 1/2 -1/3 -1/3) (unit-resolution @x1002 @x569 $x194) (unit-resolution (lemma @x789 (or $x117 $x195)) @x569 $x195) @x125 @x647 @x671 @x569 @x671 @x569 @x671 @x569 @x457 @x139 @x322 @x311 false)))
 (let ((@x1003 (lemma @x997 $x117)))
 (let (($x183 (<= k!2 0)))
 (let (($x1014 (not $x183)))
 (let (($x1019 (>= ?x176 0)))
 (let (($x1020 (not $x1019)))
 (let ((@x1021 (hypothesis $x1020)))
 (let ((@x971 (unit-resolution (lemma ((_ th-lemma arith farkas -6 1 1) @x445 @x457 (hypothesis $x117) false) (or $x590 $x131)) @x1003 $x131)))
 (let (($x990 (>= ?x514 0)))
 (let ((@x992 (hypothesis (not $x990))))
 (let ((@x994 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) @x992 @x322 @x139 @x992 @x347 false) $x990)))
 (let ((@x568 ((_ th-lemma arith) @x994 @x634 @x647 @x1021 @x457 @x311 @x971 @x457 @x139 @x125 @x647 @x322 @x311 @x347 @x634 @x647 @x1021 @x125 @x647 @x125 @x647 @x347 @x634 @x647 @x1021 @x347 @x634 @x647 @x1021 @x677 @x138 @x125 @x647 @x457 @x139 false)))
 (let ((@x858 (lemma @x568 (or $x1019 $x195))))
 (let ((@x878 (hypothesis $x183)))
 (let (($x868 (>= ?x179 1)))
 (let (($x555 (<= m!1 6)))
 (let (($x938 (not $x555)))
 (let ((@x929 (hypothesis $x131)))
 (let ((@x931 (hypothesis (not $x868))))
 (let ((@x894 (hypothesis $x555)))
 (let (($x935 (>= (+ (* 5 ?x179) (* (- 5) n!0) (* 4 k!2) (* 12 c!3)) 4)))
 (let (($x428 (>= ?x570 0)))
 (let ((@x936 ((_ th-lemma arith gomory-cut 1/2 1/2 -3/4 1/2 3/4 -1/8 1/8) @x347 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x428)) false) $x428) @x931 @x677 @x929 @x139 @x457 $x935)))
 (let ((@x940 (lemma ((_ th-lemma arith farkas -1 1/8 1/8 -1/4 5/4 1 1 1) @x125 @x894 @x139 @x936 @x931 @x929 @x894 @x139 false) (or $x938 $x868 $x288))))
 (let ((@x979 (unit-resolution @x940 @x931 @x929 $x938)))
 (let ((@x980 ((_ th-lemma arith gomory-cut 13/16 5/16 3/16 3/16 1/8 1/8 -9/16 1/16 1/16 1/16 1/16) @x457 @x322 @x979 @x457 @x979 @x457 @x931 @x311 @x457 @x979 @x677 (>= (+ (* 7 n!0) c!3 ?x514 ?x168) (- 4)))))
 (let ((@x981 ((_ th-lemma arith) @x931 @x979 @x457 @x980 @x457 @x139 @x322 @x311 @x457 @x139 @x457 @x139 @x322 @x311 @x125 @x647 @x457 @x139 @x677 @x138 @x457 @x139 @x322 @x311 false)))
 (let ((@x216 ((_ th-lemma arith farkas -1 1/2 1/2 3/2 -1/6 -1/6 -1/6 -1/6 1 1) @x647 (hypothesis $x1019) @x1003 (unit-resolution (lemma @x981 (or $x868 $x288)) @x971 $x868) @x347 @x878 @x138 @x878 @x347 @x878 false)))
 (let ((@x1016 (lemma @x216 (or $x1014 $x1020))))
 (let ((@x1142 (unit-resolution @x1016 (unit-resolution @x858 @x634 $x1019) $x1014)))
 (let ((@x1145 ((_ th-lemma arith farkas 1 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1) @x1144 @x1142 @x634 @x647 @x1003 @x311 @x1142 @x634 @x647 @x1003 @x1140 @x1142 @x634 @x647 @x1003 @x1140 @x457 @x1142 @x634 @x647 @x1003 @x1140 false)))
 (let ((@x1136 (unit-resolution (lemma @x1145 (or $x1146 $x1034 $x195)) @x1144 @x634 $x1146)))
 (let (($x1124 (>= (+ (* 5 ?x179) (* 5 n!0) k!2 (* 6 c!3) ?x416 ?x168) (- 5))))
 (let ((@x1138 ((_ th-lemma arith farkas 3 3 3 3 3 3 3 1 1 1 3 1 1) @x125 @x1144 @x311 ((_ th-lemma arith gomory-cut 3/5 -3/5 1/4 1/4 1/4 3/4 1/5) @x125 @x1144 @x1142 @x677 @x457 @x994 @x322 $x1124) @x1136 @x1142 @x1144 @x125 @x1144 @x311 @x1136 @x457 @x1136 false)))
 (let ((@x1726 (unit-resolution (lemma @x1138 (or $x1034 $x195)) @x1451 $x1034)))
 (let (($x1257 (<= k!2 2)))
 (let (($x1260 (not $x1257)))
 (let (($x1218 (<= k!2 1)))
 (let (($x1228 (not $x1218)))
 (let ((@x1225 (hypothesis $x1034)))
 (let ((@x1227 ((_ th-lemma arith farkas -1/3 1 1/3 -1/3 1 1) @x311 @x994 @x457 (hypothesis $x1218) @x1225 (hypothesis $x1014) false)))
 (let ((@x1729 (unit-resolution (lemma @x1227 (or $x1228 $x1143 $x183)) (unit-resolution @x1016 (unit-resolution @x858 @x1451 $x1019) $x1014) @x1726 $x1228)))
 (let ((@x1259 ((_ th-lemma arith farkas -1/3 1/3 1 1 -1/3 1) @x311 @x457 @x1225 (hypothesis $x1228) (hypothesis $x1257) @x994 false)))
 (let ((@x123 (hypothesis $x1260)))
 (let ((@x1271 ((_ th-lemma arith gcd-test 1/3 1/3 -2/3 -2/3 -2/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3) @x125 @x647 @x1225 @x123 @x1140 @x1225 @x123 @x1140 @x1225 @x123 @x1140 false)))
 (let ((@x1731 (unit-resolution (lemma @x1271 (or $x1146 $x1143 $x1257)) (unit-resolution (lemma @x1259 (or $x1260 $x1143 $x1218)) @x1729 @x1726 $x1260) @x1726 $x1146)))
 (let (($x1488 (not (<= k!2 18))))
 (let (($x1397 (<= k!2 19)))
 (let (($x1398 (not $x1397)))
 (let (($x454 (<= m!1 18)))
 (let (($x869 (not $x454)))
 (let (($x1127 (>= ?x179 15)))
 (let ((@x849 (hypothesis $x1146)))
 (let ((@x1120 (hypothesis $x454)))
 (let ((@x975 ((_ th-lemma arith farkas -2 2/3 -11/9 2/3 -1 -1 -1 5/9 -10/3 -2/3 -2/3 -2/3 1) @x849 @x311 @x457 @x647 @x849 @x139 @x1120 @x139 @x849 @x849 @x139 @x1120 (hypothesis (not $x1127)) false)))
 (let ((@x838 ((_ th-lemma arith farkas -2 -2 -2 2/3 -11/9 2/3 -1 -1 -1 -5/9 -2/3 -2/3 -2/3 1) @x849 @x139 @x1120 @x322 @x139 @x125 @x849 @x139 @x1120 @x1120 @x849 @x139 @x1120 (unit-resolution (lemma @x975 (or $x1127 $x1135 $x869)) @x1120 @x849 $x1127) false)))
 (let ((@x1386 ((_ th-lemma arith farkas 3 1 1 3 3 1) @x971 @x457 @x311 @x457 (hypothesis $x869) (hypothesis $x1397) false)))
 (let ((@x1735 (unit-resolution (lemma @x1386 (or $x1398 $x454)) (unit-resolution (lemma @x838 (or $x869 $x1135)) @x1731 $x869) $x1398)))
 (let ((@x1737 ((_ th-lemma arith gcd-test -1/3 -1/3 1/3 1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3) @x322 @x311 @x457 @x139 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x1488 $x1397)) @x1735 $x1488) @x457 @x1003 @x347 @x457 @x125 (hypothesis (not $x1687)) @x322 @x1003 @x1731 false)))
 (let ((@x1738 (lemma @x1737 $x1687)))
 ((_ th-lemma arith) @x1738 @x1505 @x322 @x311 @x322 @x311 @x322 @x311 @x1738 @x1505 @x1738 @x1505 @x125 @x647 @x457 @x139 @x457 @x139 @x125 @x647 @x322 @x311 @x1738 @x1505 @x1738 @x1505 @x125 @x647 @x125 @x647 @x322 @x311 @x457 @x139 @x677 @x138 @x457 @x139 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 141
 :arith-assert-diseq        19
 :arith-assert-lower        1329
 :arith-assert-upper        480
 :arith-bound-prop          6
 :arith-branch-var          30
 :arith-conflicts           54
 :arith-eq-adapter          12
 :arith-fixed-eqs           180
 :arith-gcd-tests           226
 :arith-gomory-cuts         21
 :arith-grobner             68
 :arith-ineq-splits         30
 :arith-max-min             6171
 :arith-nonlinear-bounds    482
 :arith-nonlinear-horner    555
 :arith-num-rows            17
 :arith-offset-eqs          9
 :arith-patches             92
 :arith-patches_succ        32
 :arith-pivots              919
 :arith-pseudo-nonlinear    238
 :arith-row-summations      4554
 :arith-tableau-max-columns 67
 :arith-tableau-max-rows    17
 :conflicts                 60
 :decisions                 294
 :del-clause                80
 :final-checks              227
 :max-memory                4.09
 :memory                    3.32
 :minimized-lits            10
 :mk-bool-var               256
 :mk-clause                 148
 :num-allocs                4712590
 :num-checks                1
 :propagations              216
 :rlimit-count              303961
 :time                      0.08
 :total-time                0.09)
