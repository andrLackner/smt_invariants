unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let (($x250 (<= n!0 0)))
 (let (($x117 (not $x250)))
 (let (($x158 (>= n!0 0)))
 (let (($x479 (<= m!1 0)))
 (let (($x910 (not $x479)))
 (let ((?x500 (* n!0 k!2)))
 (let ((?x560 (* (- 3) c!3)))
 (let ((?x546 (* 2 n!0)))
 (let ((?x228 (* n!0 m!1)))
 (let ((?x520 (+ ?x228 ?x546 ?x560 (* (- 3) k!2) ?x500)))
 (let (($x457 (<= ?x520 (- 2))))
 (let (($x904 (>= (+ ?x228 ?x546 ?x560 (* (- 2) k!2) ?x500) 0)))
 (let (($x909 (not $x904)))
 (let ((@x900 (hypothesis $x479)))
 (let ((?x378 (* (- 1) m!1)))
 (let ((?x385 (* 6 n!0)))
 (let ((?x322 (+ ?x385 ?x378)))
 (let (($x418 (<= ?x322 (- 6))))
 (let (($x392 (= ?x322 (- 6))))
 (let ((?x170 (* (- 1) k!2)))
 (let ((?x377 (* n!0 n!0)))
 (let ((?x527 (* 3 ?x377)))
 (let ((?x529 (* 9 n!0)))
 (let ((?x564 (+ c!3 k!2)))
 (let ((?x184 (+ 1 n!0)))
 (let (($x425 (= (* ?x184 ?x184 (+ m!1 k!2) ?x564 (+ 6 ?x529 ?x527 ?x378 ?x170)) 0)))
 (let (($x424 (not $x392)))
 (let ((?x388 (* n!0 c!3)))
 (let ((?x506 (* (- 9) ?x388)))
 (let ((?x324 (* m!1 m!1)))
 (let ((?x172 (* k!2 k!2)))
 (let ((?x275 (+ (* 2 (* m!1 k!2)) ?x172 ?x324 ?x529 (* (- 27) c!3) ?x506 (* (- 5) m!1) (* (- 32) k!2) (* (- 9) ?x500))))
 (let (($x127 (or (not (= (+ ?x529 ?x527 ?x378 ?x170) (- 6))) (not (= ?x275 (- 13))) $x424 (not $x425) (not (= ?x520 (- 2))))))
 (let ((?x403 (* 3 n!0)))
 (let ((?x402 (+ ?x403 ?x527 ?x170)))
 (let (($x393 (= ?x402 0)))
 (let ((?x545 (+ ?x546 ?x560 ?x170 ?x500)))
 (let (($x533 (= ?x545 0)))
 (let ((?x483 (+ ?x172 ?x529 (* (- 18) c!3) ?x506 (* (- 5) k!2))))
 (let (($x484 (= ?x483 (- 4))))
 (let (($x552 (and $x392 $x484 $x533 $x393 $x127)))
 (let ((?x550 (* k!2 n!0)))
 (let ((?x152 (* (- 1) ?x550)))
 (let ((?x370 (* (- 2) n!0)))
 (let ((?x494 (* 3 c!3)))
 (let (($x476 (= (+ ?x494 (* 3 k!2) ?x370 ?x152 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x314 (* 9 (* c!3 n!0))))
 (let ((?x177 (* (- 1) ?x172)))
 (let ((?x241 (* (- 9) n!0)))
 (let ((?x319 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x241 ?x177 (* 9 ?x550) ?x314 (* (- 2) (* k!2 m!1)) (* (- 1) ?x324))))
 (let (($x201 (= (* ?x184 ?x184 (+ k!2 m!1) ?x564 (+ 6 ?x170 ?x378 ?x529 ?x527)) 0)))
 (let (($x437 (or (not $x201) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x241 (* (- 3) ?x377)) 6)) (not (= ?x319 13)) (not $x476))))
 (let (($x395 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x444 (and $x395 (= (+ (* 18 c!3) (* 5 k!2) ?x241 ?x177 ?x314) 4) (= (+ ?x494 k!2 ?x370 ?x152) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x377)) 0) $x437)))
 (let (($x532 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x265 (* n n)))
 (let ((?x266 (* 3 ?x265)))
 (let ((?x45 (* 9 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x328 (not (= (* ?x308 ?x308 ?x74 ?x71 (+ 6 ?x233 ?x471 ?x45 ?x266)) 0))))
 (let (($x561 (or $x328 $x356 (not (= (+ k m ?x217 (* (- 3) ?x265)) 6)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) ?x265)) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 $x561))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x169 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let ((?x338 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x505 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x288 (not (= (+ ?x505 ?x233 ?x471 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x231 (not (= (* ?x308 ?x308 ?x74 ?x71 (+ 3 ?x505 ?x233 ?x471 ?x61)) 0))))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x383 (+ ?x37 (* 23 k) (* 9 (* ?x308 ?x71)) ?x430 ?x217 (* (- 1) (* ?x74 ?x74)))))
 (let (($x519 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x519 (or (not (= ?x383 13)) $x231 $x288 (not (= ?x338 2)) $x356)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x556 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x540 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x548 (not $x540)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x265 (* n n)))
 (let ((?x266 (* 3 ?x265)))
 (let ((?x45 (* 9 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x328 (not (= (* ?x308 ?x308 ?x74 ?x71 (+ 6 ?x233 ?x471 ?x45 ?x266)) 0))))
 (let (($x561 (or $x328 $x356 (not (= (+ k m ?x217 (* (- 3) ?x265)) 6)) $x522 $x548)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) ?x265)) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x417 (and $x138 $x215 $x260 $x296 $x561)))
 (let (($x339 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x308 ?x74)) m ?x257) 2)))
 (let (($x288 (not (= (+ (* 3 (* ?x308 ?x308)) ?x233 ?x471 (* 3 n)) (- 3)))))
 (let ((?x283 (* ?x308 ?x308 ?x74 ?x71 (+ 3 (* 3 (* ?x308 ?x308)) ?x233 ?x471 (* 3 n)))))
 (let (($x231 (not (= ?x283 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x383 (+ ?x37 (* 23 k) (* 9 (* ?x308 ?x71)) ?x430 ?x217 (* (- 1) (* ?x74 ?x74)))))
 (let (($x519 (= (+ ?x266 ?x233 (* 3 n)) 0)))
 (let (($x168 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x576 (and $x138 $x168 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x519 (or (not (= ?x383 13)) $x231 $x288 (not $x339) $x356))))
 (rewrite (= $x576 $x417)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x389 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x325 (+ ?x454 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x505 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x288 (not (= (+ ?x505 ?x233 ?x471 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x308 (+ 1 n)))
 (let ((?x496 (* ?x308 ?x74)))
 (let ((?x363 (* (- 3) c)))
 (let (($x300 (= (* ?x308 ?x308 ?x74 (+ c k) (+ 3 ?x505 ?x233 ?x471 ?x61)) 0)))
 (let (($x231 (not $x300)))
 (let (($x285 (or $x231 (not (= (+ ?x363 (* (- 4) k) ?x496 ?x471 ?x56) (- 2))) $x288 $x356 (not (= ?x325 (- 13))))))
 (let (($x519 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let (($x309 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x309 (= (+ ?x363 (* n k) ?x233 ?x56) 0) $x519 $x285)))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x176 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let ((?x338 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x505 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x288 (not (= (+ ?x505 ?x233 ?x471 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x231 (not (= (* ?x308 ?x308 ?x74 ?x71 (+ 3 ?x505 ?x233 ?x471 ?x61)) 0))))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x383 (+ ?x37 (* 23 k) (* 9 (* ?x308 ?x71)) ?x430 ?x217 (* (- 1) (* ?x74 ?x74)))))
 (let (($x519 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x576 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x519 (or (not (= ?x383 13)) $x231 $x288 (not (= ?x338 2)) $x356))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x325 (+ ?x454 (* (- 23) k) (* (- 9) (* ?x308 ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x496 (* ?x308 ?x74)))
 (let ((?x363 (* (- 3) c)))
 (let (($x285 (or $x231 (not (= (+ ?x363 (* (- 4) k) ?x496 ?x471 ?x56) (- 2))) $x288 $x356 (not (= ?x325 (- 13))))))
 (let (($x309 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x297 (and $x138 $x309 (= (+ ?x363 (* n k) ?x233 ?x56) 0) $x519 $x285)))
 (rewrite (= $x297 $x576))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) (+ k m)) (* 3 (+ n 1)))))
 (let ((?x66 (+ n 1)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x50 (- 3)))
 (let (($x90 (= (+ (- (+ (* ?x50 ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x101 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x50 ?x71 ?x74 ?x66 ?x66 ?x95) 0)))))
 (let (($x58 (= (+ (- (+ (* ?x50 c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101))))))))))))))) :qid k!38))
 ))
 (let ((?x432 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x454 (* (- 18) c)))
 (let ((?x325 (+ ?x454 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x61 (* 3 n)))
 (let ((?x471 (* (- 1) m)))
 (let ((?x233 (* (- 1) k)))
 (let ((?x505 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x288 (not (= (+ ?x505 ?x233 ?x471 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x308 (+ 1 n)))
 (let ((?x496 (* ?x308 ?x74)))
 (let ((?x363 (* (- 3) c)))
 (let (($x300 (= (* ?x308 ?x308 ?x74 (+ c k) (+ 3 ?x505 ?x233 ?x471 ?x61)) 0)))
 (let (($x231 (not $x300)))
 (let (($x285 (or $x231 (not (= (+ ?x363 (* (- 4) k) ?x496 ?x471 ?x56) (- 2))) $x288 $x356 (not (= ?x325 (- 13))))))
 (let (($x519 (= (+ (* 3 (* n n)) ?x233 ?x61) 0)))
 (let (($x309 (= (+ ?x454 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x297 (and $x138 $x309 (= (+ ?x363 (* n k) ?x233 ?x56) 0) $x519 $x285)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x66 (+ n 1)))
 (let ((?x71 (+ c k)))
 (let ((?x50 (- 3)))
 (let (($x90 (= (+ (- (+ (* ?x50 ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x101 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not $x90) (not (= ?x95 0)) (not (= (* ?x50 ?x71 ?x74 ?x66 ?x66 ?x95) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* ?x50 c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x101)))
 (rewrite (= $x102 $x297))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x469 (mp (mp @x104 (quant-intro (proof-bind ?x432) (= $x103 $x389)) $x389) (rewrite (= $x389 $x389)) $x389)))
 (let ((@x269 (mp (mp @x469 (quant-intro (proof-bind ?x176) (= $x389 $x169)) $x169) (quant-intro (proof-bind ?x556) (= $x169 $x532)) $x532)))
 (let ((@x330 (mp (mp~ @x269 (sk (~ $x532 $x444)) $x444) (rewrite (= $x444 $x552)) $x552)))
 (let ((@x439 (and-elim @x330 $x392)))
 (let ((@x463 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x424 $x418)) @x439 $x418)))
 (let (($x448 (>= m!1 0)))
 (let (($x143 (<= ?x483 (- 4))))
 (let ((@x380 (and-elim @x330 $x484)))
 (let ((@x162 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x484) $x143)) @x380 $x143)))
 (let (($x311 (>= ?x483 (- 4))))
 (let ((@x350 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x484) $x311)) @x380 $x311)))
 (let (($x131 (<= ?x402 0)))
 (let ((@x553 (and-elim @x330 $x393)))
 (let ((@x194 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x393) $x131)) @x553 $x131)))
 (let (($x410 (>= ?x402 0)))
 (let ((@x125 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x393) $x410)) @x553 $x410)))
 (let (($x124 (<= ?x545 0)))
 (let ((@x128 (and-elim @x330 $x533)))
 (let ((@x504 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x533) $x124)) @x128 $x124)))
 (let (($x226 (>= ?x545 0)))
 (let ((@x441 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x533) $x226)) @x128 $x226)))
 (let (($x406 (>= ?x322 (- 6))))
 (let ((@x313 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x424 $x406)) @x439 $x406)))
 (let (($x279 (>= k!2 0)))
 (let ((?x646 (+ ?x172 ?x385 (* (- 4) c!3) (* 4 ?x377) (* (- 2) ?x388) (* (- 4) k!2))))
 (let (($x647 (>= ?x646 3)))
 (let (($x641 (not $x647)))
 (let ((@x337 (hypothesis (not $x279))))
 (let ((@x640 ((_ th-lemma arith) @x337 (hypothesis $x647) @x125 @x194 @x350 @x162 @x125 @x194 @x125 @x194 @x313 @x463 @x441 @x504 @x125 @x194 @x350 @x162 @x125 @x194 false)))
 (let ((@x637 ((_ th-lemma arith gcd-test 1/9 1/9 -1/9 -2/9 -1/7 4/21 2/63 -2/3 -2/3 1/9 1/9) @x350 @x162 @x337 @x337 (unit-resolution (lemma @x640 (or $x641 $x279)) @x337 $x641) @x125 @x350 @x441 @x504 @x125 @x194 false)))
 (let ((@x634 (lemma @x637 $x279)))
 (let ((@x762 ((_ th-lemma arith) @x634 (hypothesis (>= (+ (* 4 n!0) ?x378) (- 3))) @x125 @x194 @x350 @x162 @x313 @x463 @x350 @x162 @x350 @x162 @x441 @x504 @x350 @x162 @x313 @x463 @x441 @x504 @x313 @x463 @x441 @x504 @x313 @x463 @x313 @x463 @x125 @x194 @x350 @x162 @x125 @x194 @x350 @x162 @x313 @x463 @x441 @x504 @x350 @x162 @x441 @x504 @x441 @x504 @x125 @x194 @x441 @x504 @x350 @x162 @x125 @x194 @x125 @x194 @x350 @x162 false)))
 (let ((@x906 (unit-resolution ((_ th-lemma arith assign-bounds -2 3) (or $x448 (not $x406) (>= (+ (* 4 n!0) ?x378) (- 3)))) @x313 (lemma @x762 (not (>= (+ (* 4 n!0) ?x378) (- 3)))) $x448)))
 (let ((@x907 (hypothesis $x904)))
 (let (($x411 (>= ?x172 0)))
 (let ((@x381 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x411)) false) $x411)))
 (let ((@x908 ((_ th-lemma arith farkas 1/9 2/9 2/9 -1/9 -1/9 -1/18 -2/9 -1/18 1/3 1/3 1/3 1/3 1/3 1 1 1 1) @x162 @x906 @x900 @x441 @x381 @x906 @x907 @x313 @x634 @x906 @x900 @x504 @x907 @x313 @x906 @x463 @x900 false)))
 (let ((@x919 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 -2 1) (or $x457 (not $x448) $x910 $x904 (not $x226))) @x900 @x441 @x906 (unit-resolution (lemma @x908 (or $x909 $x910)) @x900 $x909) $x457)))
 (let (($x368 (>= ?x520 (- 2))))
 (let ((@x332 ((_ th-lemma arith) (hypothesis (not $x368)) @x313 @x463 @x350 @x162 @x350 @x162 @x313 @x463 @x350 @x162 @x350 @x162 @x350 @x162 @x313 @x463 @x350 @x162 @x441 @x504 @x313 @x463 @x125 @x194 @x313 @x463 @x441 @x504 @x313 @x463 false)))
 (let ((@x920 ((_ th-lemma arith farkas 1/3 -1/6 0 1/6 1/6 -1/6 1/3 -1/6 1/6 0 1/6 -1/6) @x194 @x313 @x906 @x900 @x504 (lemma @x332 $x368) @x125 @x463 @x906 @x900 @x441 @x919 false)))
 (let ((@x923 (unit-resolution ((_ th-lemma arith assign-bounds -6 1) (or $x479 $x158 (not $x406))) @x313 (or $x479 $x158))))
 (let ((@x924 (unit-resolution @x923 (lemma @x920 $x910) $x158)))
 (let ((@x642 (hypothesis $x250)))
 (let ((@x180 (hypothesis $x158)))
 (let (($x110 (>= ?x388 1)))
 (let (($x157 (<= n!0 1)))
 (let (($x598 (not $x157)))
 (let (($x156 (not $x110)))
 (let ((@x112 (hypothesis $x156)))
 (let ((@x113 ((_ th-lemma arith farkas 4 13/12 3/4 -1/12 -3/4 1/12 1 9 13/2 13/2 13/2 1) @x642 @x634 @x180 @x162 @x112 @x381 @x162 @x112 @x441 @x180 @x642 @x381 false)))
 (let ((@x150 (unit-resolution (lemma @x113 (or $x117 (not $x158) $x110)) @x112 @x180 $x117)))
 (let ((@x606 (hypothesis $x117)))
 (let ((@x600 (hypothesis $x157)))
 (let ((@x596 (lemma ((_ th-lemma arith farkas -2/3 -1/3 -1/3 1/3 1 1) @x606 @x606 @x600 @x504 @x112 @x606 false) (or $x598 $x250 $x110))))
 (let ((@x603 (unit-resolution @x596 @x150 @x112 $x598)))
 (let ((@x569 ((_ th-lemma arith gomory-cut 1 1/2 1/2 1/2 1/2 1/2 1) @x603 @x125 @x603 @x194 @x150 @x603 @x441 (>= (+ ?x403 (* (- 2) c!3) ?x377 ?x170 ?x500) 8))))
 (let ((@x699 ((_ th-lemma arith) @x112 @x150 @x569 @x441 @x504 @x125 @x194 @x441 @x504 @x125 @x194 @x313 @x463 @x125 @x194 @x441 @x504 @x441 @x504 @x350 @x162 @x125 @x194 @x441 @x504 @x125 @x194 @x441 @x504 @x350 @x162 false)))
 (let ((@x701 (lemma @x699 (or $x110 (not $x158)))))
 (let ((@x720 (lemma ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x701 @x180 $x110) @x180 @x642 false) (or $x117 (not $x158)))))
 (let ((@x925 (unit-resolution @x720 @x924 $x117)))
 (let ((@x760 (lemma ((_ th-lemma arith farkas 2 -1 -3 3 3 1 1) @x600 @x441 (hypothesis $x110) @x606 @x600 @x606 @x600 false) (or $x250 $x598 $x156))))
 (let (($x710 (>= c!3 2)))
 (let (($x728 (not $x710)))
 (let ((@x824 ((_ th-lemma arith) (hypothesis $x710) @x350 @x162 @x441 @x504 @x350 @x162 @x350 @x162 @x125 @x194 @x350 @x162 @x350 @x162 @x350 @x162 @x125 @x194 false)))
 (let ((@x707 (hypothesis $x598)))
 (let ((@x765 (hypothesis $x728)))
 (let ((@x768 (lemma ((_ th-lemma arith) @x707 @x194 @x606 @x504 @x765 @x765 @x707 @x707 @x504 false) (or $x710 $x157 $x250))))
 (unit-resolution (unit-resolution @x768 (lemma @x824 $x728) (or $x157 $x250)) (unit-resolution @x760 @x925 (unit-resolution @x701 @x924 $x110) $x598) @x925 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 69
 :arith-assert-diseq        44
 :arith-assert-lower        446
 :arith-assert-upper        230
 :arith-bound-prop          11
 :arith-branch-var          22
 :arith-conflicts           29
 :arith-eq-adapter          10
 :arith-fixed-eqs           97
 :arith-gcd-tests           237
 :arith-gomory-cuts         14
 :arith-grobner             23
 :arith-ineq-splits         22
 :arith-max-min             1445
 :arith-nonlinear-bounds    73
 :arith-nonlinear-horner    252
 :arith-num-rows            18
 :arith-offset-eqs          3
 :arith-patches             51
 :arith-patches_succ        8
 :arith-pivots              464
 :arith-pseudo-nonlinear    76
 :arith-row-summations      2505
 :arith-tableau-max-columns 48
 :arith-tableau-max-rows    18
 :conflicts                 35
 :decisions                 160
 :del-clause                41
 :final-checks              106
 :max-memory                3.79
 :memory                    3.24
 :minimized-lits            2
 :mk-bool-var               124
 :mk-clause                 83
 :num-allocs                1939576
 :num-checks                1
 :propagations              139
 :rlimit-count              107557
 :time                      0.03
 :total-time                0.04)
