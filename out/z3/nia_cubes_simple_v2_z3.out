unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x986 (* n!0 n!0)))
 (let ((?x1043 (* 3 ?x986)))
 (let ((?x962 (* (- 1) k!2)))
 (let ((?x1053 (+ (* 3 n!0) ?x962 ?x1043)))
 (let (($x925 (<= ?x1053 (- 1))))
 (let (($x1058 (= ?x1053 (- 1))))
 (let ((?x957 (* (- 3) c!3)))
 (let ((?x965 (* 2 n!0)))
 (let ((?x926 (* n!0 k!2)))
 (let ((?x1110 (+ ?x926 ?x965 (* (- 3) k!2) ?x957 (* n!0 m!1))))
 (let (($x1111 (= ?x1110 (- 3))))
 (let (($x1116 (not $x1111)))
 (let (($x1097 (or $x1116 (not (= (+ (* 9 n!0) ?x962 (* (- 1) m!1) ?x1043) (- 7))))))
 (let ((?x1001 (* m!1 m!1)))
 (let ((?x1047 (* (- 9) (* n!0 c!3))))
 (let ((?x1037 (* 9 n!0)))
 (let ((?x903 (* k!2 k!2)))
 (let ((?x1088 (+ ?x903 (* (- 9) ?x926) ?x1037 (* (- 32) k!2) (* (- 5) m!1) (* (- 27) c!3) ?x1047 ?x1001 (* 2 (* k!2 m!1)))))
 (let ((?x959 (+ ?x926 ?x965 ?x962 ?x957)))
 (let (($x969 (= ?x959 (- 1))))
 (let ((?x978 (* (- 1) m!1)))
 (let ((?x987 (+ (* 6 n!0) ?x978)))
 (let (($x988 (= ?x987 (- 6))))
 (let (($x1112 (and $x988 (= (+ ?x903 ?x1037 (* (- 5) k!2) (* (- 18) c!3) ?x1047) (- 4)) $x969 $x1058 (= ?x1088 (- 13)) $x1097)))
 (let ((?x981 (* k!2 n!0)))
 (let ((?x982 (* (- 1) ?x981)))
 (let ((?x980 (* (- 2) n!0)))
 (let ((?x979 (* 3 c!3)))
 (let (($x1020 (= (+ ?x979 (* 3 k!2) ?x980 ?x982 (* (- 1) (* m!1 n!0))) 3)))
 (let (($x930 (or (not $x1020) (not (= (+ k!2 m!1 (* (- 9) n!0) (* (- 3) ?x986)) 7)))))
 (let ((?x940 (* 9 (* c!3 n!0))))
 (let ((?x904 (* (- 1) ?x903)))
 (let ((?x975 (* (- 9) n!0)))
 (let ((?x1013 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x975 ?x904 ?x940 (* 9 ?x981) (* (- 2) (* k!2 m!1)) (* (- 1) ?x1001))))
 (let (($x943 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ (* 18 c!3) (* 5 k!2) ?x975 ?x904 ?x940) 4) (= (+ ?x979 k!2 ?x980 ?x982) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x986)) 1) (= ?x1013 13) $x930)))
 (let (($x1049 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x1074 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 7))))
 (let ((?x239 (* k n)))
 (let ((?x300 (* (- 1) ?x239)))
 (let ((?x299 (* (- 2) n)))
 (let ((?x54 (* 3 c)))
 (let (($x753 (= (+ ?x54 (* 3 k) ?x299 ?x300 (* (- 1) (* m n))) 3)))
 (let (($x760 (not $x753)))
 (let ((?x146 (* c n)))
 (let ((?x147 (* 9 ?x146)))
 (let ((?x34 (* k k)))
 (let ((?x233 (* (- 1) ?x34)))
 (let ((?x232 (* (- 9) n)))
 (let ((?x540 (* 5 m)))
 (let ((?x633 (+ (* 27 c) (* 32 k) ?x540 ?x232 ?x233 ?x147 (* 9 ?x239) (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x624 (= ?x633 13)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x302 (= (+ ?x54 k ?x299 ?x300) 1)))
 (let (($x231 (= (+ (* 18 c) (* 5 k) ?x232 ?x233 ?x147) 4)))
 (let ((?x111 (* (- 6) n)))
 (let ((?x114 (+ m ?x111)))
 (let (($x141 (= ?x114 6)))
 (and $x141 $x231 $x302 $x346 $x624 (or $x760 $x1074))))))))))))))))))))))) :qid k!36))
 ))
 (let (($x909 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x931 (* (- 1) m)))
 (let ((?x253 (* (- 1) k)))
 (let ((?x61 (* 3 n)))
 (let (($x1006 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x61 ?x253 ?x931) (- 4))))
 (let ((?x274 (* (- 3) c)))
 (let ((?x51 (* 2 n)))
 (let (($x990 (= (+ (* (+ 1 n) (+ k m)) ?x51 (* (- 4) k) ?x931 ?x274) (- 3))))
 (let (($x898 (or (not $x990) (not $x1006))))
 (let ((?x207 (* (- 18) c)))
 (let ((?x557 (* (- 5) m)))
 (let ((?x871 (* (- 23) k)))
 (let ((?x38 (* 9 n)))
 (let ((?x74 (+ c k)))
 (let ((?x354 (+ 1 n)))
 (let ((?x812 (* ?x354 ?x74)))
 (let ((?x827 (* (- 9) ?x812)))
 (let ((?x72 (+ k m)))
 (let ((?x73 (* ?x72 ?x72)))
 (let (($x892 (= (+ ?x73 ?x827 ?x38 ?x871 ?x557 ?x207) (- 13))))
 (let ((?x307 (* n n)))
 (let ((?x308 (* 3 ?x307)))
 (let ((?x788 (+ ?x308 ?x61 ?x253)))
 (let (($x807 (= ?x788 (- 1))))
 (let ((?x49 (* n k)))
 (let ((?x713 (+ ?x49 ?x51 ?x253 ?x274)))
 (let (($x770 (= ?x713 (- 1))))
 (let ((?x184 (* (- 5) k)))
 (let ((?x433 (* n c)))
 (let ((?x489 (* (- 9) ?x433)))
 (let ((?x34 (* k k)))
 (let ((?x661 (+ ?x34 ?x489 ?x38 ?x184 ?x207)))
 (let (($x662 (= ?x661 (- 4))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x114 (+ m ?x111)))
 (let (($x141 (= ?x114 6)))
 (and $x141 $x662 $x770 $x807 $x892 $x898)))))))))))))))))))))))))))))))))))) :qid k!36))
 ))
 (let ((?x1051 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x1074 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 7))))
 (let ((?x239 (* k n)))
 (let ((?x300 (* (- 1) ?x239)))
 (let ((?x299 (* (- 2) n)))
 (let ((?x54 (* 3 c)))
 (let (($x753 (= (+ ?x54 (* 3 k) ?x299 ?x300 (* (- 1) (* m n))) 3)))
 (let (($x760 (not $x753)))
 (let ((?x146 (* c n)))
 (let ((?x147 (* 9 ?x146)))
 (let ((?x34 (* k k)))
 (let ((?x233 (* (- 1) ?x34)))
 (let ((?x232 (* (- 9) n)))
 (let ((?x540 (* 5 m)))
 (let ((?x633 (+ (* 27 c) (* 32 k) ?x540 ?x232 ?x233 ?x147 (* 9 ?x239) (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x624 (= ?x633 13)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x302 (= (+ ?x54 k ?x299 ?x300) 1)))
 (let (($x231 (= (+ (* 18 c) (* 5 k) ?x232 ?x233 ?x147) 4)))
 (let ((?x111 (* (- 6) n)))
 (let ((?x114 (+ m ?x111)))
 (let (($x141 (= ?x114 6)))
 (let (($x1044 (and $x141 $x231 $x302 $x346 $x624 (or $x760 $x1074))))
 (let ((?x931 (* (- 1) m)))
 (let ((?x253 (* (- 1) k)))
 (let ((?x61 (* 3 n)))
 (let (($x1006 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x61 ?x253 ?x931) (- 4))))
 (let ((?x274 (* (- 3) c)))
 (let ((?x51 (* 2 n)))
 (let (($x990 (= (+ (* (+ 1 n) (+ k m)) ?x51 (* (- 4) k) ?x931 ?x274) (- 3))))
 (let (($x898 (or (not $x990) (not $x1006))))
 (let ((?x207 (* (- 18) c)))
 (let ((?x557 (* (- 5) m)))
 (let ((?x871 (* (- 23) k)))
 (let ((?x38 (* 9 n)))
 (let ((?x74 (+ c k)))
 (let ((?x354 (+ 1 n)))
 (let ((?x812 (* ?x354 ?x74)))
 (let ((?x827 (* (- 9) ?x812)))
 (let ((?x72 (+ k m)))
 (let ((?x73 (* ?x72 ?x72)))
 (let (($x892 (= (+ ?x73 ?x827 ?x38 ?x871 ?x557 ?x207) (- 13))))
 (let ((?x307 (* n n)))
 (let ((?x308 (* 3 ?x307)))
 (let ((?x788 (+ ?x308 ?x61 ?x253)))
 (let (($x807 (= ?x788 (- 1))))
 (let ((?x49 (* n k)))
 (let ((?x713 (+ ?x49 ?x51 ?x253 ?x274)))
 (let (($x770 (= ?x713 (- 1))))
 (let ((?x184 (* (- 5) k)))
 (let ((?x433 (* n c)))
 (let ((?x489 (* (- 9) ?x433)))
 (let ((?x661 (+ ?x34 ?x489 ?x38 ?x184 ?x207)))
 (let (($x662 (= ?x661 (- 4))))
 (let (($x998 (and $x141 $x662 $x770 $x807 $x892 $x898)))
 (rewrite (= $x998 $x1044)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x96 (+ (* 3 (+ n 1) (+ n 1)) (* 3 (+ n 1)))))
 (let ((?x90 (- (- (+ (* (+ n 1) ?x72) (* 2 (+ n 1))) ?x72) (* 3 (+ c k)))))
 (let (($x101 (or (not (= (+ ?x90 1) 0)) (not (= (+ (- ?x96 ?x72) 1) 0)))))
 (let ((?x74 (+ c k)))
 (let ((?x80 (* 18 ?x74)))
 (let ((?x79 (* 5 ?x72)))
 (let ((?x67 (+ n 1)))
 (let ((?x77 (* 9 ?x67)))
 (let ((?x75 (* 9 ?x67 ?x74)))
 (let ((?x73 (* ?x72 ?x72)))
 (let ((?x76 (- ?x73 ?x75)))
 (let ((?x78 (+ ?x76 ?x77)))
 (let ((?x81 (- ?x78 ?x79)))
 (let ((?x82 (- ?x81 ?x80)))
 (let ((?x83 (+ ?x82 4)))
 (let (($x84 (= ?x83 0)))
 (let ((?x68 (* 6 ?x67)))
 (let ((?x66 (+ m 6)))
 (let ((?x69 (- ?x66 ?x68)))
 (let ((?x70 (- ?x69 6)))
 (let (($x71 (= ?x70 0)))
 (let ((?x61 (* 3 n)))
 (let ((?x60 (* 3 n n)))
 (let ((?x62 (+ ?x60 ?x61)))
 (let ((?x63 (- ?x62 k)))
 (let ((?x64 (+ ?x63 1)))
 (let (($x65 (= ?x64 0)))
 (let ((?x54 (* 3 c)))
 (let ((?x51 (* 2 n)))
 (let ((?x49 (* n k)))
 (let ((?x52 (+ ?x49 ?x51)))
 (let ((?x55 (- ?x52 k)))
 (let ((?x56 (- ?x55 ?x54)))
 (let ((?x58 (+ ?x56 1)))
 (let (($x59 (= ?x58 0)))
 (let ((?x43 (* 18 c)))
 (let ((?x41 (* 5 k)))
 (let ((?x38 (* 9 n)))
 (let ((?x36 (* 9 n c)))
 (let ((?x34 (* k k)))
 (let ((?x37 (- ?x34 ?x36)))
 (let ((?x39 (+ ?x37 ?x38)))
 (let ((?x44 (- ?x39 ?x41)))
 (let ((?x45 (- ?x44 ?x43)))
 (let ((?x47 (+ ?x45 4)))
 (let (($x48 (= ?x47 0)))
 (let ((?x29 (* 6 n)))
 (let ((?x30 (- m ?x29)))
 (let ((?x31 (- ?x30 6)))
 (let (($x33 (= ?x31 0)))
 (and $x33 $x48 $x59 $x65 $x71 $x84 $x101)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!36))
 ))
 (let ((?x910 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x931 (* (- 1) m)))
 (let ((?x253 (* (- 1) k)))
 (let ((?x61 (* 3 n)))
 (let (($x1006 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x61 ?x253 ?x931) (- 4))))
 (let ((?x274 (* (- 3) c)))
 (let ((?x51 (* 2 n)))
 (let (($x990 (= (+ (* (+ 1 n) (+ k m)) ?x51 (* (- 4) k) ?x931 ?x274) (- 3))))
 (let (($x898 (or (not $x990) (not $x1006))))
 (let ((?x207 (* (- 18) c)))
 (let ((?x557 (* (- 5) m)))
 (let ((?x871 (* (- 23) k)))
 (let ((?x38 (* 9 n)))
 (let ((?x74 (+ c k)))
 (let ((?x354 (+ 1 n)))
 (let ((?x812 (* ?x354 ?x74)))
 (let ((?x827 (* (- 9) ?x812)))
 (let ((?x72 (+ k m)))
 (let ((?x73 (* ?x72 ?x72)))
 (let (($x892 (= (+ ?x73 ?x827 ?x38 ?x871 ?x557 ?x207) (- 13))))
 (let ((?x307 (* n n)))
 (let ((?x308 (* 3 ?x307)))
 (let ((?x788 (+ ?x308 ?x61 ?x253)))
 (let (($x807 (= ?x788 (- 1))))
 (let ((?x49 (* n k)))
 (let ((?x713 (+ ?x49 ?x51 ?x253 ?x274)))
 (let (($x770 (= ?x713 (- 1))))
 (let ((?x184 (* (- 5) k)))
 (let ((?x433 (* n c)))
 (let ((?x489 (* (- 9) ?x433)))
 (let ((?x34 (* k k)))
 (let ((?x661 (+ ?x34 ?x489 ?x38 ?x184 ?x207)))
 (let (($x662 (= ?x661 (- 4))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x114 (+ m ?x111)))
 (let (($x141 (= ?x114 6)))
 (let (($x998 (and $x141 $x662 $x770 $x807 $x892 $x898)))
 (let ((?x96 (+ (* 3 (+ n 1) (+ n 1)) (* 3 (+ n 1)))))
 (let ((?x90 (- (- (+ (* (+ n 1) ?x72) (* 2 (+ n 1))) ?x72) (* 3 ?x74))))
 (let (($x101 (or (not (= (+ ?x90 1) 0)) (not (= (+ (- ?x96 ?x72) 1) 0)))))
 (let ((?x80 (* 18 ?x74)))
 (let ((?x79 (* 5 ?x72)))
 (let ((?x67 (+ n 1)))
 (let ((?x77 (* 9 ?x67)))
 (let ((?x75 (* 9 ?x67 ?x74)))
 (let ((?x76 (- ?x73 ?x75)))
 (let ((?x78 (+ ?x76 ?x77)))
 (let ((?x81 (- ?x78 ?x79)))
 (let ((?x82 (- ?x81 ?x80)))
 (let ((?x83 (+ ?x82 4)))
 (let (($x84 (= ?x83 0)))
 (let ((?x68 (* 6 ?x67)))
 (let ((?x66 (+ m 6)))
 (let ((?x69 (- ?x66 ?x68)))
 (let ((?x70 (- ?x69 6)))
 (let (($x71 (= ?x70 0)))
 (let ((?x60 (* 3 n n)))
 (let ((?x62 (+ ?x60 ?x61)))
 (let ((?x63 (- ?x62 k)))
 (let ((?x64 (+ ?x63 1)))
 (let (($x65 (= ?x64 0)))
 (let ((?x54 (* 3 c)))
 (let ((?x52 (+ ?x49 ?x51)))
 (let ((?x55 (- ?x52 k)))
 (let ((?x56 (- ?x55 ?x54)))
 (let ((?x58 (+ ?x56 1)))
 (let (($x59 (= ?x58 0)))
 (let ((?x43 (* 18 c)))
 (let ((?x41 (* 5 k)))
 (let ((?x36 (* 9 n c)))
 (let ((?x37 (- ?x34 ?x36)))
 (let ((?x39 (+ ?x37 ?x38)))
 (let ((?x44 (- ?x39 ?x41)))
 (let ((?x45 (- ?x44 ?x43)))
 (let ((?x47 (+ ?x45 4)))
 (let (($x48 (= ?x47 0)))
 (let ((?x29 (* 6 n)))
 (let ((?x30 (- m ?x29)))
 (let ((?x31 (- ?x30 6)))
 (let (($x33 (= ?x31 0)))
 (let (($x102 (and $x33 $x48 $x59 $x65 $x71 $x84 $x101)))
 (let ((@x894 (rewrite (= (= (+ 13 ?x73 ?x827 ?x38 ?x871 ?x557 ?x207) 0) $x892))))
 (let ((?x882 (+ 13 ?x73 ?x827 ?x38 ?x871 ?x557 ?x207)))
 (let ((?x872 (+ 9 ?x73 ?x827 ?x38 ?x871 ?x557 ?x207)))
 (let ((?x879 (+ ?x872 4)))
 (let ((?x575 (* 18 k)))
 (let ((?x576 (+ ?x43 ?x575)))
 (let ((?x582 (* (- 1) ?x576)))
 (let ((?x852 (+ 9 ?x73 ?x827 ?x38 ?x184 ?x557)))
 (let ((?x862 (+ ?x852 ?x582)))
 (let ((@x598 (rewrite (= (+ (* (- 1) ?x43) (* (- 1) ?x575)) (+ ?x207 (* (- 18) k))))))
 (let ((@x594 (trans (rewrite (= ?x582 (+ (* (- 1) ?x43) (* (- 1) ?x575)))) @x598 (= ?x582 (+ ?x207 (* (- 18) k))))))
 (let ((@x876 (trans (monotonicity @x594 (= ?x862 (+ ?x852 (+ ?x207 (* (- 18) k))))) (rewrite (= (+ ?x852 (+ ?x207 (* (- 18) k))) ?x872)) (= ?x862 ?x872))))
 (let ((@x578 (rewrite (= ?x80 ?x576))))
 (let ((?x540 (* 5 m)))
 (let ((?x541 (+ ?x41 ?x540)))
 (let ((?x547 (* (- 1) ?x541)))
 (let ((?x836 (+ 9 ?x73 ?x827 ?x38)))
 (let ((?x844 (+ ?x836 ?x547)))
 (let ((@x559 (trans (rewrite (= ?x547 (+ (* (- 1) ?x41) (* (- 1) ?x540)))) (rewrite (= (+ (* (- 1) ?x41) (* (- 1) ?x540)) (+ ?x184 ?x557))) (= ?x547 (+ ?x184 ?x557)))))
 (let ((@x856 (trans (monotonicity @x559 (= ?x844 (+ ?x836 (+ ?x184 ?x557)))) (rewrite (= (+ ?x836 (+ ?x184 ?x557)) ?x852)) (= ?x844 ?x852))))
 (let ((@x543 (rewrite (= ?x79 ?x541))))
 (let ((@x526 (trans (monotonicity (rewrite (= ?x67 ?x354)) (= ?x77 (* 9 ?x354))) (rewrite (= (* 9 ?x354) (+ (* 9 1) ?x38))) (= ?x77 (+ (* 9 1) ?x38)))))
 (let ((@x528 (trans @x526 (rewrite (= (+ (* 9 1) ?x38) (+ 9 ?x38))) (= ?x77 (+ 9 ?x38)))))
 (let ((@x824 (rewrite (= (- ?x73 (* 9 ?x812)) (+ ?x73 (* (- 1) (* 9 ?x812)))))))
 (let ((@x356 (rewrite (= ?x67 ?x354))))
 (let ((@x430 (monotonicity @x356 (= ?x75 (* 9 ?x354 ?x74)))))
 (let ((@x817 (trans @x430 (rewrite (= (* 9 ?x354 ?x74) (* 9 ?x812))) (= ?x75 (* 9 ?x812)))))
 (let ((@x826 (trans (monotonicity @x817 (= ?x76 (- ?x73 (* 9 ?x812)))) @x824 (= ?x76 (+ ?x73 (* (- 1) (* 9 ?x812)))))))
 (let ((@x829 (trans @x826 (rewrite (= (+ ?x73 (* (- 1) (* 9 ?x812))) (+ ?x73 ?x827))) (= ?x76 (+ ?x73 ?x827)))))
 (let ((@x840 (trans (monotonicity @x829 @x528 (= ?x78 (+ (+ ?x73 ?x827) (+ 9 ?x38)))) (rewrite (= (+ (+ ?x73 ?x827) (+ 9 ?x38)) ?x836)) (= ?x78 ?x836))))
 (let ((@x848 (trans (monotonicity @x840 @x543 (= ?x81 (- ?x836 ?x541))) (rewrite (= (- ?x836 ?x541) ?x844)) (= ?x81 ?x844))))
 (let ((@x861 (monotonicity (trans @x848 @x856 (= ?x81 ?x852)) @x578 (= ?x82 (- ?x852 ?x576)))))
 (let ((@x878 (trans (trans @x861 (rewrite (= (- ?x852 ?x576) ?x862)) (= ?x82 ?x862)) @x876 (= ?x82 ?x872))))
 (let ((@x886 (trans (monotonicity @x878 (= ?x83 ?x879)) (rewrite (= ?x879 ?x882)) (= ?x83 ?x882))))
 (let ((@x896 (trans (monotonicity @x886 (= $x84 (= ?x882 0))) @x894 (= $x84 $x892))))
 (let ((@x143 (rewrite (= (= (+ (- 6) m ?x111) 0) $x141))))
 (let ((@x130 (monotonicity (rewrite (= (* (- 1) 6) (- 6))) (= (+ ?x114 (* (- 1) 6)) (+ ?x114 (- 6))))))
 (let ((@x135 (trans @x130 (rewrite (= (+ ?x114 (- 6)) (+ (- 6) m ?x111))) (= (+ ?x114 (* (- 1) 6)) (+ (- 6) m ?x111)))))
 (let ((@x123 (rewrite (= (- ?x114 6) (+ ?x114 (* (- 1) 6))))))
 (let ((?x385 (+ (- 6) ?x111)))
 (let ((?x351 (+ 6 m)))
 (let ((?x390 (+ ?x351 ?x385)))
 (let ((?x368 (+ 6 ?x29)))
 (let ((?x374 (* (- 1) ?x368)))
 (let ((?x375 (+ ?x351 ?x374)))
 (let ((@x389 (trans (rewrite (= ?x374 (+ (* (- 1) 6) (* (- 1) ?x29)))) (rewrite (= (+ (* (- 1) 6) (* (- 1) ?x29)) ?x385)) (= ?x374 ?x385))))
 (let ((@x396 (trans (monotonicity @x389 (= ?x375 ?x390)) (rewrite (= ?x390 ?x114)) (= ?x375 ?x114))))
 (let ((@x365 (trans (monotonicity @x356 (= ?x68 (* 6 ?x354))) (rewrite (= (* 6 ?x354) (+ (* 6 1) ?x29))) (= ?x68 (+ (* 6 1) ?x29)))))
 (let ((@x367 (trans @x365 (rewrite (= (+ (* 6 1) ?x29) ?x368)) (= ?x68 ?x368))))
 (let ((@x379 (trans (monotonicity (rewrite (= ?x66 ?x351)) @x367 (= ?x69 (- ?x351 ?x368))) (rewrite (= (- ?x351 ?x368) ?x375)) (= ?x69 ?x375))))
 (let ((@x400 (monotonicity (trans @x379 @x396 (= ?x69 ?x114)) (= ?x70 (- ?x114 6)))))
 (let ((@x404 (trans (trans @x400 @x123 (= ?x70 (+ ?x114 (* (- 1) 6)))) @x135 (= ?x70 (+ (- 6) m ?x111)))))
 (let ((@x408 (trans (monotonicity @x404 (= $x71 (= (+ (- 6) m ?x111) 0))) @x143 (= $x71 $x141))))
 (let ((@x779 (monotonicity (rewrite (= ?x62 (+ ?x308 ?x61))) (= ?x63 (- (+ ?x308 ?x61) k)))))
 (let ((@x787 (trans @x779 (rewrite (= (- (+ ?x308 ?x61) k) (+ (+ ?x308 ?x61) ?x253))) (= ?x63 (+ (+ ?x308 ?x61) ?x253)))))
 (let ((@x795 (trans @x787 (rewrite (= (+ (+ ?x308 ?x61) ?x253) ?x788)) (= ?x63 ?x788))))
 (let ((@x803 (trans (monotonicity @x795 (= ?x64 (+ ?x788 1))) (rewrite (= (+ ?x788 1) (+ 1 ?x308 ?x61 ?x253))) (= ?x64 (+ 1 ?x308 ?x61 ?x253)))))
 (let ((@x811 (trans (monotonicity @x803 (= $x65 (= (+ 1 ?x308 ?x61 ?x253) 0))) (rewrite (= (= (+ 1 ?x308 ?x61 ?x253) 0) $x807)) (= $x65 $x807))))
 (let ((?x682 (+ ?x49 ?x51 ?x253)))
 (let ((?x708 (+ ?x682 ?x274)))
 (let ((?x267 (* (- 1) ?x54)))
 (let ((?x701 (+ ?x682 ?x267)))
 (let ((@x276 (rewrite (= ?x267 ?x274))))
 (let ((@x740 (trans (monotonicity @x276 (= ?x701 ?x708)) (rewrite (= ?x708 ?x713)) (= ?x701 ?x713))))
 (let ((@x686 (trans (rewrite (= ?x55 (+ ?x52 ?x253))) (rewrite (= (+ ?x52 ?x253) ?x682)) (= ?x55 ?x682))))
 (let ((@x706 (trans (monotonicity @x686 (= ?x56 (- ?x682 ?x54))) (rewrite (= (- ?x682 ?x54) ?x701)) (= ?x56 ?x701))))
 (let ((@x746 (monotonicity (trans @x706 @x740 (= ?x56 ?x713)) (= ?x58 (+ ?x713 1)))))
 (let ((@x752 (trans @x746 (rewrite (= (+ ?x713 1) (+ 1 ?x49 ?x51 ?x253 ?x274))) (= ?x58 (+ 1 ?x49 ?x51 ?x253 ?x274)))))
 (let ((@x775 (trans (monotonicity @x752 (= $x59 (= (+ 1 ?x49 ?x51 ?x253 ?x274) 0))) (rewrite (= (= (+ 1 ?x49 ?x51 ?x253 ?x274) 0) $x770)) (= $x59 $x770))))
 (let ((?x697 (+ ?x34 ?x489 ?x38 ?x184)))
 (let ((?x658 (+ ?x697 ?x207)))
 (let ((?x200 (* (- 1) ?x43)))
 (let ((?x642 (+ ?x697 ?x200)))
 (let ((@x209 (rewrite (= ?x200 ?x207))))
 (let ((@x758 (trans (monotonicity @x209 (= ?x642 ?x658)) (rewrite (= ?x658 ?x661)) (= ?x642 ?x661))))
 (let ((?x739 (+ ?x34 ?x489 ?x38)))
 (let ((?x689 (+ ?x739 ?x184)))
 (let ((?x177 (* (- 1) ?x41)))
 (let ((?x667 (+ ?x739 ?x177)))
 (let ((@x186 (rewrite (= ?x177 ?x184))))
 (let ((@x640 (trans (monotonicity @x186 (= ?x667 ?x689)) (rewrite (= ?x689 ?x697)) (= ?x667 ?x697))))
 (let ((@x727 (rewrite (= (- ?x34 (* 9 ?x433)) (+ ?x34 (* (- 1) (* 9 ?x433)))))))
 (let ((@x729 (monotonicity (rewrite (= ?x36 (* 9 ?x433))) (= ?x37 (- ?x34 (* 9 ?x433))))))
 (let ((@x735 (trans (trans @x729 @x727 (= ?x37 (+ ?x34 (* (- 1) (* 9 ?x433))))) (rewrite (= (+ ?x34 (* (- 1) (* 9 ?x433))) (+ ?x34 ?x489))) (= ?x37 (+ ?x34 ?x489)))))
 (let ((@x707 (trans (monotonicity @x735 (= ?x39 (+ (+ ?x34 ?x489) ?x38))) (rewrite (= (+ (+ ?x34 ?x489) ?x38) ?x739)) (= ?x39 ?x739))))
 (let ((@x678 (trans (monotonicity @x707 (= ?x44 (- ?x739 ?x41))) (rewrite (= (- ?x739 ?x41) ?x667)) (= ?x44 ?x667))))
 (let ((@x653 (monotonicity (trans @x678 @x640 (= ?x44 ?x697)) (= ?x45 (- ?x697 ?x43)))))
 (let ((@x762 (trans (trans @x653 (rewrite (= (- ?x697 ?x43) ?x642)) (= ?x45 ?x642)) @x758 (= ?x45 ?x661))))
 (let ((@x681 (trans (monotonicity @x762 (= ?x47 (+ ?x661 4))) (rewrite (= (+ ?x661 4) (+ 4 ?x34 ?x489 ?x38 ?x184 ?x207))) (= ?x47 (+ 4 ?x34 ?x489 ?x38 ?x184 ?x207)))))
 (let ((@x671 (monotonicity @x681 (= $x48 (= (+ 4 ?x34 ?x489 ?x38 ?x184 ?x207) 0)))))
 (let ((@x664 (trans @x671 (rewrite (= (= (+ 4 ?x34 ?x489 ?x38 ?x184 ?x207) 0) $x662)) (= $x48 $x662))))
 (let ((@x113 (trans (rewrite (= ?x30 (+ m (* (- 1) ?x29)))) (rewrite (= (+ m (* (- 1) ?x29)) ?x114)) (= ?x30 ?x114))))
 (let ((@x125 (trans (monotonicity @x113 (= ?x31 (- ?x114 6))) @x123 (= ?x31 (+ ?x114 (* (- 1) 6))))))
 (let ((@x140 (monotonicity (trans @x125 @x135 (= ?x31 (+ (- 6) m ?x111))) (= $x33 (= (+ (- 6) m ?x111) 0)))))
 (let ((@x145 (trans @x140 @x143 (= $x33 $x141))))
 (let ((@x996 (monotonicity @x145 @x664 @x775 @x811 @x408 @x896 (rewrite (= $x101 $x898)) (= $x102 (and $x141 $x662 $x770 $x807 $x141 $x892 $x898)))))
 (trans @x996 (rewrite (= (and $x141 $x662 $x770 $x807 $x141 $x892 $x898) $x998)) (= $x102 $x998)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x916 (mp (mp @x104 (quant-intro (proof-bind ?x910) (= $x103 $x909)) $x909) (rewrite (= $x909 $x909)) $x909)))
 (let ((@x948 (mp~ (mp @x916 (quant-intro (proof-bind ?x1051) (= $x909 $x1049)) $x1049) (sk (~ $x1049 $x943)) $x943)))
 (let ((@x1098 (mp @x948 (rewrite (= $x943 $x1112)) $x1112)))
 (let ((@x1067 (and-elim @x1098 $x1058)))
 (let ((@x1041 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1058) $x925)) @x1067 $x925)))
 (let (($x933 (>= ?x1053 (- 1))))
 (let ((@x974 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1058) $x933)) @x1067 $x933)))
 (let (($x1025 (<= ?x987 (- 6))))
 (let ((@x1095 (and-elim @x1098 $x988)))
 (let ((@x1077 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x988) $x1025)) @x1095 $x1025)))
 (let (($x1003 (>= ?x987 (- 6))))
 (let ((@x936 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x988) $x1003)) @x1095 $x1003)))
 (let (($x967 (<= ?x959 (- 1))))
 (let ((@x1065 (and-elim @x1098 $x969)))
 (let ((@x1031 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x969) $x967)) @x1065 $x967)))
 (let (($x945 (>= ?x959 (- 1))))
 (let ((@x1034 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x969) $x945)) @x1065 $x945)))
 (let (($x1164 (not (<= ?x1110 (- 3)))))
 (let (($x1076 (>= ?x1110 (- 3))))
 (let ((@x1059 ((_ th-lemma arith) (hypothesis (not $x1076)) @x974 @x1041 @x1034 @x1031 @x974 @x1041 @x936 @x1077 false)))
 (let ((?x1101 (+ ?x1037 ?x962 ?x978 ?x1043)))
 (let (($x1103 (= ?x1101 (- 7))))
 (let (($x1079 (>= ?x1101 (- 7))))
 (let ((@x1172 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x1079 (not $x1003) (not $x933))) @x974 @x936 $x1079)))
 (let (($x1078 (<= ?x1101 (- 7))))
 (let ((@x1167 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x1078 (not $x1025) (not $x925))) @x1041 @x1077 $x1078)))
 (let ((@x1173 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1103 (not $x1078) (not $x1079))) @x1167 @x1172 $x1103)))
 (let ((@x1176 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1111 $x1164 (not $x1076))) (unit-resolution (and-elim @x1098 $x1097) @x1173 $x1116) (or $x1164 (not $x1076)))))
 ((_ th-lemma arith) (unit-resolution @x1176 (lemma @x1059 $x1076) $x1164) @x1034 @x1031 @x974 @x1041 @x974 @x1041 @x936 @x1077 @x974 @x1041 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

