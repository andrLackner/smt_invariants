unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x127 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x556 (<= ?x127 0)))
 (let (($x348 (= ?x127 0)))
 (let ((?x481 (* 3 c!3)))
 (let ((?x381 (* k!2 n!0)))
 (let ((?x345 (* (- 1) ?x381)))
 (let ((?x341 (* m!1 n!0)))
 (let ((?x623 (* (- 1) ?x341)))
 (let ((?x322 (* (- 2) n!0)))
 (let ((?x200 (* 3 k!2)))
 (let ((?x184 (* 60 (* k!2 k!2 n!0))))
 (let ((?x646 (* 24 c!3)))
 (let ((?x314 (* k!2 k!2)))
 (let ((?x509 (* 60 ?x314)))
 (let ((?x648 (* 24 k!2)))
 (let ((?x368 (+ (* 60 (* k!2 c!3)) (* 10 (* m!1 k!2 k!2)) (* 10 (* m!1 k!2 n!0 c!3)) ?x648 (* 10 (* m!1 m!1 n!0 c!3)) ?x509 (* 64 (* m!1 k!2)) (* 60 (* k!2 n!0 c!3)) (* 10 (* m!1 k!2 k!2 n!0)) (* 10 (* m!1 k!2 c!3)) (* 10 (* m!1 m!1 k!2 n!0)) (* 10 (* m!1 m!1 c!3)) (* 64 (* m!1 c!3)) ?x646 (* 60 (* m!1 n!0 c!3)) (* 60 (* m!1 k!2 n!0)) ?x184 (* 10 (* m!1 m!1 k!2)))))
 (let ((?x370 (* ?x368 (+ 2 (* (- 3) k!2) (* 2 n!0) ?x341 ?x381 (* (- 3) c!3)))))
 (let ((?x428 (* 27 c!3)))
 (let ((?x403 (* (- 1) (* m!1 m!1))))
 (let ((?x599 (* 9 ?x381)))
 (let ((?x312 (* (- 1) ?x314)))
 (let ((?x316 (* (- 9) n!0)))
 (let ((?x443 (* 32 k!2)))
 (let ((?x467 (* 5 m!1)))
 (let ((?x121 (* n!0 c!3)))
 (let ((?x338 (* 9 ?x121)))
 (let ((?x425 (+ ?x338 ?x467 ?x443 ?x316 ?x312 (* (- 2) (* m!1 k!2)) ?x599 ?x403 ?x428)))
 (let ((?x154 (+ m!1 (* (- 6) n!0))))
 (let (($x161 (= ?x154 6)))
 (let (($x229 (not $x161)))
 (let (($x376 (or $x229 (not (= (+ m!1 (* (- 3) (* n!0 n!0)) k!2 ?x316) 6)) (not (= ?x425 13)) (not (= ?x370 0)) (not (= (+ ?x200 ?x322 ?x623 ?x345 ?x481) 2)))))
 (let ((?x335 (+ k!2 ?x322 ?x345 ?x481)))
 (let (($x422 (= ?x335 0)))
 (let ((?x135 (* 18 c!3)))
 (let ((?x136 (* 5 k!2)))
 (let ((?x317 (+ ?x338 ?x136 ?x316 ?x312 ?x135)))
 (let (($x471 (= ?x317 4)))
 (let (($x195 (and $x161 $x471 $x422 $x348 $x376)))
 (let ((?x461 (* 9 (* c!3 n!0))))
 (let ((?x606 (+ ?x428 ?x443 ?x467 ?x316 ?x312 ?x599 ?x461 (* (- 2) (* k!2 m!1)) ?x403)))
 (let ((?x156 (+ ?x646 ?x648 ?x509 (* 60 (* c!3 k!2)) (* 10 (* k!2 k!2 m!1)) (* 10 (* c!3 m!1 m!1)) (* 60 (* c!3 k!2 n!0)) ?x184 (* 60 (* k!2 m!1 n!0)) (* 64 (* k!2 m!1)) (* 60 (* c!3 m!1 n!0)) (* 10 (* c!3 k!2 m!1)) (* 10 (* k!2 m!1 m!1)) (* 10 (* c!3 k!2 m!1 n!0)) (* 10 (* k!2 k!2 m!1 n!0)) (* 10 (* c!3 m!1 m!1 n!0)) (* 10 (* k!2 m!1 m!1 n!0)) (* 64 (* c!3 m!1)))))
 (let ((?x448 (* ?x156 (+ 2 (* (- 3) c!3) (* (- 3) k!2) (* 2 n!0) ?x381 ?x341))))
 (let (($x387 (or (not (= ?x448 0)) $x229 (not (= (+ k!2 m!1 ?x316 (* (- 3) (* n!0 n!0))) 6)) (not (= ?x606 13)) (not (= (+ ?x481 ?x200 ?x322 ?x345 ?x623) 2)))))
 (let (($x383 (and $x161 (= (+ ?x135 ?x136 ?x316 ?x312 ?x461) 4) (= (+ ?x481 k!2 ?x322 ?x345) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 0) $x387)))
 (let (($x133 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x545 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x553 (not $x545)))
 (let ((?x160 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x523 (+ (* 27 c) (* 32 k) ?x435 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x527 (not (= ?x523 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x372 (* m n)))
 (let ((?x56 (* 2 n)))
 (let ((?x231 (* (- 3) c)))
 (let ((?x537 (+ 2 ?x231 (* (- 3) k) ?x56 ?x52 ?x372)))
 (let ((?x619 (* 10 (* k m m n))))
 (let ((?x617 (* 10 (* c m m n))))
 (let ((?x615 (* 10 (* k k m n))))
 (let ((?x613 (* 10 (* c k m n))))
 (let ((?x165 (+ (* 24 c) (* 24 k) (* 60 ?x46) (* 60 (* c k)) (* 10 (* k k m)) (* 10 (* c m m)) (* 60 (* c k n)) (* 60 (* k k n)) (* 60 (* k m n)) (* 64 (* k m)) (* 60 (* c m n)) (* 10 (* c k m)) (* 10 (* k m m)) ?x613 ?x615 ?x617 ?x619 (* 64 (* c m)))))
 (let (($x227 (or (not (= (* ?x165 ?x537) 0)) $x361 (not (= (+ k m ?x222 (* (- 3) (* n n))) 6)) $x527 $x553)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (and $x143 $x220 $x265 $x301 $x227))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x175 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let ((?x592 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x56 (* 2 n)))
 (let ((?x401 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x437 (+ 1 n)))
 (let ((?x535 (* ?x437 ?x74)))
 (let ((?x432 (* (- 4) k)))
 (let ((?x231 (* (- 3) c)))
 (let ((?x293 (+ (* 10 (* ?x437 (+ 6 m) ?x74 (+ c k))) (* 4 (* (+ 6 m) (+ c k))))))
 (let (($x294 (not (= (* ?x293 (+ 2 ?x231 ?x432 ?x535 ?x401 ?x56)) 0))))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x273 (+ ?x37 (* 23 k) (* 9 (* ?x437 (+ c k))) ?x435 ?x222 (* (- 1) (* ?x74 ?x74)))))
 (let (($x248 (= (+ (* 3 (* ?x437 ?x437)) (* (- 1) k) ?x401 (* 3 n)) (- 3))))
 (let (($x253 (not $x248)))
 (let (($x331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x331 (or $x253 (not (= ?x273 13)) $x294 $x361 (not (= ?x592 2)))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x479 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x545 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x553 (not $x545)))
 (let ((?x160 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x523 (+ (* 27 c) (* 32 k) ?x435 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x527 (not (= ?x523 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x372 (* m n)))
 (let ((?x56 (* 2 n)))
 (let ((?x231 (* (- 3) c)))
 (let ((?x537 (+ 2 ?x231 (* (- 3) k) ?x56 ?x52 ?x372)))
 (let ((?x619 (* 10 (* k m m n))))
 (let ((?x617 (* 10 (* c m m n))))
 (let ((?x615 (* 10 (* k k m n))))
 (let ((?x613 (* 10 (* c k m n))))
 (let ((?x165 (+ (* 24 c) (* 24 k) (* 60 ?x46) (* 60 (* c k)) (* 10 (* k k m)) (* 10 (* c m m)) (* 60 (* c k n)) (* 60 (* k k n)) (* 60 (* k m n)) (* 64 (* k m)) (* 60 (* c m n)) (* 10 (* c k m)) (* 10 (* k m m)) ?x613 ?x615 ?x617 ?x619 (* 64 (* c m)))))
 (let (($x227 (or (not (= (* ?x165 ?x537) 0)) $x361 (not (= (+ k m ?x222 (* (- 3) (* n n))) 6)) $x527 $x553)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (let (($x544 (and $x143 $x220 $x265 $x301 $x227)))
 (let ((?x592 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let ((?x401 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x437 (+ 1 n)))
 (let ((?x535 (* ?x437 ?x74)))
 (let ((?x432 (* (- 4) k)))
 (let ((?x293 (+ (* 10 (* ?x437 (+ 6 m) ?x74 (+ c k))) (* 4 (* (+ 6 m) (+ c k))))))
 (let (($x294 (not (= (* ?x293 (+ 2 ?x231 ?x432 ?x535 ?x401 ?x56)) 0))))
 (let ((?x37 (* 18 c)))
 (let ((?x273 (+ ?x37 (* 23 k) (* 9 (* ?x437 (+ c k))) ?x435 ?x222 (* (- 1) (* ?x74 ?x74)))))
 (let (($x248 (= (+ (* 3 (* ?x437 ?x437)) (* (- 1) k) ?x401 (* 3 n)) (- 3))))
 (let (($x253 (not $x248)))
 (let (($x331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x173 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x222 ?x223) 4)))
 (let (($x290 (and $x143 $x173 (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x331 (or $x253 (not (= ?x273 13)) $x294 $x361 (not (= ?x592 2))))))
 (rewrite (= $x290 $x544)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x511 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x459 (* (- 18) c)))
 (let ((?x182 (+ ?x459 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x401 (* (- 1) m)))
 (let ((?x437 (+ 1 n)))
 (let ((?x535 (* ?x437 ?x74)))
 (let ((?x432 (* (- 4) k)))
 (let ((?x231 (* (- 3) c)))
 (let ((?x293 (+ (* 10 (* ?x437 (+ 6 m) ?x74 (+ c k))) (* 4 (* (+ 6 m) (+ c k))))))
 (let (($x294 (not (= (* ?x293 (+ 2 ?x231 ?x432 ?x535 ?x401 ?x56)) 0))))
 (let (($x248 (= (+ (* 3 (* ?x437 ?x437)) (* (- 1) k) ?x401 (* 3 n)) (- 3))))
 (let (($x253 (not $x248)))
 (let (($x281 (or (not (= (+ ?x231 ?x432 ?x535 ?x401 ?x56) (- 2))) $x253 $x294 (not (= ?x182 (- 13))) $x361)))
 (let (($x331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x366 (= (+ ?x459 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x143 $x366 (= (+ ?x231 (* n k) (* (- 1) k) ?x56) 0) $x331 $x281))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x279 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let ((?x592 (+ ?x260 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x262)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x56 (* 2 n)))
 (let ((?x401 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x437 (+ 1 n)))
 (let ((?x535 (* ?x437 ?x74)))
 (let ((?x432 (* (- 4) k)))
 (let ((?x231 (* (- 3) c)))
 (let ((?x293 (+ (* 10 (* ?x437 (+ 6 m) ?x74 (+ c k))) (* 4 (* (+ 6 m) (+ c k))))))
 (let (($x294 (not (= (* ?x293 (+ 2 ?x231 ?x432 ?x535 ?x401 ?x56)) 0))))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x273 (+ ?x37 (* 23 k) (* 9 (* ?x437 (+ c k))) ?x435 ?x222 (* (- 1) (* ?x74 ?x74)))))
 (let (($x248 (= (+ (* 3 (* ?x437 ?x437)) (* (- 1) k) ?x401 (* 3 n)) (- 3))))
 (let (($x253 (not $x248)))
 (let (($x331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x290 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x331 (or $x253 (not (= ?x273 13)) $x294 $x361 (not (= ?x592 2))))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x459 (* (- 18) c)))
 (let ((?x182 (+ ?x459 (* (- 23) k) (* (- 9) (* ?x437 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x281 (or (not (= (+ ?x231 ?x432 ?x535 ?x401 ?x56) (- 2))) $x253 $x294 (not (= ?x182 (- 13))) $x361)))
 (let (($x366 (= (+ ?x459 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x682 (and $x143 $x366 (= (+ ?x231 (* n k) (* (- 1) k) ?x56) 0) $x331 $x281)))
 (rewrite (= $x682 $x290)))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66))))
 (let (($x104 (= (* ?x89 (+ (* 10 ?x71 ?x74 ?x99 ?x66) (* 4 ?x71 ?x99))) 0)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let (($x106 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= (+ ?x78 (* 9 ?x66) ?x80) 0)) (not (= ?x89 0)) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not $x104))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x106))))))))))))))) :qid k!38))
 ))
 (let ((?x516 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x459 (* (- 18) c)))
 (let ((?x182 (+ ?x459 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x401 (* (- 1) m)))
 (let ((?x437 (+ 1 n)))
 (let ((?x535 (* ?x437 ?x74)))
 (let ((?x432 (* (- 4) k)))
 (let ((?x231 (* (- 3) c)))
 (let ((?x293 (+ (* 10 (* ?x437 (+ 6 m) ?x74 (+ c k))) (* 4 (* (+ 6 m) (+ c k))))))
 (let (($x294 (not (= (* ?x293 (+ 2 ?x231 ?x432 ?x535 ?x401 ?x56)) 0))))
 (let (($x248 (= (+ (* 3 (* ?x437 ?x437)) (* (- 1) k) ?x401 (* 3 n)) (- 3))))
 (let (($x253 (not $x248)))
 (let (($x281 (or (not (= (+ ?x231 ?x432 ?x535 ?x401 ?x56) (- 2))) $x253 $x294 (not (= ?x182 (- 13))) $x361)))
 (let (($x331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x366 (= (+ ?x459 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x682 (and $x143 $x366 (= (+ ?x231 (* n k) (* (- 1) k) ?x56) 0) $x331 $x281)))
 (let ((?x102 (+ (* 10 (+ c k) ?x74 (+ m 6) (+ n 1)) (* 4 (+ c k) (+ m 6)))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x106 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x89 ?x102) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x107 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x106)))
 (rewrite (= $x107 $x682)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x474 (mp (mp @x109 (quant-intro (proof-bind ?x516) (= $x108 $x511)) $x511) (rewrite (= $x511 $x511)) $x511)))
 (let ((@x455 (mp (mp @x474 (quant-intro (proof-bind ?x279) (= $x511 $x175)) $x175) (quant-intro (proof-bind ?x479) (= $x175 $x133)) $x133)))
 (let ((@x549 (mp (mp~ @x455 (sk (~ $x133 $x383)) $x383) (rewrite (= $x383 $x195)) $x195)))
 (let ((@x585 (and-elim @x549 $x348)))
 (let ((@x484 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x348) $x556)) @x585 $x556)))
 (let (($x355 (>= ?x127 0)))
 (let ((@x256 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x348) $x355)) @x585 $x355)))
 (let (($x296 (<= ?x317 4)))
 (let ((@x343 (and-elim @x549 $x471)))
 (let ((@x400 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x471) $x296)) @x343 $x296)))
 (let (($x557 (>= ?x317 4)))
 (let ((@x417 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x471) $x557)) @x343 $x557)))
 (let (($x367 (<= ?x335 0)))
 (let ((@x283 (and-elim @x549 $x422)))
 (let ((@x444 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x422) $x367)) @x283 $x367)))
 (let (($x358 (>= ?x335 0)))
 (let ((@x651 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x422) $x358)) @x283 $x358)))
 (let (($x921 (<= c!3 1)))
 (let ((@x1020 (hypothesis $x921)))
 (let (($x128 (>= ?x154 6)))
 (let ((@x245 (and-elim @x549 $x161)))
 (let ((@x440 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x229 $x128)) @x245 $x128)))
 (let (($x905 (<= m!1 18)))
 (let (($x1013 (not $x905)))
 (let (($x1006 (>= (+ m!1 (* 2 (* n!0 n!0)) (* (- 5) n!0) (* 2 c!3)) 31)))
 (let ((@x1011 (hypothesis $x905)))
 (let (($x473 (<= ?x154 6)))
 (let ((@x450 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x229 $x473)) @x245 $x473)))
 (let (($x534 (<= m!1 12)))
 (let (($x719 (not $x534)))
 (let (($x532 (<= n!0 0)))
 (let (($x391 (not $x532)))
 (let (($x396 (>= n!0 0)))
 (let (($x408 (not $x396)))
 (let ((@x570 (hypothesis $x408)))
 (let (($x828 (>= ?x121 5)))
 (let (($x357 (>= ?x121 4)))
 (let (($x723 (>= n!0 2)))
 (let ((@x390 (hypothesis (not $x357))))
 (let (($x178 (>= c!3 0)))
 (let ((@x407 (hypothesis (not $x178))))
 (let (($x496 (>= n!0 (- 1))))
 (let (($x392 (not $x496)))
 (let ((@x410 (hypothesis $x496)))
 (let (($x284 (>= ?x314 0)))
 (let ((@x167 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x284)) false) $x284)))
 (let ((@x421 ((_ th-lemma arith farkas 2/3 5/3 5/3 5/3 5/3 -5/9 -1/9 -1/9 1 1 1) @x570 @x410 @x570 @x410 @x570 @x256 @x167 @x417 @x410 @x570 @x407 false)))
 (let ((@x533 (unit-resolution (lemma @x421 (or $x392 $x396 $x178)) @x407 @x570 $x392)))
 (let ((@x445 ((_ th-lemma arith farkas -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3 1 -1/3 1 1) @x533 @x390 @x570 @x167 @x407 @x417 @x444 @x533 @x484 @x407 @x390 false)))
 (let ((@x333 ((_ th-lemma arith) @x570 (unit-resolution (lemma @x445 (or $x178 $x357 $x396)) @x570 @x390 $x178) @x256 @x484 @x256 @x484 @x417 @x400 @x256 @x484 @x651 @x444 false)))
 (let ((@x513 (hypothesis $x532)))
 (let ((@x405 (hypothesis $x396)))
 (let ((@x120 (lemma ((_ th-lemma arith farkas 1/6 1 -1/6 -1/6 3/2 3/2 1 1) @x484 @x444 @x167 @x417 @x405 @x513 @x405 @x513 false) (or $x391 $x408))))
 (let ((@x735 (unit-resolution @x120 (unit-resolution (lemma @x333 (or $x396 $x357)) @x390 $x396) $x391)))
 (let ((@x715 (hypothesis $x534)))
 (let ((@x288 (hypothesis $x391)))
 (let ((@x711 ((_ th-lemma arith farkas 4/9 -4/9 5/3 5/3 5/3 -5/9 1 1 1 -1/9 -1/9 -1/9 1 1 1 1) @x715 @x440 @x288 @x715 @x440 @x256 @x288 @x715 @x440 @x288 @x484 @x417 @x444 @x288 @x715 @x440 false)))
 (let ((@x705 (lemma @x711 (or $x719 $x532))))
 (let ((@x707 (lemma ((_ th-lemma arith farkas -1/6 1/6 1) (hypothesis $x719) @x450 (hypothesis (not $x723)) false) (or $x723 $x534))))
 (let ((@x734 (unit-resolution @x707 (unit-resolution @x705 @x735 $x719) $x723)))
 (let ((@x726 ((_ th-lemma arith) @x734 @x390 @x735 @x484 @x651 @x734 @x734 @x390 @x734 @x651 @x444 false)))
 (let ((@x756 (lemma @x726 $x357)))
 (let ((@x904 ((_ th-lemma arith) @x756 (hypothesis (not $x828)) @x651 @x444 @x256 @x484 @x256 @x484 @x651 @x444 @x651 @x444 @x256 @x484 @x256 @x484 @x417 @x400 false)))
 (let ((@x733 (lemma @x904 $x828)))
 (let (($x903 (<= c!3 (- 2))))
 (let (($x759 (not $x903)))
 (let ((@x918 (hypothesis $x903)))
 (let (($x908 (<= c!3 (- 3))))
 (let ((@x920 (hypothesis $x908)))
 (let (($x747 (>= c!3 (- 3))))
 (let ((@x755 (hypothesis (not $x747))))
 (let (($x204 (>= ?x381 (- 5))))
 (let (($x729 (<= k!2 0)))
 (let ((@x798 (hypothesis (not $x204))))
 (let ((@x813 (hypothesis (not $x729))))
 (let ((@x814 ((_ th-lemma arith gomory-cut 1/2 1/2) @x256 @x813 (>= (+ (* n!0 n!0) n!0) 1))))
 (let ((?x166 (* n!0 n!0)))
 (let (($x754 (>= ?x166 0)))
 (let ((@x743 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x754)) false) $x754)))
 (let ((@x815 ((_ th-lemma arith) @x444 @x798 @x743 @x484 @x417 @x167 @x813 @x814 @x814 @x256 @x484 @x651 @x444 @x256 @x484 @x417 @x400 @x256 @x484 false)))
 (let (($x799 (>= k!2 0)))
 (let ((@x748 (hypothesis (not $x799))))
 (let ((@x819 (unit-resolution (lemma ((_ th-lemma arith farkas 1 1 1 1 1) @x798 @x748 @x743 @x484 @x748 false) (or $x799 $x204)) @x798 $x799)))
 (let ((@x820 ((_ th-lemma arith farkas 1 1 1) @x798 @x819 (unit-resolution (lemma @x815 (or $x729 $x204)) @x798 $x729) false)))
 (let ((@x821 (lemma @x820 $x204)))
 (let ((@x725 ((_ th-lemma arith gomory-cut 1/3 1/3 -1/3 -1/3 5/6 5/6 -1) @x417 @x167 @x756 @x755 @x651 @x821 @x755 (>= (+ (* 6 ?x121) ?x136 (* (- 10) n!0) (* 15 c!3)) 5))))
 (let ((@x796 ((_ th-lemma arith) @x755 @x725 @x651 @x444 @x417 @x400 @x651 @x444 @x417 @x400 @x417 @x400 @x651 @x444 @x256 @x484 @x651 @x444 false)))
 (let ((@x803 (lemma @x796 $x747)))
 (let ((@x911 ((_ th-lemma arith) @x651 @x444 @x651 @x444 @x256 @x484 @x803 @x920 @x803 @x920 @x803 @x920 @x803 @x920 @x803 @x920 @x803 @x920 @x651 @x444 @x256 @x484 @x256 @x484 @x651 @x444 @x803 @x920 @x803 @x920 @x803 @x920 @x417 @x400 @x803 @x920 false)))
 (let ((@x902 (lemma @x911 (not $x908))))
 (let ((@x906 ((_ th-lemma arith) @x733 @x902 @x918 @x821 @x484 @x733 @x902 @x918 @x821 @x484 @x918 @x570 @x821 @x902 @x256 @x484 @x902 @x918 @x902 @x918 false)))
 (let ((@x925 (unit-resolution (lemma @x906 (or $x759 $x396)) @x570 $x759)))
 (let ((@x926 ((_ th-lemma arith) @x651 @x444 @x256 @x484 @x256 @x484 @x651 @x444 @x925 @x733 @x570 @x925 @x733 @x570 @x925 @x733 @x570 @x925 @x733 @x570 @x925 @x733 @x570 @x925 @x733 @x570 @x925 @x733 @x570 @x925 @x733 @x570 @x925 @x733 @x570 @x651 @x444 @x417 @x400 @x256 @x484 false)))
 (let ((@x1010 (unit-resolution @x705 (unit-resolution @x120 (lemma @x926 $x396) $x391) $x719)))
 (let ((@x1012 ((_ th-lemma arith farkas -5/18 -13/18 -13/18 13/18 -2/3 2/3 -2/3 -2/3 -2/3 -2/3 -4 -4 1) @x440 @x440 @x1010 @x450 @x651 @x484 @x1010 @x450 @x1011 @x440 @x1010 @x450 (hypothesis (not $x1006)) false)))
 (let ((@x1017 ((_ th-lemma arith farkas -5/18 -13/18 -2/3 2/3 -2/3 -2/3 -2/3 -2/3 -4 -4 -4 -4 1) @x450 @x1011 @x444 @x256 @x1010 @x450 @x1011 @x440 @x1010 @x450 @x1011 @x440 (unit-resolution (lemma @x1012 (or $x1006 $x1013)) @x1011 $x1006) false)))
 (let ((@x1021 ((_ th-lemma arith gomory-cut 1 1) (lemma @x1017 $x1013) @x440 (>= (+ m!1 (* (- 3) n!0)) 13))))
 (let ((@x1002 ((_ th-lemma arith) @x450 @x1021 @x484 @x733 @x1020 @x417 @x450 @x1021 @x484 @x733 @x1020 @x1020 @x1020 @x733 @x450 @x1021 @x1020 @x733 @x450 @x1021 @x1020 @x733 @x450 @x1021 @x1020 @x733 @x450 @x1021 @x1020 false)))
 ((_ th-lemma arith) (lemma @x1002 (not $x921)) @x256 @x484 @x651 @x444 @x256 @x484 @x417 @x400 @x256 @x484 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 49
 :arith-assert-diseq        29
 :arith-assert-lower        550
 :arith-assert-upper        317
 :arith-bound-prop          2
 :arith-branch-var          11
 :arith-conflicts           39
 :arith-eq-adapter          11
 :arith-fixed-eqs           71
 :arith-gcd-tests           92
 :arith-gomory-cuts         6
 :arith-grobner             23
 :arith-ineq-splits         11
 :arith-max-min             3211
 :arith-nonlinear-bounds    255
 :arith-nonlinear-horner    176
 :arith-num-rows            21
 :arith-offset-eqs          2
 :arith-patches             37
 :arith-patches_succ        16
 :arith-pivots              356
 :arith-pseudo-nonlinear    67
 :arith-row-summations      1648
 :arith-tableau-max-columns 72
 :arith-tableau-max-rows    21
 :conflicts                 40
 :decisions                 356
 :del-clause                62
 :final-checks              91
 :max-memory                3.91
 :memory                    3.23
 :minimized-lits            15
 :mk-bool-var               121
 :mk-clause                 71
 :num-allocs                1938246
 :num-checks                1
 :propagations              136
 :rlimit-count              105325
 :time                      0.03
 :total-time                0.04)
