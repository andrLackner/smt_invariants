unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let (($x1791 (>= c!3 1)))
 (let (($x1049 (>= n!0 0)))
 (let ((@x1209 (hypothesis (not $x1049))))
 (let ((?x659 (* k!2 k!2)))
 (let (($x653 (>= ?x659 0)))
 (let ((@x335 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x653)) false) $x653)))
 (let ((?x148 (* (- 5) k!2)))
 (let ((?x203 (* n!0 c!3)))
 (let ((?x395 (* (- 9) ?x203)))
 (let ((?x412 (* 9 n!0)))
 (let ((?x332 (+ ?x412 ?x395 (* (- 18) c!3) ?x148 ?x659)))
 (let (($x481 (<= ?x332 (- 4))))
 (let (($x156 (= ?x332 (- 4))))
 (let (($x516 (= (+ ?x412 (* (- 1) k!2) (* (- 1) m!1) (* 3 (* n!0 n!0))) (- 6))))
 (let ((?x567 (* m!1 m!1)))
 (let ((?x127 (* (- 5) m!1)))
 (let ((?x496 (* (- 32) k!2)))
 (let ((?x494 (* (- 27) c!3)))
 (let ((?x217 (* n!0 k!2)))
 (let ((?x176 (* (- 9) ?x217)))
 (let ((?x196 (* k!2 m!1)))
 (let ((?x292 (* 2 ?x196)))
 (let ((?x258 (* 60 ?x659)))
 (let ((?x513 (* 10 (* k!2 m!1 m!1))))
 (let ((?x328 (* 64 (* c!3 m!1))))
 (let ((?x594 (* 24 k!2)))
 (let ((?x590 (* 24 c!3)))
 (let ((?x269 (* 10 (* c!3 m!1 m!1))))
 (let ((?x267 (* 10 (* c!3 k!2 m!1))))
 (let ((?x345 (* 64 ?x196)))
 (let ((?x371 (* 10 (* k!2 k!2 m!1))))
 (let ((?x151 (* 60 (* c!3 k!2))))
 (let ((?x311 (+ (* 60 (* n!0 k!2 m!1)) ?x151 ?x371 ?x345 ?x267 ?x269 ?x590 (* 10 (* n!0 c!3 m!1 m!1)) ?x594 ?x328 (* 10 (* n!0 k!2 m!1 m!1)) ?x513 (* 10 (* n!0 c!3 k!2 m!1)) (* 60 (* n!0 c!3 k!2)) (* 60 (* n!0 c!3 m!1)) (* 60 (* n!0 k!2 k!2)) (* 10 (* n!0 k!2 k!2 m!1)) ?x258)))
 (let (($x369 (= (* ?x311 (+ 13 ?x412 ?x292 ?x395 ?x176 ?x494 ?x496 ?x127 ?x567 ?x659)) 0)))
 (let ((?x577 (* (- 1) m!1)))
 (let ((?x120 (+ (* 6 n!0) ?x577)))
 (let (($x552 (= ?x120 (- 6))))
 (let (($x379 (not $x552)))
 (let ((?x545 (* (- 3) c!3)))
 (let ((?x134 (* 2 n!0)))
 (let (($x389 (or (not (= (+ ?x134 ?x217 ?x545 (* (- 3) k!2) (* n!0 m!1)) (- 2))) $x379 (not (= (+ ?x412 ?x292 ?x395 ?x176 ?x494 ?x496 ?x127 ?x567 ?x659) (- 13))) (not $x369) (not $x516))))
 (let ((?x501 (* n!0 n!0)))
 (let ((?x537 (* 3 ?x501)))
 (let ((?x532 (* (- 1) k!2)))
 (let ((?x593 (+ (* 3 n!0) ?x532 ?x537)))
 (let (($x595 (= ?x593 0)))
 (let ((?x550 (+ ?x134 ?x217 ?x545 ?x532)))
 (let (($x558 (= ?x550 0)))
 (let (($x197 (and $x552 $x156 $x558 $x595 $x389)))
 (let ((?x253 (* k!2 n!0)))
 (let ((?x242 (* (- 1) ?x253)))
 (let ((?x251 (* (- 2) n!0)))
 (let ((?x436 (* 3 c!3)))
 (let (($x326 (= (+ ?x436 (* 3 k!2) ?x251 ?x242 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x202 (* c!3 n!0)))
 (let ((?x205 (* 9 ?x202)))
 (let ((?x604 (* (- 1) ?x659)))
 (let ((?x275 (* (- 9) n!0)))
 (let ((?x201 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x275 ?x604 (* 9 ?x253) ?x205 (* (- 2) ?x196) (* (- 1) ?x567))))
 (let ((?x503 (+ 13 ?x494 ?x496 ?x127 ?x412 ?x659 (* (- 9) ?x253) (* (- 9) ?x202) ?x292 ?x567)))
 (let ((?x159 (+ ?x590 ?x594 ?x258 ?x267 ?x269 ?x151 (* 60 (* c!3 k!2 n!0)) ?x371 (* 60 (* c!3 m!1 n!0)) (* 60 (* k!2 m!1 n!0)) ?x345 ?x513 (* 60 (* k!2 k!2 n!0)) (* 10 (* c!3 k!2 m!1 n!0)) (* 10 (* k!2 k!2 m!1 n!0)) (* 10 (* c!3 m!1 m!1 n!0)) (* 10 (* k!2 m!1 m!1 n!0)) ?x328)))
 (let (($x382 (or (not (= (* ?x159 ?x503) 0)) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= ?x201 13)) (not (= (+ k!2 m!1 ?x275 (* (- 3) ?x501)) 6)) (not $x326))))
 (let (($x297 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x356 (and $x297 (= (+ (* 18 c!3) (* 5 k!2) ?x275 ?x604 ?x205) 4) (= (+ ?x436 k!2 ?x251 ?x242) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x501)) 0) $x382)))
 (let (($x405 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x606 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x614 (not $x606)))
 (let (($x551 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x158 (* c n)))
 (let ((?x160 (* 9 ?x158)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x523 (+ (* 27 c) (* 32 k) ?x435 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x527 (not (= ?x523 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x486 (* m m)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x507 (+ 13 (* (- 27) c) (* (- 32) k) ?x452 ?x45 ?x46 (* (- 9) ?x52) (* (- 9) ?x158) (* 2 (* k m)) ?x486)))
 (let ((?x631 (* 10 (* k m m n))))
 (let ((?x629 (* 10 (* c m m n))))
 (let ((?x627 (* 10 (* k k m n))))
 (let ((?x625 (* 10 (* c k m n))))
 (let ((?x235 (+ (* 24 c) (* 24 k) (* 60 ?x46) (* 10 (* c k m)) (* 10 (* c m m)) (* 60 (* c k)) (* 60 (* c k n)) (* 10 (* k k m)) (* 60 (* c m n)) (* 60 (* k m n)) (* 64 (* k m)) (* 10 (* k m m)) (* 60 (* k k n)) ?x625 ?x627 ?x629 ?x631 (* 64 (* c m)))))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x235 ?x507) 0)) $x361 $x527 $x551 $x614))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x410 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x508 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x435 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let ((?x288 (+ (* 10 (* ?x575 (+ 6 m) ?x74 ?x71)) (* 4 (* (+ 6 m) ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x383 (= (+ ?x260 (* 4 k) (* (- 1) (* ?x575 ?x74)) m ?x262) 2)))
 (let (($x343 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x343 (or (not $x383) $x256 $x289 (not (= ?x508 13)) $x361))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x111 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x263 (* (- 1) ?x52)))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x606 (= (+ ?x260 (* 3 k) ?x262 ?x263 (* (- 1) (* m n))) 2)))
 (let (($x614 (not $x606)))
 (let (($x551 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x158 (* c n)))
 (let ((?x160 (* 9 ?x158)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x523 (+ (* 27 c) (* 32 k) ?x435 ?x222 ?x223 (* 9 ?x52) ?x160 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x527 (not (= ?x523 13))))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x486 (* m m)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x507 (+ 13 (* (- 27) c) (* (- 32) k) ?x452 ?x45 ?x46 (* (- 9) ?x52) (* (- 9) ?x158) (* 2 (* k m)) ?x486)))
 (let ((?x631 (* 10 (* k m m n))))
 (let ((?x629 (* 10 (* c m m n))))
 (let ((?x627 (* 10 (* k k m n))))
 (let ((?x625 (* 10 (* c k m n))))
 (let ((?x235 (+ (* 24 c) (* 24 k) (* 60 ?x46) (* 10 (* c k m)) (* 10 (* c m m)) (* 60 (* c k)) (* 60 (* c k n)) (* 10 (* k k m)) (* 60 (* c m n)) (* 60 (* k m n)) (* 64 (* k m)) (* 10 (* k m m)) (* 60 (* k k n)) ?x625 ?x627 ?x629 ?x631 (* 64 (* c m)))))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x265 (= (+ ?x260 k ?x262 ?x263) 0)))
 (let (($x220 (= (+ (* 18 c) (* 5 k) ?x222 ?x223 ?x160) 4)))
 (let (($x378 (and $x143 $x220 $x265 $x301 (or (not (= (* ?x235 ?x507) 0)) $x361 $x527 $x551 $x614))))
 (let ((?x37 (* 18 c)))
 (let ((?x508 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x435 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let ((?x288 (+ (* 10 (* ?x575 (+ 6 m) ?x74 ?x71)) (* 4 (* (+ 6 m) ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let (($x383 (= (+ ?x260 (* 4 k) (* (- 1) (* ?x575 ?x74)) m ?x262) 2)))
 (let (($x343 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let (($x502 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x222 ?x223) 4)))
 (let (($x286 (and $x143 $x502 (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x343 (or (not $x383) $x256 $x289 (not (= ?x508 13)) $x361))))
 (rewrite (= $x286 $x378)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x411 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x288 (+ (* 10 (* ?x575 (+ 6 m) ?x74 ?x71)) (* 4 (* (+ 6 m) ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x471 (* ?x575 ?x74)))
 (let ((?x499 (* (- 3) c)))
 (let (($x229 (or (not (= (+ ?x499 (* (- 4) k) ?x471 ?x640 ?x56) (- 2))) $x256 $x289 $x361 (not (= (+ ?x467 ?x557 ?x246 ?x452 ?x45 ?x80) (- 13))))))
 (let (($x343 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let (($x487 (= (+ ?x467 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x143 $x487 (= (+ ?x499 (* n k) ?x514 ?x56) 0) $x343 $x229))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x597 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x435 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x508 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x435 ?x222 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let ((?x288 (+ (* 10 (* ?x575 (+ 6 m) ?x74 ?x71)) (* 4 (* (+ 6 m) ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x262 (* (- 2) n)))
 (let ((?x260 (* 3 c)))
 (let (($x383 (= (+ ?x260 (* 4 k) (* (- 1) (* ?x575 ?x74)) m ?x262) 2)))
 (let (($x343 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x223 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x286 (and $x143 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x222 ?x223) 4) (= (+ ?x260 (* (- 1) (* n k)) k ?x262) 0) $x343 (or (not $x383) $x256 $x289 (not (= ?x508 13)) $x361))))
 (let ((?x56 (* 2 n)))
 (let ((?x471 (* ?x575 ?x74)))
 (let ((?x499 (* (- 3) c)))
 (let (($x229 (or (not (= (+ ?x499 (* (- 4) k) ?x471 ?x640 ?x56) (- 2))) $x256 $x289 $x361 (not (= (+ ?x467 ?x557 ?x246 ?x452 ?x45 ?x80) (- 13))))))
 (let (($x487 (= (+ ?x467 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x472 (and $x143 $x487 (= (+ ?x499 (* n k) ?x514 ?x56) 0) $x343 $x229)))
 (rewrite (= $x472 $x286)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x66 (+ n 1)))
 (let ((?x99 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 ?x66)) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 ?x66) ?x80)))
 (let (($x104 (= (* ?x81 (+ (* 10 ?x71 ?x74 ?x99 ?x66) (* 4 ?x71 ?x99))) 0)))
 (let (($x90 (= (+ (- (+ (* (- 3) ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let (($x106 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= ?x81 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not $x104))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x106)))))))))))))))) :qid k!38))
 ))
 (let ((?x413 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x452 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x575 (+ 1 n)))
 (let ((?x392 (* ?x575 ?x71)))
 (let ((?x246 (* (- 9) ?x392)))
 (let ((?x557 (* (- 23) k)))
 (let ((?x467 (* (- 18) c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (not $x143)))
 (let ((?x288 (+ (* 10 (* ?x575 (+ 6 m) ?x74 ?x71)) (* 4 (* (+ 6 m) ?x71)))))
 (let (($x289 (not (= (* ?x288 (+ 13 ?x467 ?x557 ?x246 ?x452 ?x45 ?x80)) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x640 (* (- 1) m)))
 (let ((?x514 (* (- 1) k)))
 (let (($x256 (not (= (+ (* 3 (* ?x575 ?x575)) ?x514 ?x640 ?x61) (- 3)))))
 (let ((?x56 (* 2 n)))
 (let ((?x471 (* ?x575 ?x74)))
 (let ((?x499 (* (- 3) c)))
 (let (($x229 (or (not (= (+ ?x499 (* (- 4) k) ?x471 ?x640 ?x56) (- 2))) $x256 $x289 $x361 (not (= (+ ?x467 ?x557 ?x246 ?x452 ?x45 ?x80) (- 13))))))
 (let (($x343 (= (+ (* 3 (* n n)) ?x514 ?x61) 0)))
 (let (($x487 (= (+ ?x467 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x472 (and $x143 $x487 (= (+ ?x499 (* n k) ?x514 ?x56) 0) $x343 $x229)))
 (let ((?x102 (+ (* 10 ?x71 ?x74 (+ m 6) (+ n 1)) (* 4 ?x71 (+ m 6)))))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 (+ n 1)) ?x80)))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x106 (or $x70 (not (= ?x81 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x81 ?x102) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x107 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x106)))
 (rewrite (= $x107 $x472)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x474 (mp (mp @x109 (quant-intro (proof-bind ?x413) (= $x108 $x411)) $x411) (rewrite (= $x411 $x411)) $x411)))
 (let ((@x337 (mp (mp @x474 (quant-intro (proof-bind ?x597) (= $x411 $x410)) $x410) (quant-intro (proof-bind ?x111) (= $x410 $x405)) $x405)))
 (let ((@x231 (mp (mp~ @x337 (sk (~ $x405 $x356)) $x356) (rewrite (= $x356 $x197)) $x197)))
 (let ((@x388 (and-elim @x231 $x156)))
 (let ((@x409 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x156) $x481)) @x388 $x481)))
 (let (($x404 (>= ?x332 (- 4))))
 (let ((@x525 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x156) $x404)) @x388 $x404)))
 (let (($x374 (<= ?x593 0)))
 (let ((@x233 (and-elim @x231 $x595)))
 (let ((@x131 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x595) $x374)) @x233 $x374)))
 (let (($x561 (>= ?x593 0)))
 (let ((@x257 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x595) $x561)) @x233 $x561)))
 (let (($x273 (<= ?x120 (- 6))))
 (let ((@x387 (and-elim @x231 $x552)))
 (let ((@x181 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x379 $x273)) @x387 $x273)))
 (let (($x442 (>= ?x120 (- 6))))
 (let ((@x543 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x379 $x442)) @x387 $x442)))
 (let (($x402 (<= ?x550 0)))
 (let ((@x390 (and-elim @x231 $x558)))
 (let ((@x206 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x558) $x402)) @x390 $x402)))
 (let (($x174 (>= ?x550 0)))
 (let ((@x137 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x558) $x174)) @x390 $x174)))
 (let (($x935 (>= (+ (* 10 n!0) (* (- 7) ?x203) (* (- 15) c!3) ?x148 ?x537 ?x659) (- 2))))
 (let (($x400 (>= ?x203 1)))
 (let ((?x698 (* (- 6) c!3)))
 (let (($x875 (>= (+ (* 4 n!0) (* (- 4) ?x203) ?x698 (* (- 2) k!2) ?x659) (- 10))))
 (let (($x760 (>= ?x311 0)))
 (let (($x546 (>= c!3 0)))
 (let ((@x665 (hypothesis (not $x400))))
 (let (($x190 (<= k!2 0)))
 (let (($x125 (not $x546)))
 (let ((@x394 (hypothesis $x125)))
 (let (($x548 (>= ?x203 (- 1))))
 (let ((@x133 ((_ th-lemma arith) @x394 @x181 (hypothesis (not $x548)) @x394 @x543 @x181 @x525 @x409 @x257 @x131 @x525 @x409 @x257 @x131 @x525 @x409 @x137 @x206 @x525 @x409 @x257 @x131 false)))
 (let ((@x661 (unit-resolution (lemma @x133 (or $x548 $x546)) @x394 $x548)))
 (let ((@x663 (hypothesis (not $x190))))
 (let ((@x667 ((_ th-lemma arith farkas 2/5 2/5 -1/3 6/5 1/15 3/5 -1/15 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x661 @x394 @x257 @x394 @x409 @x665 @x663 @x665 @x335 @x409 @x137 @x131 @x663 @x661 @x394 @x665 @x335 @x409 @x137 @x131 @x663 @x661 @x394 false)))
 (let (($x585 (>= k!2 0)))
 (let ((@x674 (hypothesis (not $x585))))
 (let ((@x695 ((_ th-lemma arith gomory-cut 1 1/6 1/3 -2/3) @x257 @x525 @x335 @x674 (>= (+ ?x412 (* (- 3) ?x203) ?x698 ?x148 (* 6 ?x501) ?x659) 2))))
 (let ((@x703 (lemma ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1) @x665 @x394 @x409 @x674 @x665 @x695 @x131 @x394 false) (or $x585 $x400 $x546))))
 (let ((@x706 ((_ th-lemma arith farkas -3/2 1/6 -1/6 1 -1/6 1 1) @x665 @x335 @x409 @x137 @x131 (unit-resolution @x703 @x394 @x665 $x585) (unit-resolution (lemma @x667 (or $x190 $x546 $x400)) @x394 @x665 $x190) false)))
 (let ((@x115 (unit-resolution (lemma @x706 (or $x546 $x400)) @x665 $x546)))
 (let ((@x739 (hypothesis $x546)))
 (let ((@x854 ((_ th-lemma arith) (hypothesis (not $x760)) @x739 @x543 @x181 @x525 @x409 @x543 @x181 @x257 @x131 @x543 @x181 @x525 @x409 @x257 @x131 @x257 @x131 @x525 @x409 @x543 @x181 @x525 @x409 @x137 @x206 @x543 @x181 @x257 @x131 @x257 @x131 @x137 @x206 @x137 @x206 @x543 @x181 @x525 @x409 @x543 @x181 @x525 @x409 false)))
 (let ((@x766 ((_ th-lemma arith) (hypothesis $x760) (hypothesis (not $x875)) @x137 @x206 @x525 @x409 @x137 @x206 @x257 @x131 @x525 @x409 @x137 @x206 @x137 @x206 @x137 @x206 @x525 @x409 @x543 @x181 @x525 @x409 @x137 @x206 @x137 @x206 @x543 @x181 @x525 @x409 @x543 @x181 @x525 @x409 false)))
 (let ((@x856 (unit-resolution (lemma @x766 (or $x875 (not $x760))) (unit-resolution (lemma @x854 (or $x760 $x125)) @x115 $x760) $x875)))
 (let (($x889 (>= n!0 (- 1))))
 (let (($x878 (not $x889)))
 (let (($x907 (<= m!1 0)))
 (let (($x901 (<= n!0 0)))
 (let ((@x867 (hypothesis (not $x901))))
 (let ((@x893 ((_ th-lemma arith) @x257 @x131 @x543 @x181 @x257 @x131 @x115 @x665 @x867 @x115 @x665 @x867 @x525 @x409 @x257 @x131 @x525 @x409 @x257 @x131 @x137 @x206 @x115 @x665 @x867 false)))
 (let ((@x900 ((_ th-lemma arith farkas 1 -1/6 1/6 -1/6 -3/2 1 1 1) @x137 @x131 @x335 @x409 @x665 (hypothesis (not $x907)) @x543 (unit-resolution (lemma @x893 (or $x901 $x400)) @x665 $x901) false)))
 (let ((@x913 (hypothesis $x889)))
 (let ((@x897 (hypothesis $x907)))
 (let ((@x849 ((_ th-lemma arith farkas -1/4 -1/4 -1/4 1/4 3/4 3/2 3/2 3/2 3/2 3/2 3/2 -1/2 1) @x913 @x897 @x181 @x137 @x739 @x913 @x897 @x181 @x913 @x897 @x181 @x131 @x913 false)))
 (let ((@x888 (unit-resolution (lemma @x849 (or $x878 (not $x907) $x125)) (unit-resolution (lemma @x900 (or $x907 $x400)) @x665 $x907) @x115 $x878)))
 (let ((@x873 ((_ th-lemma arith) @x888 @x543 @x856 @x257 @x131 @x543 @x181 @x257 @x131 @x137 @x206 @x137 @x206 @x525 @x409 @x525 @x409 @x257 @x131 @x137 @x206 @x257 @x131 false)))
 (let ((@x919 (lemma @x873 $x400)))
 (let (($x883 (>= ?x501 0)))
 (let ((@x951 ((_ th-lemma arith gomory-cut 3/5 1 1 1/5 3/5) (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x883)) false) $x883) @x257 @x525 @x335 @x919 $x935)))
 (let ((@x945 ((_ th-lemma arith) @x951 (hypothesis (>= (+ (* 5 n!0) ?x577) (- 4))) @x257 @x131 @x525 @x409 @x525 @x409 @x525 @x409 @x257 @x131 @x137 @x206 @x257 @x131 @x257 @x131 @x525 @x409 @x525 @x409 @x543 @x181 @x543 @x181 @x257 @x131 @x257 @x131 @x525 @x409 false)))
 (let ((@x976 (lemma @x945 (not (>= (+ (* 5 n!0) ?x577) (- 4))))))
 (let (($x1070 (>= ?x203 2)))
 (let ((@x1159 ((_ th-lemma arith) @x543 @x181 @x543 @x181 @x137 @x206 @x257 @x131 @x919 (hypothesis (not $x1070)) @x257 @x131 @x257 @x131 @x137 @x206 @x257 @x131 @x525 @x409 @x137 @x206 false)))
 (let ((@x1179 (lemma @x1159 $x1070)))
 (let ((@x1210 ((_ th-lemma arith farkas 5/2 5/2 5/2 5/6 3/2 3/2 3/2 3/2 3/2 3/2 3/2 1/6 1/6 1) @x1209 @x543 @x976 @x257 @x1179 @x543 @x976 @x1209 @x543 @x976 @x1209 @x409 @x335 @x1209 false)))
 (let ((@x1842 (lemma ((_ th-lemma arith farkas 1 1 1) @x1179 (lemma @x1210 $x1049) (hypothesis (not $x1791)) false) $x1791)))
 (let (($x1768 (not $x1791)))
 (let (($x1157 (<= c!3 0)))
 (let (($x1184 (>= c!3 2)))
 (let (($x1166 (not $x1184)))
 (let (($x1440 (<= c!3 1)))
 (let (($x1682 (<= c!3 2)))
 (let (($x1684 (<= c!3 3)))
 (let ((@x1751 ((_ th-lemma arith) (hypothesis (not $x1684)) @x137 @x206 @x525 @x409 @x525 @x409 @x137 @x206 @x525 @x409 @x257 @x131 @x137 @x206 @x525 @x409 @x257 @x131 @x137 @x206 false)))
 (let ((@x1735 (hypothesis $x1684)))
 (let ((@x1736 (hypothesis (not $x1682))))
 (let ((@x1659 ((_ th-lemma arith) @x543 @x181 @x525 @x409 @x543 @x181 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x525 @x409 @x525 @x409 @x137 @x206 @x257 @x131 @x1736 @x1735 @x525 @x409 @x137 @x206 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x1736 @x1735 @x525 @x409 false)))
 (let ((@x1754 (unit-resolution (lemma @x1659 (or (not $x1684) $x1682)) (lemma @x1751 $x1684) $x1682)))
 (let (($x1481 (not $x1440)))
 (let ((@x1648 (hypothesis $x1481)))
 (let ((@x1799 ((_ th-lemma arith) @x543 @x181 @x1648 @x1754 @x1648 @x1754 @x543 @x181 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x525 @x409 @x525 @x409 @x257 @x131 @x525 @x409 @x257 @x131 @x525 @x409 @x1648 @x1754 @x1648 @x1754 @x1648 @x1754 @x137 @x206 @x1648 @x1754 @x525 @x409 @x137 @x206 @x1648 @x1754 @x137 @x206 @x1648 @x1754 false)))
 (let ((@x1229 (hypothesis $x1166)))
 (let (($x1173 (not $x1157)))
 (let ((@x1040 (hypothesis $x1173)))
 (let ((@x1231 ((_ th-lemma arith) @x257 @x131 @x137 @x206 @x257 @x131 @x257 @x131 @x137 @x206 @x1040 @x1229 @x1040 @x1229 @x257 @x131 @x137 @x206 @x137 @x206 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x543 @x181 @x543 @x181 @x1040 @x1229 @x257 @x131 @x137 @x206 @x1040 @x1229 @x1040 @x1229 @x1040 @x1229 @x525 @x409 @x137 @x206 @x525 @x409 @x257 @x131 false)))
 (let ((@x1732 (unit-resolution (lemma @x1231 (or $x1184 $x1157)) (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x1481 $x1166)) (lemma @x1799 $x1440) $x1166) $x1157)))
 (unit-resolution (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x1768 $x1173)) @x1732 $x1768) @x1842 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 81
 :arith-assert-diseq        37
 :arith-assert-lower        1108
 :arith-assert-upper        449
 :arith-bound-prop          9
 :arith-branch-var          46
 :arith-conflicts           60
 :arith-eq-adapter          18
 :arith-fixed-eqs           144
 :arith-gcd-tests           394
 :arith-gomory-cuts         31
 :arith-grobner             62
 :arith-ineq-splits         46
 :arith-max-min             6420
 :arith-nonlinear-bounds    525
 :arith-nonlinear-horner    578
 :arith-num-rows            22
 :arith-offset-eqs          3
 :arith-patches             103
 :arith-patches_succ        11
 :arith-pivots              980
 :arith-pseudo-nonlinear    176
 :arith-row-summations      5197
 :arith-tableau-max-columns 82
 :arith-tableau-max-rows    22
 :conflicts                 68
 :decisions                 449
 :del-clause                119
 :final-checks              240
 :max-memory                4.13
 :memory                    3.33
 :minimized-lits            10
 :mk-bool-var               349
 :mk-clause                 177
 :num-allocs                8319538
 :num-checks                1
 :propagations              289
 :rlimit-count              355921
 :time                      0.17
 :total-time                0.18)
