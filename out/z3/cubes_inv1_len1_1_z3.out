unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x304 (* (- 3) n!0)))
 (let ((?x421 (* n!0 n!0)))
 (let ((?x411 (* (- 3) ?x421)))
 (let ((?x525 (+ k!2 ?x411 ?x304)))
 (let (($x408 (<= ?x525 0)))
 (let (($x552 (= ?x525 0)))
 (let ((?x198 (* 3 c!3)))
 (let ((?x192 (* (- 2) n!0)))
 (let ((?x199 (* k!2 n!0)))
 (let ((?x390 (* (- 1) ?x199)))
 (let ((?x546 (* 3 k!2)))
 (let ((?x572 (* k!2 k!2)))
 (let ((?x594 (* (- 1) ?x572)))
 (let ((?x325 (* 27 c!3)))
 (let ((?x513 (* n!0 c!3)))
 (let ((?x336 (* 9 ?x513)))
 (let ((?x365 (* 5 m!1)))
 (let ((?x571 (* (- 9) n!0)))
 (let ((?x453 (* (- 1) (* m!1 m!1))))
 (let ((?x330 (* k!2 m!1)))
 (let ((?x389 (* (- 2) ?x330)))
 (let ((?x319 (* 9 ?x199)))
 (let ((?x364 (* 32 k!2)))
 (let ((?x420 (* 6 m!1)))
 (let ((?x173 (* (- 1) ?x330)))
 (let ((?x545 (* 6 ?x199)))
 (let ((?x595 (* 6 k!2)))
 (let (($x427 (not (= (+ ?x595 ?x545 ?x173 (* 6 (* n!0 m!1)) ?x453 ?x420) 0))))
 (let ((?x560 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x561 (= ?x560 (- 6))))
 (let (($x303 (not $x561)))
 (let (($x130 (or (not (= (+ k!2 ?x411 ?x571 m!1) 6)) $x303 $x427 (not (= (+ ?x364 ?x319 ?x389 ?x453 ?x571 ?x365 ?x336 ?x325 ?x594) 13)) (not (= (+ ?x546 ?x390 (* (- 1) (* n!0 m!1)) ?x192 ?x198) 2)))))
 (let ((?x522 (+ k!2 ?x390 ?x192 ?x198)))
 (let (($x318 (= ?x522 0)))
 (let ((?x534 (* 18 c!3)))
 (let ((?x190 (* 5 k!2)))
 (let ((?x409 (+ ?x190 ?x571 ?x336 ?x534 ?x594)))
 (let (($x228 (= ?x409 4)))
 (let (($x369 (and $x561 $x228 $x318 $x552 $x130)))
 (let (($x394 (not (= (+ ?x595 ?x420 ?x545 (* 6 (* m!1 n!0)) ?x173 ?x453) 0))))
 (let ((?x616 (* 9 (* c!3 n!0))))
 (let (($x442 (or (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ ?x325 ?x364 ?x365 ?x571 ?x594 ?x319 ?x616 ?x389 ?x453) 13)) (not (= (+ ?x198 ?x546 ?x192 ?x390 (* (- 1) (* m!1 n!0))) 2)) (not (= (+ k!2 m!1 ?x571 ?x411) 6)) $x394)))
 (let (($x471 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x564 (and $x471 (= (+ ?x534 ?x190 ?x571 ?x594 ?x616) 4) (= (+ ?x198 k!2 ?x192 ?x390) 0) (= (+ k!2 ?x304 ?x411) 0) $x442)))
 (let (($x272 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x542 (* (- 1) (* m m))))
 (let ((?x623 (+ (* 6 k) (* 6 m) (* 6 (* k n)) (* 6 (* m n)) (* (- 1) (* k m)) ?x542)))
 (let (($x629 (not (= ?x623 0))))
 (let (($x590 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x565 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x573 (not $x565)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x543 (+ (* 27 c) (* 32 k) ?x455 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) ?x542)))
 (let (($x547 (not (= ?x543 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 (or $x356 $x547 $x573 $x590 $x629)))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x584 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x583 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x455 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let ((?x449 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x311 (not (= (* (+ k m) (+ (- 6) m (* (- 6) n))) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x528 (* (- 1) m)))
 (let ((?x391 (* (- 1) k)))
 (let (($x355 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x391 ?x528 ?x61) (- 3))))
 (let (($x270 (not $x355)))
 (let (($x322 (= (+ (* 3 (* n n)) ?x391 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x322 (or $x270 $x311 $x356 (not (= ?x449 2)) (not (= ?x583 13))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x278 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x542 (* (- 1) (* m m))))
 (let ((?x623 (+ (* 6 k) (* 6 m) (* 6 (* k n)) (* 6 (* m n)) (* (- 1) (* k m)) ?x542)))
 (let (($x629 (not (= ?x623 0))))
 (let (($x590 (not (= (+ k m (* (- 9) n) (* (- 3) (* n n))) 6))))
 (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x565 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x573 (not $x565)))
 (let ((?x155 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x543 (+ (* 27 c) (* 32 k) ?x455 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) ?x542)))
 (let (($x547 (not (= ?x543 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x345 (and $x138 $x215 $x260 $x296 (or $x356 $x547 $x573 $x590 $x629))))
 (let ((?x37 (* 18 c)))
 (let ((?x583 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x455 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x449 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let (($x311 (not (= (* (+ k m) (+ (- 6) m (* (- 6) n))) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x528 (* (- 1) m)))
 (let ((?x391 (* (- 1) k)))
 (let (($x355 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x391 ?x528 ?x61) (- 3))))
 (let (($x270 (not $x355)))
 (let (($x322 (= (+ (* 3 (* n n)) ?x391 ?x61) 0)))
 (let (($x168 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x443 (and $x138 $x168 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x322 (or $x270 $x311 $x356 (not (= ?x449 2)) (not (= ?x583 13))))))
 (rewrite (= $x443 $x345))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x581 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x56 (* 2 n)))
 (let ((?x528 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x508 (+ 1 n)))
 (let ((?x433 (* ?x508 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 18) c)))
 (let ((?x313 (+ ?x479 (* (- 23) k) (* (- 9) (* ?x508 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x311 (not (= (* ?x74 (+ (- 6) m (* (- 6) n))) 0))))
 (let (($x355 (= (+ (* 3 (* ?x508 ?x508)) (* (- 1) k) ?x528 (* 3 n)) (- 3))))
 (let (($x270 (not $x355)))
 (let (($x430 (or $x270 $x311 (not (= ?x313 (- 13))) $x356 (not (= (+ ?x512 (* (- 4) k) ?x433 ?x528 ?x56) (- 2))))))
 (let (($x322 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x386 (= (+ ?x479 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x386 (= (+ ?x512 (* n k) (* (- 1) k) ?x56) 0) $x322 $x430))))))))))))))))))) :qid k!38))
 ))
 (let ((?x450 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x217 (* (- 9) n)))
 (let ((?x455 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x583 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x455 ?x217 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let ((?x449 (+ ?x255 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x257)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x311 (not (= (* (+ k m) (+ (- 6) m (* (- 6) n))) 0))))
 (let ((?x61 (* 3 n)))
 (let ((?x528 (* (- 1) m)))
 (let ((?x391 (* (- 1) k)))
 (let (($x355 (= (+ (* 3 (* (+ 1 n) (+ 1 n))) ?x391 ?x528 ?x61) (- 3))))
 (let (($x270 (not $x355)))
 (let (($x322 (= (+ (* 3 (* n n)) ?x391 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x443 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x322 (or $x270 $x311 $x356 (not (= ?x449 2)) (not (= ?x583 13))))))
 (let ((?x56 (* 2 n)))
 (let ((?x74 (+ k m)))
 (let ((?x508 (+ 1 n)))
 (let ((?x433 (* ?x508 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 18) c)))
 (let ((?x313 (+ ?x479 (* (- 23) k) (* (- 9) (* ?x508 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x430 (or $x270 $x311 (not (= ?x313 (- 13))) $x356 (not (= (+ ?x512 (* (- 4) k) ?x433 ?x528 ?x56) (- 2))))))
 (let (($x386 (= (+ ?x479 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x440 (and $x138 $x386 (= (+ ?x512 (* n k) ?x391 ?x56) 0) $x322 $x430)))
 (rewrite (= $x440 $x443)))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x50 (- 3)))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* ?x50 (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x101 (or (not (= ?x68 0)) (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x50 ?x74) 0)))))
 (let (($x58 (= (+ (- (+ (* ?x50 c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101))))))))))))))) :qid k!38))
 ))
 (let ((?x588 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x56 (* 2 n)))
 (let ((?x528 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x508 (+ 1 n)))
 (let ((?x433 (* ?x508 ?x74)))
 (let ((?x512 (* (- 3) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x479 (* (- 18) c)))
 (let ((?x313 (+ ?x479 (* (- 23) k) (* (- 9) (* ?x508 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x311 (not (= (* ?x74 (+ (- 6) m (* (- 6) n))) 0))))
 (let (($x355 (= (+ (* 3 (* ?x508 ?x508)) (* (- 1) k) ?x528 (* 3 n)) (- 3))))
 (let (($x270 (not $x355)))
 (let (($x430 (or $x270 $x311 (not (= ?x313 (- 13))) $x356 (not (= (+ ?x512 (* (- 4) k) ?x433 ?x528 ?x56) (- 2))))))
 (let (($x322 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x386 (= (+ ?x479 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x440 (and $x138 $x386 (= (+ ?x512 (* n k) (* (- 1) k) ?x56) 0) $x322 $x430)))
 (let ((?x50 (- 3)))
 (let ((?x68 (- (+ (- 6) m 6) (* 6 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* ?x50 (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x101 (or (not (= ?x68 0)) (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x68 ?x50 ?x74) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* ?x50 c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101)))
 (rewrite (= $x102 $x440)))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x494 (mp (mp @x104 (quant-intro (proof-bind ?x588) (= $x103 $x581)) $x581) (rewrite (= $x581 $x581)) $x581)))
 (let ((@x400 (mp (mp @x494 (quant-intro (proof-bind ?x450) (= $x581 $x584)) $x584) (quant-intro (proof-bind ?x278) (= $x584 $x272)) $x272)))
 (let ((@x410 (mp (mp~ @x400 (sk (~ $x272 $x564)) $x564) (rewrite (= $x564 $x369)) $x369)))
 (let ((@x414 (and-elim @x410 $x552)))
 (let ((@x419 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x552) $x408)) @x414 $x408)))
 (let (($x495 (>= ?x525 0)))
 (let ((@x352 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x552) $x495)) @x414 $x495)))
 (let (($x344 (<= ?x409 4)))
 (let ((@x489 (and-elim @x410 $x228)))
 (let ((@x333 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x228) $x344)) @x489 $x344)))
 (let (($x610 (>= ?x409 4)))
 (let ((@x346 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x228) $x610)) @x489 $x610)))
 (let (($x310 (<= ?x522 0)))
 (let ((@x441 (and-elim @x410 $x318)))
 (let ((@x337 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x318) $x310)) @x441 $x310)))
 (let (($x407 (>= ?x522 0)))
 (let ((@x372 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x318) $x407)) @x441 $x407)))
 (let (($x320 (<= ?x560 (- 6))))
 (let ((@x458 (and-elim @x410 $x561)))
 (let ((@x460 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x303 $x320)) @x458 $x320)))
 (let (($x518 (>= ?x560 (- 6))))
 (let ((@x115 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x303 $x518)) @x458 $x518)))
 (let (($x1000 (<= c!3 1)))
 (let ((@x577 (hypothesis $x1000)))
 (let (($x497 (>= c!3 1)))
 (let ((@x194 (hypothesis (not $x497))))
 (let (($x913 (<= k!2 6)))
 (let ((@x979 (hypothesis $x913)))
 (let (($x578 (<= m!1 6)))
 (let (($x373 (not $x578)))
 (let ((@x481 (hypothesis $x578)))
 (let (($x796 (>= ?x513 2)))
 (let (($x461 (>= ?x513 1)))
 (let (($x241 (>= c!3 0)))
 (let ((@x570 (hypothesis (not $x461))))
 (let (($x423 (not $x241)))
 (let ((@x483 (hypothesis $x423)))
 (let (($x239 (>= n!0 0)))
 (let (($x457 (>= n!0 (- 1))))
 (let ((@x274 (lemma ((_ th-lemma arith farkas 1 1 1) @x570 (hypothesis (not $x457)) @x483 false) (or $x457 $x461 $x241))))
 (let ((@x169 (hypothesis (not $x239))))
 (let ((@x106 (hypothesis $x457)))
 (let ((@x490 (lemma ((_ th-lemma arith farkas -2/5 -1/3 -6/5 -3/5 1/15 1 1 1 1) @x169 @x419 @x483 @x570 @x346 @x106 @x169 @x106 @x169 false) (or (not $x457) $x239 $x241 $x461))))
 (let ((@x575 (unit-resolution @x490 (unit-resolution @x274 @x483 @x570 $x457) @x483 @x570 $x239)))
 (let ((@x448 ((_ th-lemma arith) @x575 @x483 @x352 @x419 @x372 @x337 @x352 @x419 @x372 @x337 @x346 @x333 @x352 @x419 @x372 @x337 false)))
 (let ((@x562 (unit-resolution (lemma @x448 (or $x241 $x461)) @x570 $x241)))
 (let ((@x193 (hypothesis $x241)))
 (let ((@x488 ((_ th-lemma arith) @x115 @x460 @x352 @x419 @x352 @x419 @x193 @x194 @x372 @x337 @x346 @x333 @x352 @x419 @x193 @x194 false)))
 (let ((@x195 ((_ th-lemma arith) @x115 @x169 @x193 @x352 @x419 @x115 @x460 @x352 @x419 @x372 @x337 @x346 @x333 @x352 @x419 @x372 @x337 false)))
 (let ((@x582 ((_ th-lemma arith farkas 1/6 -1 -3/2 1/6 1 1 1) @x352 @x337 @x570 @x346 (unit-resolution (lemma @x195 (or $x239 $x423)) @x562 $x239) @x481 @x460 false)))
 (let ((@x377 ((_ th-lemma arith farkas 1 1 1 1) @x570 (unit-resolution (lemma @x582 (or $x373 $x461)) @x570 $x373) @x115 (unit-resolution (lemma @x488 (or $x497 $x423)) @x562 $x497) false)))
 (let ((@x710 ((_ th-lemma arith) @x115 @x460 @x352 @x419 @x372 @x337 @x115 @x460 @x372 @x337 (lemma @x377 $x461) (hypothesis (not $x796)) @x372 @x337 @x115 @x460 @x372 @x337 @x372 @x337 @x346 @x333 @x115 @x460 @x346 @x333 false)))
 (let ((@x504 (lemma @x710 $x796)))
 (let (($x475 (<= n!0 (- 1))))
 (let ((@x885 (hypothesis $x475)))
 (let (($x281 (>= m!1 (- 6))))
 (let ((?x649 (+ (* 4 k!2) (* (- 1) ?x421) (* (- 8) n!0) (* 7 ?x513) (* 12 c!3))))
 (let (($x283 (>= ?x513 11)))
 (let (($x160 (not $x281)))
 (let ((@x284 (hypothesis $x160)))
 (let (($x363 (<= c!3 (- 3))))
 (let ((@x476 ((_ th-lemma arith) @x284 @x460 (hypothesis (not $x363)) @x352 @x419 @x372 @x337 @x352 @x419 @x352 @x419 @x346 @x333 @x352 @x419 false)))
 (let ((@x285 (hypothesis $x363)))
 (let ((@x180 (hypothesis (not $x283))))
 (let ((@x181 ((_ th-lemma arith farkas 3 3 3 1 4 12 12 10 10 10 10 10 10 1 1 1 1 1 1 1 1) @x180 @x284 @x460 @x337 @x352 @x284 @x460 @x284 @x460 @x180 @x285 @x180 @x285 @x284 @x460 @x180 @x285 @x180 @x285 @x284 @x460 false)))
 (let ((@x640 (unit-resolution (lemma @x181 (or (not $x363) $x283 $x281)) (unit-resolution (lemma @x476 (or $x363 $x281)) @x284 $x363) @x284 $x283)))
 (let ((@x642 ((_ th-lemma arith) @x284 ((_ th-lemma arith gomory-cut 1/2 3/4 3/4 1/2 3/4) @x352 @x284 @x460 @x346 @x640 (>= ?x649 24)) @x115 @x460 @x352 @x419 @x346 @x333 @x352 @x419 @x346 @x333 @x346 @x333 @x346 @x333 @x352 @x419 @x372 @x337 @x352 @x419 @x352 @x419 @x346 @x333 false)))
 (let (($x511 (not $x457)))
 (let ((@x342 (hypothesis $x511)))
 (let ((@x290 (hypothesis $x281)))
 (let ((@x159 ((_ th-lemma arith farkas 1/9 -2/3 -1/9 -1/3 -1/3 -1/3 -1/3 1) @x115 @x342 @x460 @x337 @x290 @x115 @x342 ((_ th-lemma arith gomory-cut 1 1/3 1/3 1 1 1) @x372 @x290 @x115 @x290 @x115 @x342 (>= (+ k!2 c!3) (- 1))) false)))
 (let ((@x893 (unit-resolution (lemma @x159 (or $x160 $x457)) (lemma @x642 $x281) $x457)))
 (let (($x718 (>= ?x572 0)))
 (let ((@x903 ((_ th-lemma arith farkas 1/9 1/9 2/3 5/3 5/3 5/3 5/3 5/9 2 2 1) @x346 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x718)) false) $x718) @x885 @x893 @x885 @x893 @x885 @x419 @x893 @x885 @x504 false)))
 (let ((@x921 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x504 (lemma @x903 (not $x475)) @x460 @x481 false) $x373)))
 (let ((@x980 ((_ th-lemma arith farkas 27 34 34 -1 5 1 1 1 1 1 1 1 1) @x504 @x115 @x921 @x333 @x352 @x115 @x921 @x352 @x979 @x115 @x921 @x352 @x979 false)))
 (let ((@x892 ((_ th-lemma arith) (lemma @x980 (not $x913)) @x194 @x352 @x419 @x115 @x460 @x352 @x419 @x346 @x333 @x352 @x419 @x372 @x337 @x352 @x419 false)))
 (let ((@x914 (lemma @x892 $x497)))
 (let ((@x987 ((_ th-lemma arith) @x372 @x337 @x115 @x460 @x352 @x419 @x352 @x419 @x914 @x577 @x914 @x577 @x914 @x577 @x914 @x577 @x914 @x577 @x914 @x577 @x914 @x577 @x914 @x577 @x914 @x577 @x914 @x577 @x352 @x419 @x914 @x577 @x346 @x333 @x914 @x577 false)))
 ((_ th-lemma arith) (lemma @x987 (not $x1000)) @x352 @x419 @x115 @x460 @x372 @x337 @x352 @x419 @x346 @x333 @x352 @x419 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 39
 :arith-assert-diseq        44
 :arith-assert-lower        274
 :arith-assert-upper        160
 :arith-bound-prop          3
 :arith-branch-var          17
 :arith-conflicts           31
 :arith-eq-adapter          9
 :arith-fixed-eqs           44
 :arith-gcd-tests           148
 :arith-gomory-cuts         12
 :arith-grobner             29
 :arith-ineq-splits         17
 :arith-max-min             1175
 :arith-nonlinear-bounds    77
 :arith-nonlinear-horner    193
 :arith-num-rows            14
 :arith-offset-eqs          4
 :arith-patches             44
 :arith-patches_succ        10
 :arith-pivots              352
 :arith-pseudo-nonlinear    38
 :arith-row-summations      1609
 :arith-tableau-max-columns 41
 :arith-tableau-max-rows    14
 :conflicts                 32
 :decisions                 177
 :del-clause                47
 :final-checks              100
 :max-memory                3.78
 :memory                    3.24
 :minimized-lits            2
 :mk-bool-var               102
 :mk-clause                 52
 :num-allocs                1868078
 :num-checks                1
 :propagations              110
 :rlimit-count              85349
 :time                      0.04
 :total-time                0.05)
