unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x676 (* (- 1) k!2)))
 (let ((?x564 (* (- 3) c!3)))
 (let ((?x328 (* n!0 k!2)))
 (let ((?x158 (* 2 n!0)))
 (let ((?x296 (+ ?x158 ?x328 ?x564 ?x676)))
 (let (($x403 (<= ?x296 0)))
 (let (($x319 (= ?x296 0)))
 (let ((?x111 (* (- 1) m!1)))
 (let ((?x258 (* n!0 n!0)))
 (let ((?x440 (* 3 ?x258)))
 (let ((?x658 (* 9 n!0)))
 (let ((?x374 (* (- 9) k!2)))
 (let ((?x700 (* 324 (* k!2 k!2 k!2))))
 (let ((?x337 (* 324 (* c!3 k!2 k!2))))
 (let ((?x441 (* (- 9) m!1)))
 (let ((?x120 (* (- 9) ?x328)))
 (let ((?x292 (+ (* (- 9) (* n!0 m!1)) (* 108 (* m!1 m!1 m!1 k!2)) (* 9 (* m!1 m!1 m!1 m!1 c!3)) (* 18 (* m!1 m!1 m!1 k!2 k!2)) (* 648 (* m!1 c!3 k!2)) (* 324 (* m!1 m!1 c!3)) (* 108 (* m!1 m!1 m!1 c!3)) (* 108 (* m!1 k!2 k!2 k!2)) ?x120 ?x441 ?x337 ?x700 (* 9 (* m!1 m!1 m!1 m!1 k!2)) (* 108 (* m!1 c!3 k!2 k!2)) (* 216 (* m!1 m!1 k!2 k!2)) (* 18 (* m!1 m!1 m!1 c!3 k!2)) (* 9 (* m!1 m!1 k!2 k!2 k!2)) (* 9 (* m!1 m!1 c!3 k!2 k!2)) (* 324 (* m!1 m!1 k!2)) (* 648 (* m!1 k!2 k!2)) (* 216 (* m!1 m!1 c!3 k!2)) ?x374)))
 (let ((?x536 (+ (* 6 n!0) ?x111)))
 (let (($x537 (= ?x536 (- 6))))
 (let (($x557 (not $x537)))
 (let ((?x559 (* n!0 c!3)))
 (let ((?x339 (* (- 9) ?x559)))
 (let ((?x310 (* m!1 m!1)))
 (let ((?x170 (* k!2 k!2)))
 (let ((?x135 (+ ?x170 ?x658 ?x310 ?x120 (* (- 5) m!1) (* 2 (* m!1 k!2)) (* (- 27) c!3) ?x339 (* (- 32) k!2))))
 (let (($x685 (or (not (= (+ ?x658 ?x440 ?x111 ?x676) (- 6))) (not (= (+ (* n!0 m!1) ?x158 ?x328 ?x564 (* (- 3) k!2)) (- 2))) (not (= ?x135 (- 13))) $x557 (not (= (* ?x292 (+ 6 ?x658 ?x440 ?x111 ?x676)) 0)))))
 (let ((?x442 (+ (* 3 n!0) ?x440 ?x676)))
 (let (($x459 (= ?x442 0)))
 (let ((?x271 (* (- 5) k!2)))
 (let ((?x287 (* (- 18) c!3)))
 (let ((?x272 (+ ?x170 ?x658 ?x287 ?x339 ?x271)))
 (let (($x366 (= ?x272 (- 4))))
 (let (($x645 (and $x537 $x366 $x319 $x459 $x685)))
 (let ((?x666 (+ ?x374 ?x441 (* (- 9) (* k!2 n!0)) (* 108 (* c!3 k!2 k!2 m!1)) (* 324 (* k!2 m!1 m!1)) ?x337 (* 216 (* k!2 k!2 m!1 m!1)) (* 216 (* c!3 k!2 m!1 m!1)) (* 648 (* k!2 k!2 m!1)) (* (- 9) (* m!1 n!0)) (* 648 (* c!3 k!2 m!1)) (* 324 (* c!3 m!1 m!1)) (* 108 (* c!3 m!1 m!1 m!1)) ?x700 (* 108 (* k!2 k!2 k!2 m!1)) (* 9 (* c!3 k!2 k!2 m!1 m!1)) (* 9 (* k!2 k!2 k!2 m!1 m!1)) (* 18 (* c!3 k!2 m!1 m!1 m!1)) (* 18 (* k!2 k!2 m!1 m!1 m!1)) (* 9 (* c!3 m!1 m!1 m!1 m!1)) (* 9 (* k!2 m!1 m!1 m!1 m!1)) (* 108 (* k!2 m!1 m!1 m!1)))))
 (let ((?x267 (* k!2 n!0)))
 (let ((?x149 (* (- 1) ?x267)))
 (let ((?x266 (* (- 2) n!0)))
 (let ((?x150 (* 3 c!3)))
 (let (($x435 (= (+ ?x150 (* 3 k!2) ?x266 ?x149 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x550 (* 9 (* c!3 n!0))))
 (let ((?x154 (* (- 1) ?x170)))
 (let ((?x556 (* (- 9) n!0)))
 (let ((?x353 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x556 ?x154 (* 9 ?x267) ?x550 (* (- 2) (* k!2 m!1)) (* (- 1) ?x310))))
 (let (($x543 (or (not (= (+ k!2 m!1 ?x556 (* (- 3) ?x258)) 6)) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= ?x353 13)) (not $x435) (not (= (* ?x666 (+ 6 ?x676 ?x111 ?x658 ?x440)) 0)))))
 (let (($x494 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x438 (and $x494 (= (+ (* 18 c!3) (* 5 k!2) ?x556 ?x154 ?x550) 4) (= (+ ?x150 k!2 ?x266 ?x149) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x258)) 0) $x543)))
 (let (($x191 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x269 (* n n)))
 (let ((?x270 (* 3 ?x269)))
 (let ((?x45 (* 9 n)))
 (let ((?x475 (* (- 1) m)))
 (let ((?x237 (* (- 1) k)))
 (let ((?x642 (* 9 (* k m m m m))))
 (let ((?x640 (* 9 (* c m m m m))))
 (let ((?x630 (* 9 (* k k k m m))))
 (let ((?x628 (* 9 (* c k k m m))))
 (let ((?x371 (* m n)))
 (let ((?x680 (* (- 9) ?x371)))
 (let ((?x52 (* k n)))
 (let ((?x402 (* (- 9) ?x52)))
 (let ((?x677 (* (- 9) m)))
 (let ((?x408 (* (- 9) k)))
 (let ((?x211 (+ ?x408 ?x677 ?x402 (* 108 (* c k k m)) (* 324 (* k m m)) (* 324 (* c k k)) (* 216 (* k k m m)) (* 216 (* c k m m)) (* 648 (* k k m)) ?x680 (* 648 (* c k m)) (* 324 (* c m m)) (* 108 (* c m m m)) (* 324 (* k k k)) (* 108 (* k k k m)) ?x628 ?x630 (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x640 ?x642 (* 108 (* k m m m)))))
 (let ((?x262 (* (- 1) ?x52)))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let (($x552 (not (= (+ ?x259 (* 3 k) ?x261 ?x262 (* (- 1) ?x371)) 2))))
 (let ((?x159 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x522 (+ (* 27 c) (* 32 k) ?x434 ?x221 ?x222 (* 9 ?x52) ?x159 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x526 (not (= ?x522 13))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let (($x212 (or (not (= (+ k m ?x221 (* (- 3) ?x269)) 6)) $x360 $x526 $x552 (not (= (* ?x211 (+ 6 ?x237 ?x475 ?x45 ?x270)) 0)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 0)))
 (let (($x264 (= (+ ?x259 k ?x261 ?x262) 0)))
 (let (($x219 (= (+ (* 18 c) (* 5 k) ?x221 ?x222 ?x159) 4)))
 (and $x142 $x219 $x264 $x300 $x212)))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x430 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let ((?x436 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x261)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x344 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x434 ?x221 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x475 (* (- 1) m)))
 (let ((?x237 (* (- 1) k)))
 (let ((?x367 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x329 (not (= (+ ?x367 ?x237 ?x475 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x175 (+ 6 m)))
 (let ((?x284 (+ (* 9 (* ?x175 ?x175 ?x74 ?x74 ?x71)) (* (- 9) (* (+ 1 n) ?x74)))))
 (let (($x282 (not (= (* ?x284 (+ 3 ?x367 ?x237 ?x475 ?x61)) 0))))
 (let (($x379 (= (+ (* 3 (* n n)) ?x237 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x142 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x221 ?x222) 4) (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x379 (or $x282 $x329 $x360 (not (= ?x344 13)) (not (= ?x436 2))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x206 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x269 (* n n)))
 (let ((?x270 (* 3 ?x269)))
 (let ((?x45 (* 9 n)))
 (let ((?x475 (* (- 1) m)))
 (let ((?x237 (* (- 1) k)))
 (let ((?x642 (* 9 (* k m m m m))))
 (let ((?x640 (* 9 (* c m m m m))))
 (let ((?x630 (* 9 (* k k k m m))))
 (let ((?x628 (* 9 (* c k k m m))))
 (let ((?x371 (* m n)))
 (let ((?x680 (* (- 9) ?x371)))
 (let ((?x52 (* k n)))
 (let ((?x402 (* (- 9) ?x52)))
 (let ((?x677 (* (- 9) m)))
 (let ((?x408 (* (- 9) k)))
 (let ((?x211 (+ ?x408 ?x677 ?x402 (* 108 (* c k k m)) (* 324 (* k m m)) (* 324 (* c k k)) (* 216 (* k k m m)) (* 216 (* c k m m)) (* 648 (* k k m)) ?x680 (* 648 (* c k m)) (* 324 (* c m m)) (* 108 (* c m m m)) (* 324 (* k k k)) (* 108 (* k k k m)) ?x628 ?x630 (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x640 ?x642 (* 108 (* k m m m)))))
 (let ((?x262 (* (- 1) ?x52)))
 (let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let (($x552 (not (= (+ ?x259 (* 3 k) ?x261 ?x262 (* (- 1) ?x371)) 2))))
 (let ((?x159 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x522 (+ (* 27 c) (* 32 k) ?x434 ?x221 ?x222 (* 9 ?x52) ?x159 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x526 (not (= ?x522 13))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let (($x212 (or (not (= (+ k m ?x221 (* (- 3) ?x269)) 6)) $x360 $x526 $x552 (not (= (* ?x211 (+ 6 ?x237 ?x475 ?x45 ?x270)) 0)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 0)))
 (let (($x264 (= (+ ?x259 k ?x261 ?x262) 0)))
 (let (($x219 (= (+ (* 18 c) (* 5 k) ?x221 ?x222 ?x159) 4)))
 (let (($x716 (and $x142 $x219 $x264 $x300 $x212)))
 (let ((?x436 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x261)))
 (let ((?x37 (* 18 c)))
 (let ((?x344 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x434 ?x221 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x61 (* 3 n)))
 (let ((?x367 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x329 (not (= (+ ?x367 ?x237 ?x475 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x175 (+ 6 m)))
 (let ((?x284 (+ (* 9 (* ?x175 ?x175 ?x74 ?x74 ?x71)) (* (- 9) (* (+ 1 n) ?x74)))))
 (let (($x282 (not (= (* ?x284 (+ 3 ?x367 ?x237 ?x475 ?x61)) 0))))
 (let (($x379 (= (+ ?x270 ?x237 ?x61) 0)))
 (let (($x172 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x221 ?x222) 4)))
 (let (($x203 (and $x142 $x172 (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x379 (or $x282 $x329 $x360 (not (= ?x344 13)) (not (= ?x436 2))))))
 (rewrite (= $x203 $x716)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x551 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x458 (* (- 18) c)))
 (let ((?x419 (+ ?x458 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x475 (* (- 1) m)))
 (let ((?x237 (* (- 1) k)))
 (let ((?x367 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x329 (not (= (+ ?x367 ?x237 ?x475 ?x61) (- 3)))))
 (let ((?x156 (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 (+ c k)))))
 (let ((?x290 (* (+ ?x156 (* (- 9) (* (+ 1 n) ?x74))) (+ 3 ?x367 ?x237 ?x475 ?x61))))
 (let (($x282 (not (= ?x290 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x359 (+ 1 n)))
 (let ((?x482 (* ?x359 ?x74)))
 (let ((?x323 (* (- 3) c)))
 (let (($x659 (or (not (= (+ ?x323 (* (- 4) k) ?x482 ?x475 ?x56) (- 2))) $x282 $x329 $x360 (not (= ?x419 (- 13))))))
 (let (($x379 (= (+ (* 3 (* n n)) ?x237 ?x61) 0)))
 (let (($x134 (= (+ ?x458 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x142 $x134 (= (+ ?x323 (* n k) ?x237 ?x56) 0) $x379 $x659))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x498 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x261 (* (- 2) n)))
 (let ((?x259 (* 3 c)))
 (let ((?x436 (+ ?x259 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x261)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x434 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x344 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x434 ?x221 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x475 (* (- 1) m)))
 (let ((?x237 (* (- 1) k)))
 (let ((?x367 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x329 (not (= (+ ?x367 ?x237 ?x475 ?x61) (- 3)))))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x175 (+ 6 m)))
 (let ((?x284 (+ (* 9 (* ?x175 ?x175 ?x74 ?x74 ?x71)) (* (- 9) (* (+ 1 n) ?x74)))))
 (let (($x282 (not (= (* ?x284 (+ 3 ?x367 ?x237 ?x475 ?x61)) 0))))
 (let (($x379 (= (+ (* 3 (* n n)) ?x237 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x222 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x203 (and $x142 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x221 ?x222) 4) (= (+ ?x259 (* (- 1) (* n k)) k ?x261) 0) $x379 (or $x282 $x329 $x360 (not (= ?x344 13)) (not (= ?x436 2))))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x458 (* (- 18) c)))
 (let ((?x419 (+ ?x458 (* (- 23) k) (* (- 9) (* (+ 1 n) ?x71)) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x359 (+ 1 n)))
 (let ((?x482 (* ?x359 ?x74)))
 (let ((?x323 (* (- 3) c)))
 (let (($x659 (or (not (= (+ ?x323 (* (- 4) k) ?x482 ?x475 ?x56) (- 2))) $x282 $x329 $x360 (not (= ?x419 (- 13))))))
 (let (($x134 (= (+ ?x458 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x578 (and $x142 $x134 (= (+ ?x323 (* n k) ?x237 ?x56) 0) $x379 $x659)))
 (rewrite (= $x578 $x203))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x98 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x101 (- (* 9 ?x71 ?x74 ?x74 ?x98 ?x98) (* 9 ?x74 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) ?x71) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x105 (or $x70 (not (= (+ ?x78 (* 9 (+ n 1)) ?x80) 0)) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x95 ?x101) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x105)))))))))))))))) :qid k!38))
 ))
 (let ((?x558 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x458 (* (- 18) c)))
 (let ((?x419 (+ ?x458 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x142 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (not $x142)))
 (let ((?x61 (* 3 n)))
 (let ((?x475 (* (- 1) m)))
 (let ((?x237 (* (- 1) k)))
 (let ((?x367 (* 3 (* (+ 1 n) (+ 1 n)))))
 (let (($x329 (not (= (+ ?x367 ?x237 ?x475 ?x61) (- 3)))))
 (let ((?x156 (* 9 (* (+ 6 m) (+ 6 m) ?x74 ?x74 (+ c k)))))
 (let ((?x290 (* (+ ?x156 (* (- 9) (* (+ 1 n) ?x74))) (+ 3 ?x367 ?x237 ?x475 ?x61))))
 (let (($x282 (not (= ?x290 0))))
 (let ((?x56 (* 2 n)))
 (let ((?x359 (+ 1 n)))
 (let ((?x482 (* ?x359 ?x74)))
 (let ((?x323 (* (- 3) c)))
 (let (($x659 (or (not (= (+ ?x323 (* (- 4) k) ?x482 ?x475 ?x56) (- 2))) $x282 $x329 $x360 (not (= ?x419 (- 13))))))
 (let (($x379 (= (+ (* 3 (* n n)) ?x237 ?x61) 0)))
 (let (($x134 (= (+ ?x458 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x578 (and $x142 $x134 (= (+ ?x323 (* n k) ?x237 ?x56) 0) $x379 $x659)))
 (let ((?x101 (- (* 9 (+ c k) ?x74 ?x74 (+ m 6) (+ m 6)) (* 9 ?x74 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x105 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x95 ?x101) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x106 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) ?x61) 0) $x105)))
 (rewrite (= $x106 $x578)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x473 (mp (mp @x108 (quant-intro (proof-bind ?x558) (= $x107 $x551)) $x551) (rewrite (= $x551 $x551)) $x551)))
 (let ((@x416 (mp (mp @x473 (quant-intro (proof-bind ?x498) (= $x551 $x430)) $x430) (quant-intro (proof-bind ?x206) (= $x430 $x191)) $x191)))
 (let ((@x390 (mp (mp~ @x416 (sk (~ $x191 $x438)) $x438) (rewrite (= $x438 $x645)) $x645)))
 (let ((@x340 (and-elim @x390 $x319)))
 (let ((@x226 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x319) $x403)) @x340 $x403)))
 (let (($x465 (>= ?x296 0)))
 (let ((@x115 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x319) $x465)) @x340 $x465)))
 (let (($x362 (<= ?x272 (- 4))))
 (let ((@x496 (and-elim @x390 $x366)))
 (let ((@x732 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x366) $x362)) @x496 $x362)))
 (let (($x467 (>= ?x272 (- 4))))
 (let ((@x213 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x366) $x467)) @x496 $x467)))
 (let (($x200 (<= ?x442 0)))
 (let ((@x483 (and-elim @x390 $x459)))
 (let ((@x727 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x459) $x200)) @x483 $x200)))
 (let (($x199 (>= ?x442 0)))
 (let ((@x370 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x459) $x199)) @x483 $x199)))
 (let (($x424 (<= ?x536 (- 6))))
 (let ((@x672 (and-elim @x390 $x537)))
 (let ((@x112 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x557 $x424)) @x672 $x424)))
 (let (($x364 (>= ?x536 (- 6))))
 (let ((@x228 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x557 $x364)) @x672 $x364)))
 (let (($x285 (<= c!3 1)))
 (let ((@x1136 (hypothesis $x285)))
 (let (($x1180 (>= c!3 1)))
 (let (($x863 (<= m!1 6)))
 (let (($x884 (not $x863)))
 (let (($x566 (>= ?x328 1)))
 (let (($x1008 (>= ?x328 0)))
 (let (($x460 (>= k!2 0)))
 (let ((@x540 (hypothesis (not $x460))))
 (let ((@x646 (lemma ((_ th-lemma arith) @x540 @x727 @x540 @x540 @x727 @x370 @x727 false) $x460)))
 (let (($x489 (>= n!0 0)))
 (let ((@x709 (hypothesis (not $x489))))
 (let (($x462 (>= ?x170 0)))
 (let ((@x148 ((_ th-lemma arith) @x112 (hypothesis (>= (+ (* 5 n!0) ?x111) (- 4))) @x646 @x228 @x112 @x370 @x727 @x228 @x112 @x115 @x226 @x213 @x732 @x213 @x732 @x370 @x727 @x228 @x112 @x370 @x727 false)))
 (let ((@x748 (lemma @x148 (not (>= (+ (* 5 n!0) ?x111) (- 4))))))
 (let ((@x943 ((_ th-lemma arith farkas -2/3 2 2 2 3 3 3 -1/3 1/3 1 1 -1 1) @x370 @x709 @x228 @x748 @x228 @x748 @x709 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x462)) false) $x462) @x732 @x709 @x646 @x115 @x709 false)))
 (let ((@x1004 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1008)) (lemma @x943 $x489) @x646 false) $x1008)))
 (let ((@x1100 ((_ th-lemma arith) @x1004 (hypothesis (not $x566)) @x228 @x112 @x228 @x112 @x115 @x226 @x370 @x727 @x115 @x226 @x213 @x732 @x115 @x226 false)))
 (let (($x136 (<= m!1 0)))
 (let (($x782 (not $x136)))
 (let ((@x777 (hypothesis $x566)))
 (let ((@x784 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x777 @x112 (hypothesis $x136) @x646 false) (or $x782 (not $x566)))))
 (let ((@x883 ((_ th-lemma arith farkas 1 1 1 1 1) @x777 @x228 (unit-resolution @x784 @x777 $x782) @x112 (hypothesis $x863) false)))
 (let ((@x1191 (unit-resolution (lemma @x883 (or $x884 (not $x566))) (lemma @x1100 $x566) $x884)))
 (let (($x874 (>= ?x559 1)))
 (let (($x670 (<= m!1 18)))
 (let (($x1195 (not $x670)))
 (let ((@x984 (hypothesis (not $x874))))
 (let (($x470 (<= m!1 12)))
 (let (($x986 (not $x470)))
 (let ((@x979 (hypothesis $x470)))
 (let ((@x980 (hypothesis $x884)))
 (let ((@x985 ((_ th-lemma arith farkas 5/6 5/6 5/6 5/6 1/18 1/18 1/2 1/18 5/18 1/18 1/18 1/18 1 1 1 1 1) @x228 @x980 @x112 @x979 @x112 @x979 @x984 @x732 @x370 @x228 @x980 @x727 @x984 @x228 @x980 @x112 @x979 false)))
 (let ((@x1192 (unit-resolution (lemma @x985 (or $x986 $x863 $x874)) @x984 @x1191 $x986)))
 (let ((@x1193 (hypothesis $x670)))
 (let ((@x1194 ((_ th-lemma arith farkas 1/3 1/3 1/3 1/3 1/3 1/3 1 1 1 1 1/3 1/18 1/18 1 1 1) @x226 @x228 @x1192 @x228 @x1192 @x727 @x228 @x1192 @x112 @x1193 @x370 @x112 @x1193 @x984 @x228 @x1192 false)))
 (let (($x312 (>= n!0 3)))
 (let (($x385 (not $x312)))
 (let (($x565 (>= (+ ?x170 (* 15 n!0) ?x328 ?x287 (* (- 8) ?x559) ?x271) 28)))
 (let ((@x729 (hypothesis $x312)))
 (let ((@x1135 ((_ th-lemma arith) @x729 @x727 (hypothesis (not $x565)) @x213 @x732 @x228 @x112 @x228 @x112 @x370 @x727 @x370 @x727 @x115 @x226 @x213 @x732 @x115 @x226 @x213 @x732 @x370 @x727 false)))
 (let ((@x1184 ((_ th-lemma arith) @x984 @x729 (unit-resolution (lemma @x1135 (or $x565 $x385)) @x729 $x565) @x370 @x727 @x228 @x112 @x228 @x112 @x115 @x226 @x370 @x727 @x213 @x732 @x370 @x727 @x370 @x727 @x213 @x732 @x115 @x226 false)))
 (let ((@x1187 ((_ th-lemma arith farkas 1 -6 1) @x228 (unit-resolution (lemma @x1184 (or $x385 $x874)) @x984 $x385) (unit-resolution (lemma @x1194 (or $x1195 $x874)) @x984 $x1195) false)))
 (let ((@x1215 (lemma ((_ th-lemma arith farkas 1 1 1 1) (lemma @x1187 $x874) @x228 @x1191 (hypothesis (not $x1180)) false) $x1180)))
 (let ((@x427 ((_ th-lemma arith) @x228 @x112 @x228 @x112 @x1215 @x1136 @x1215 @x1136 @x370 @x727 @x370 @x727 @x370 @x727 @x213 @x732 @x1215 @x1136 @x115 @x226 @x1215 @x1136 false)))
 ((_ th-lemma arith) (lemma @x427 (not $x285)) @x228 @x112 @x228 @x112 @x370 @x727 @x228 @x112 @x370 @x727 @x115 @x226 @x228 @x112 @x228 @x112 @x228 @x112 @x115 @x226 @x213 @x732 @x228 @x112 @x370 @x727 @x115 @x226 @x370 @x727 @x370 @x727 @x370 @x727 @x213 @x732 @x115 @x226 @x213 @x732 @x115 @x226 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 158
 :arith-assert-diseq        12
 :arith-assert-lower        1346
 :arith-assert-upper        444
 :arith-bound-prop          11
 :arith-branch-var          36
 :arith-conflicts           50
 :arith-eq-adapter          9
 :arith-fixed-eqs           219
 :arith-gcd-tests           297
 :arith-gomory-cuts         28
 :arith-grobner             43
 :arith-ineq-splits         36
 :arith-max-min             5636
 :arith-nonlinear-bounds    660
 :arith-nonlinear-horner    422
 :arith-num-rows            24
 :arith-offset-eqs          9
 :arith-patches             89
 :arith-patches_succ        17
 :arith-pivots              901
 :arith-pseudo-nonlinear    238
 :arith-row-summations      4901
 :arith-tableau-max-columns 84
 :arith-tableau-max-rows    24
 :conflicts                 55
 :decisions                 220
 :del-clause                90
 :final-checks              191
 :max-memory                4.01
 :memory                    3.32
 :minimized-lits            9
 :mk-bool-var               197
 :mk-clause                 94
 :num-allocs                4765716
 :num-checks                1
 :propagations              148
 :rlimit-count              308865
 :time                      0.18
 :total-time                0.12)
