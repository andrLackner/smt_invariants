unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x244 (* (- 3) n!0)))
 (let ((?x287 (* n!0 n!0)))
 (let ((?x343 (* (- 3) ?x287)))
 (let ((?x469 (+ k!2 ?x343 ?x244)))
 (let (($x174 (<= ?x469 0)))
 (let (($x595 (= ?x469 0)))
 (let ((?x396 (* (- 2) n!0)))
 (let ((?x275 (* k!2 n!0)))
 (let ((?x155 (* (- 1) ?x275)))
 (let ((?x399 (* 3 k!2)))
 (let ((?x156 (* 3 c!3)))
 (let ((?x513 (* 2 n!0)))
 (let ((?x206 (* (- 3) k!2)))
 (let ((?x236 (* n!0 m!1)))
 (let ((?x205 (* (- 3) c!3)))
 (let ((?x654 (* k!2 m!1)))
 (let ((?x408 (* 3 ?x654)))
 (let ((?x393 (* 7 (* k!2 k!2 m!1 m!1))))
 (let ((?x553 (* k!2 k!2)))
 (let ((?x445 (* 3 ?x553)))
 (let ((?x372 (* 42 (* k!2 k!2 m!1))))
 (let ((?x381 (* 14 (* c!3 k!2 m!1 m!1))))
 (let ((?x591 (* 3 (* c!3 k!2))))
 (let ((?x309 (* 42 (* c!3 c!3 k!2))))
 (let ((?x506 (* 42 (* c!3 c!3 m!1))))
 (let ((?x330 (* 42 (* k!2 k!2 k!2))))
 (let ((?x435 (* 8 n!0)))
 (let ((?x588 (* 14 (* c!3 k!2 k!2 m!1))))
 (let ((?x371 (* 7 (* c!3 c!3 m!1 m!1))))
 (let ((?x571 (* 7 (* k!2 k!2 k!2 m!1))))
 (let ((?x357 (* 7 (* c!3 c!3 k!2 m!1))))
 (let ((?x132 (* 4 ?x287)))
 (let ((?x401 (* 84 (* c!3 k!2 k!2))))
 (let ((?x441 (* 84 (* c!3 k!2 m!1))))
 (let ((?x200 (* 3 (* c!3 m!1))))
 (let ((?x479 (+ 4 ?x200 ?x441 ?x401 ?x132 ?x357 ?x571 ?x371 ?x588 ?x435 ?x330 ?x506 ?x309 ?x591 ?x381 ?x372 ?x445 ?x393 ?x408)))
 (let ((?x179 (* (- 2) ?x654)))
 (let ((?x310 (* (- 1) ?x553)))
 (let ((?x502 (* 5 m!1)))
 (let ((?x464 (* (- 1) (* m!1 m!1))))
 (let ((?x405 (* (- 9) n!0)))
 (let ((?x421 (* 9 ?x275)))
 (let ((?x269 (* c!3 n!0)))
 (let ((?x303 (* 9 ?x269)))
 (let ((?x499 (* 32 k!2)))
 (let ((?x500 (* 27 c!3)))
 (let ((?x669 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x353 (= ?x669 (- 6))))
 (let (($x252 (not $x353)))
 (let (($x704 (or $x252 (not (= (+ k!2 ?x343 ?x405 m!1) 6)) (not (= (+ ?x500 ?x499 ?x303 ?x421 ?x405 ?x464 ?x502 ?x310 ?x179) 13)) (not (= (* ?x479 (+ 2 ?x205 ?x236 ?x206 ?x275 ?x513)) 0)) (not (= (+ ?x156 (* (- 1) ?x236) ?x399 ?x155 ?x396) 2)))))
 (let ((?x535 (+ ?x156 k!2 ?x155 ?x396)))
 (let (($x562 (= ?x535 0)))
 (let ((?x337 (* 5 k!2)))
 (let ((?x291 (* 18 c!3)))
 (let ((?x278 (+ ?x291 ?x337 ?x303 ?x405 ?x310)))
 (let (($x350 (= ?x278 4)))
 (let (($x195 (and $x353 $x350 $x562 $x595 $x704)))
 (let ((?x665 (+ 4 ?x435 ?x445 ?x441 ?x132 ?x372 ?x330 ?x401 ?x506 ?x408 ?x309 ?x357 ?x588 ?x571 ?x371 ?x381 ?x393 ?x591 ?x200)))
 (let (($x178 (not (= (* ?x665 (+ 2 ?x205 ?x206 ?x513 ?x275 (* m!1 n!0))) 0))))
 (let (($x395 (or $x178 (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x405 ?x343) 6)) (not (= (+ ?x500 ?x499 ?x502 ?x405 ?x310 ?x421 ?x303 ?x179 ?x464) 13)) (not (= (+ ?x156 ?x399 ?x396 ?x155 (* (- 1) (* m!1 n!0))) 2)))))
 (let (($x237 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x376 (and $x237 (= (+ ?x291 ?x337 ?x405 ?x310 ?x303) 4) (= (+ ?x156 k!2 ?x396 ?x155) 0) (= (+ k!2 ?x244 ?x343) 0) $x395)))
 (let (($x379 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x546 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x554 (not $x546)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x524 (+ (* 27 c) (* 32 k) ?x436 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x528 (not (= ?x524 13))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x373 (* m n)))
 (let ((?x56 (* 2 n)))
 (let ((?x232 (* (- 3) c)))
 (let ((?x538 (+ 2 ?x232 (* (- 3) k) ?x56 ?x52 ?x373)))
 (let ((?x663 (* 3 (* c m))))
 (let ((?x660 (* 3 (* c k))))
 (let ((?x653 (* 7 (* k k m m))))
 (let ((?x647 (* 7 (* c c m m))))
 (let ((?x645 (* 7 (* k k k m))))
 (let ((?x639 (* 7 (* c c k m))))
 (let ((?x486 (* k m)))
 (let ((?x664 (* 3 ?x486)))
 (let ((?x271 (* n n)))
 (let ((?x563 (* 4 ?x271)))
 (let ((?x661 (* 3 ?x46)))
 (let ((?x294 (+ 4 (* 8 n) ?x661 (* 84 (* c k m)) ?x563 (* 42 (* k k m)) (* 42 (* k k k)) (* 84 (* c k k)) (* 42 (* c c m)) ?x664 (* 42 (* c c k)) ?x639 (* 14 (* c k k m)) ?x645 ?x647 (* 14 (* c k m m)) ?x653 ?x660 ?x663)))
 (let (($x377 (or (not (= (* ?x294 ?x538) 0)) $x362 (not (= (+ k m ?x223 (* (- 3) ?x271)) 6)) $x528 $x554)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (and $x144 $x221 $x266 $x302 $x377)))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x342 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let ((?x158 (+ ?x261 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x263)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x572 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x56 (* 2 n)))
 (let ((?x112 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x492 (+ 1 n)))
 (let ((?x448 (* ?x492 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x232 (* (- 3) c)))
 (let ((?x282 (+ (* 4 (* ?x492 ?x492)) (* 7 (* (+ 6 m) ?x74 (+ c k) (+ c k))) (* 3 (* ?x74 (+ c k))))))
 (let (($x288 (not (= (* ?x282 (+ 2 ?x232 ?x417 ?x448 ?x112 ?x56)) 0))))
 (let (($x305 (= (+ (* 3 (* ?x492 ?x492)) (* (- 1) k) ?x112 (* 3 n)) (- 3))))
 (let (($x235 (not $x305)))
 (let (($x394 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x394 (or $x235 $x288 $x362 (not (= ?x572 13)) (not (= ?x158 2)))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x240 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x264 (* (- 1) ?x52)))
 (let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let (($x546 (= (+ ?x261 (* 3 k) ?x263 ?x264 (* (- 1) (* m n))) 2)))
 (let (($x554 (not $x546)))
 (let ((?x161 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x524 (+ (* 27 c) (* 32 k) ?x436 ?x223 ?x224 (* 9 ?x52) ?x161 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x528 (not (= ?x524 13))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x373 (* m n)))
 (let ((?x56 (* 2 n)))
 (let ((?x232 (* (- 3) c)))
 (let ((?x538 (+ 2 ?x232 (* (- 3) k) ?x56 ?x52 ?x373)))
 (let ((?x663 (* 3 (* c m))))
 (let ((?x660 (* 3 (* c k))))
 (let ((?x653 (* 7 (* k k m m))))
 (let ((?x647 (* 7 (* c c m m))))
 (let ((?x645 (* 7 (* k k k m))))
 (let ((?x639 (* 7 (* c c k m))))
 (let ((?x486 (* k m)))
 (let ((?x664 (* 3 ?x486)))
 (let ((?x271 (* n n)))
 (let ((?x563 (* 4 ?x271)))
 (let ((?x661 (* 3 ?x46)))
 (let ((?x294 (+ 4 (* 8 n) ?x661 (* 84 (* c k m)) ?x563 (* 42 (* k k m)) (* 42 (* k k k)) (* 84 (* c k k)) (* 42 (* c c m)) ?x664 (* 42 (* c c k)) ?x639 (* 14 (* c k k m)) ?x645 ?x647 (* 14 (* c k m m)) ?x653 ?x660 ?x663)))
 (let (($x377 (or (not (= (* ?x294 ?x538) 0)) $x362 (not (= (+ k m ?x223 (* (- 3) ?x271)) 6)) $x528 $x554)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 0)))
 (let (($x266 (= (+ ?x261 k ?x263 ?x264) 0)))
 (let (($x221 (= (+ (* 18 c) (* 5 k) ?x223 ?x224 ?x161) 4)))
 (let (($x296 (and $x144 $x221 $x266 $x302 $x377)))
 (let ((?x158 (+ ?x261 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x263)))
 (let ((?x37 (* 18 c)))
 (let ((?x572 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let ((?x112 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x492 (+ 1 n)))
 (let ((?x448 (* ?x492 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x282 (+ (* 4 (* ?x492 ?x492)) (* 7 (* (+ 6 m) ?x74 (+ c k) (+ c k))) (* 3 (* ?x74 (+ c k))))))
 (let (($x288 (not (= (* ?x282 (+ 2 ?x232 ?x417 ?x448 ?x112 ?x56)) 0))))
 (let (($x305 (= (+ (* 3 (* ?x492 ?x492)) (* (- 1) k) ?x112 (* 3 n)) (- 3))))
 (let (($x235 (not $x305)))
 (let (($x394 (= (+ (* 3 ?x271) (* (- 1) k) (* 3 n)) 0)))
 (let (($x351 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x223 ?x224) 4)))
 (let (($x557 (and $x144 $x351 (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x394 (or $x235 $x288 $x362 (not (= ?x572 13)) (not (= ?x158 2))))))
 (rewrite (= $x557 $x296))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x434 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x460 (* (- 18) c)))
 (let ((?x586 (+ ?x460 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x112 (* (- 1) m)))
 (let ((?x492 (+ 1 n)))
 (let ((?x448 (* ?x492 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x232 (* (- 3) c)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x282 (+ (* 4 (* ?x492 ?x492)) (* 7 (* (+ 6 m) ?x74 (+ c k) (+ c k))) (* 3 (* ?x74 (+ c k))))))
 (let (($x288 (not (= (* ?x282 (+ 2 ?x232 ?x417 ?x448 ?x112 ?x56)) 0))))
 (let (($x305 (= (+ (* 3 (* ?x492 ?x492)) (* (- 1) k) ?x112 (* 3 n)) (- 3))))
 (let (($x235 (not $x305)))
 (let (($x570 (or $x235 $x288 $x362 (not (= (+ ?x232 ?x417 ?x448 ?x112 ?x56) (- 2))) (not (= ?x586 (- 13))))))
 (let (($x394 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x308 (= (+ ?x460 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x144 $x308 (= (+ ?x232 (* n k) (* (- 1) k) ?x56) 0) $x394 $x570))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x578 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x263 (* (- 2) n)))
 (let ((?x261 (* 3 c)))
 (let ((?x158 (+ ?x261 (* 4 k) (* (- 1) (* (+ 1 n) (+ k m))) m ?x263)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x436 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x572 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x436 ?x223 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x56 (* 2 n)))
 (let ((?x112 (* (- 1) m)))
 (let ((?x74 (+ k m)))
 (let ((?x492 (+ 1 n)))
 (let ((?x448 (* ?x492 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x232 (* (- 3) c)))
 (let ((?x282 (+ (* 4 (* ?x492 ?x492)) (* 7 (* (+ 6 m) ?x74 (+ c k) (+ c k))) (* 3 (* ?x74 (+ c k))))))
 (let (($x288 (not (= (* ?x282 (+ 2 ?x232 ?x417 ?x448 ?x112 ?x56)) 0))))
 (let (($x305 (= (+ (* 3 (* ?x492 ?x492)) (* (- 1) k) ?x112 (* 3 n)) (- 3))))
 (let (($x235 (not $x305)))
 (let (($x394 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x224 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x557 (and $x144 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x223 ?x224) 4) (= (+ ?x261 (* (- 1) (* n k)) k ?x263) 0) $x394 (or $x235 $x288 $x362 (not (= ?x572 13)) (not (= ?x158 2))))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x460 (* (- 18) c)))
 (let ((?x586 (+ ?x460 (* (- 23) k) (* (- 9) (* ?x492 (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let (($x570 (or $x235 $x288 $x362 (not (= (+ ?x232 ?x417 ?x448 ?x112 ?x56) (- 2))) (not (= ?x586 (- 13))))))
 (let (($x308 (= (+ ?x460 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x276 (and $x144 $x308 (= (+ ?x232 (* n k) (* (- 1) k) ?x56) 0) $x394 $x570)))
 (rewrite (= $x276 $x557)))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x103 (+ (* 4 (+ n 1) (+ n 1)) (* 7 (+ c k) (+ c k) (+ k m) (+ m 6)) (* 3 (+ c k) (+ k m)))))
 (let ((?x74 (+ k m)))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x107 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x89 ?x103) 0)))))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x107))))))))))))))) :qid k!38))
 ))
 (let ((?x440 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x460 (* (- 18) c)))
 (let ((?x586 (+ ?x460 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x80)))
 (let ((?x56 (* 2 n)))
 (let ((?x112 (* (- 1) m)))
 (let ((?x492 (+ 1 n)))
 (let ((?x448 (* ?x492 ?x74)))
 (let ((?x417 (* (- 4) k)))
 (let ((?x232 (* (- 3) c)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x362 (not $x144)))
 (let ((?x282 (+ (* 4 (* ?x492 ?x492)) (* 7 (* (+ 6 m) ?x74 (+ c k) (+ c k))) (* 3 (* ?x74 (+ c k))))))
 (let (($x288 (not (= (* ?x282 (+ 2 ?x232 ?x417 ?x448 ?x112 ?x56)) 0))))
 (let (($x305 (= (+ (* 3 (* ?x492 ?x492)) (* (- 1) k) ?x112 (* 3 n)) (- 3))))
 (let (($x235 (not $x305)))
 (let (($x570 (or $x235 $x288 $x362 (not (= (+ ?x232 ?x417 ?x448 ?x112 ?x56) (- 2))) (not (= ?x586 (- 13))))))
 (let (($x394 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x308 (= (+ ?x460 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x276 (and $x144 $x308 (= (+ ?x232 (* n k) (* (- 1) k) ?x56) 0) $x394 $x570)))
 (let ((?x103 (+ (* 4 (+ n 1) (+ n 1)) (* 7 (+ c k) (+ c k) ?x74 (+ m 6)) (* 3 (+ c k) ?x74))))
 (let ((?x89 (+ (- (+ (* (- 3) (+ c k)) (* ?x74 (+ n 1))) ?x74) (* 2 (+ n 1)))))
 (let ((?x95 (+ (- (* 3 (+ n 1) (+ n 1)) ?x74) (* 3 (+ n 1)))))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x82 (= (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80) 0)))
 (let (($x70 (not (= (- (+ (- 6) m 6) (* 6 (+ n 1))) 0))))
 (let (($x107 (or $x70 (not $x82) (not (= ?x89 0)) (not (= ?x95 0)) (not (= (* ?x89 ?x103) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x108 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* (- 3) c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x107)))
 (rewrite (= $x108 $x276)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x475 (mp (mp @x110 (quant-intro (proof-bind ?x440) (= $x109 $x434)) $x434) (rewrite (= $x434 $x434)) $x434)))
 (let ((@x245 (mp (mp @x475 (quant-intro (proof-bind ?x578) (= $x434 $x342)) $x342) (quant-intro (proof-bind ?x240) (= $x342 $x379)) $x379)))
 (let ((@x597 (mp (mp~ @x245 (sk (~ $x379 $x376)) $x376) (rewrite (= $x376 $x195)) $x195)))
 (let ((@x594 (and-elim @x597 $x595)))
 (let ((@x190 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x595) $x174)) @x594 $x174)))
 (let (($x289 (>= ?x469 0)))
 (let ((@x585 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x595) $x289)) @x594 $x289)))
 (let (($x430 (<= ?x278 4)))
 (let ((@x255 (and-elim @x597 $x350)))
 (let ((@x742 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x430)) @x255 $x430)))
 (let (($x298 (>= ?x278 4)))
 (let ((@x675 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x298)) @x255 $x298)))
 (let (($x194 (<= ?x535 0)))
 (let ((@x257 (and-elim @x597 $x562)))
 (let ((@x505 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x562) $x194)) @x257 $x194)))
 (let (($x413 (>= ?x535 0)))
 (let ((@x369 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x562) $x413)) @x257 $x413)))
 (let (($x427 (<= ?x669 (- 6))))
 (let ((@x256 (and-elim @x597 $x353)))
 (let ((@x480 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x252 $x427)) @x256 $x427)))
 (let (($x334 (>= ?x669 (- 6))))
 (let ((@x285 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x252 $x334)) @x256 $x334)))
 (let (($x1349 (>= c!3 35)))
 (let (($x1339 (not (<= k!2 37))))
 (let ((?x1048 (+ k!2 (* (- 2) ?x287) ?x396)))
 (let (($x1337 (>= ?x1048 13)))
 (let (($x1232 (<= k!2 36)))
 (let ((@x1235 (hypothesis $x1232)))
 (let (($x1127 (>= n!0 3)))
 (let (($x1149 (<= m!1 18)))
 (let ((@x1133 (hypothesis $x1149)))
 (let (($x875 (>= n!0 0)))
 (let (($x138 (<= m!1 0)))
 (let (($x689 (not $x138)))
 (let ((@x841 (hypothesis $x138)))
 (let (($x139 (>= m!1 0)))
 (let (($x698 (not $x139)))
 (let ((@x856 (hypothesis $x698)))
 (let ((@x871 ((_ th-lemma arith) @x856 @x856 @x585 @x190 @x285 @x480 @x585 @x190 @x369 @x505 @x675 @x742 @x369 @x505 @x585 @x190 false)))
 (let ((@x894 (lemma @x871 $x139)))
 (let (($x599 (>= ?x275 1)))
 (let (($x495 (= m!1 0)))
 (let (($x655 (not $x495)))
 (let ((@x678 (hypothesis (not $x599))))
 (let ((@x615 (hypothesis $x495)))
 (let ((@x658 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x655 $x138)) @x615 $x138)))
 (let ((@x671 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x655 $x139)) @x615 $x139)))
 (let (($x429 (>= ?x553 0)))
 (let ((@x135 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x429)) false) $x429)))
 (let ((?x148 (+ (* 12 c!3) (* 4 k!2) (* 4 ?x269) (* (- 3) ?x275) (* (- 8) n!0))))
 (let ((@x679 ((_ th-lemma arith gomory-cut 1/5 1/5 -3/4 3/5 1/5) @x135 @x675 @x678 @x369 @x585 (>= ?x148 4))))
 (let ((@x680 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 5/3 5/3 5/3 5/3 5/9 1/9 1/9 -1/9 -1/9 1 1 1 1) @x678 @x505 @x679 @x671 @x285 @x658 @x480 @x658 @x480 @x671 @x285 @x190 @x658 @x480 @x135 @x675 @x671 @x285 @x658 @x480 false)))
 (let (($x150 (<= m!1 6)))
 (let (($x757 (not $x150)))
 (let ((@x688 (hypothesis $x689)))
 (let ((@x759 (lemma ((_ th-lemma arith farkas -1/4 -1 1/4 1 1 1 1) @x678 @x505 @x679 @x688 @x285 (hypothesis $x150) @x480 false) (or $x757 $x599 $x138))))
 (let (($x690 (>= c!3 0)))
 (let ((@x705 (lemma ((_ th-lemma arith farkas -1/4 -1 1/4 1 1 1) @x678 @x505 @x679 (hypothesis (not $x690)) @x688 @x285 false) (or $x690 $x599 $x138))))
 (let ((@x752 ((_ th-lemma arith farkas 1 -1 -3 -1/6 -1/6 1) @x505 @x585 (unit-resolution @x705 @x688 @x678 $x690) (unit-resolution @x759 @x688 @x678 $x757) @x285 @x678 false)))
 (let ((@x694 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x495 $x689 $x698)) (unit-resolution (lemma @x752 (or $x138 $x599)) @x678 $x138) (unit-resolution (lemma @x680 (or $x655 $x599)) @x678 $x655) $x698)))
 (let ((@x760 ((_ th-lemma arith) @x679 @x285 @x694 @x480 @x585 @x190 @x285 @x480 @x369 @x505 @x369 @x505 @x585 @x190 @x369 @x505 @x585 @x190 @x675 @x742 false)))
 (let ((@x761 (lemma @x760 $x599)))
 (let ((@x842 (lemma ((_ th-lemma arith farkas -3 -3 -1 -1/2 -1/2 1 1 1 1 1) @x841 @x480 @x585 @x894 @x285 @x761 @x894 @x285 @x841 @x480 false) $x689)))
 (let ((@x840 (lemma ((_ th-lemma arith farkas 1 -6 1) @x285 (hypothesis (not $x875)) @x842 false) $x875)))
 (let ((@x1043 (lemma ((_ th-lemma arith farkas 1 1 1) @x761 @x840 (hypothesis (<= n!0 0)) false) (not (<= n!0 0)))))
 (let (($x1061 (>= ?x275 12)))
 (let (($x997 (<= k!2 6)))
 (let ((@x1041 (hypothesis $x997)))
 (let (($x928 (>= c!3 1)))
 (let ((@x985 (hypothesis (not $x928))))
 (let ((@x686 (hypothesis (not $x690))))
 (let ((@x988 ((_ th-lemma arith) @x761 @x840 @x369 @x686 @x675 @x761 @x840 @x369 @x686 @x675 @x761 @x840 @x369 @x761 @x686 @x686 @x675 @x686 false)))
 (let ((@x989 (lemma @x988 $x690)))
 (let ((@x1007 ((_ th-lemma arith) @x285 @x480 @x369 @x505 @x989 @x985 @x369 @x505 @x585 @x190 @x989 @x985 @x675 @x742 @x369 @x505 @x989 @x985 false)))
 (let ((@x1008 (lemma @x1007 $x928)))
 (let ((@x1018 (lemma ((_ th-lemma arith farkas 30 27 -1 5 1 1 1 1 1 1) @x1043 @x1008 @x742 @x585 @x1043 @x585 @x1041 @x1043 @x585 @x1041 false) (not $x997))))
 (let ((@x1024 ((_ th-lemma arith gomory-cut 1 1/2) @x585 @x1018 (>= ?x1048 3))))
 (let (($x1040 (<= c!3 1)))
 (let (($x1027 (not $x1040)))
 (let ((@x1021 (hypothesis (not $x1061))))
 (let ((@x1025 ((_ th-lemma arith gomory-cut 3/7 9/7 -3/7 1/7 6/7 2/7 1/2 3/7 1) @x369 @x1008 @x505 @x1018 @x1043 @x585 @x1018 @x1043 @x585 (>= (+ (* 2 c!3) ?x399 (* (- 4) ?x287) (* (- 6) n!0)) 13))))
 (let ((@x1044 ((_ th-lemma arith farkas 3/5 3/5 3/5 3/5 3/5 3/5 3/5 3/5 2/5 -1/5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x1008 @x505 @x1018 @x1043 @x585 @x1021 @x1018 @x190 (hypothesis $x1040) @x1025 @x1043 @x1008 @x505 @x1018 @x1043 @x585 @x1021 @x1018 @x1043 @x1008 @x505 @x1018 @x1043 @x585 @x1021 @x1018 false)))
 (let ((@x1036 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1) @x1021 @x1024 @x190 @x505 @x1021 (unit-resolution (lemma @x1044 (or $x1027 $x1061)) @x1021 $x1027) @x1024 @x190 false)))
 (let (($x1013 (>= ?x269 0)))
 (let (($x1052 (<= k!2 7)))
 (let ((@x1019 (hypothesis $x1052)))
 (let ((@x1120 ((_ th-lemma arith farkas 1/3 1/3 1/3 1/3 1/3 1/3 3 2 2 1) @x1019 @x1018 @x1019 @x1018 @x1019 @x742 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1013)) @x1008 @x840 false) $x1013) @x369 (lemma @x1036 $x1061) @x1043 false)))
 (let (($x1175 (<= n!0 1)))
 (let ((@x1181 (hypothesis $x1175)))
 (let ((@x1182 ((_ th-lemma arith farkas 1 3 3 3 3 3 1) @x190 @x1181 @x1043 @x1181 @x1043 @x1181 (lemma @x1120 (not $x1052)) false)))
 (let ((@x1184 (lemma @x1182 (not $x1175))))
 (let ((@x1213 ((_ th-lemma arith gomory-cut 1/2 1/2 2/3 4 -2/3 1/2 1/2 1/2) @x585 @x369 @x285 @x1184 @x480 @x1184 @x1133 @x480 (>= (+ c!3 (* (- 1) ?x287) n!0) 6))))
 (let ((@x1219 (lemma ((_ th-lemma arith farkas -1/3 -1/3 -4/9 -4/9 -1/3 -1/3 -1/3 1) @x505 @x190 @x480 @x1133 @x1184 @x1133 @x480 @x1213 false) (not $x1149))))
 (let ((@x1153 (lemma ((_ th-lemma arith farkas -1/6 -1/6 1) @x1219 @x285 (hypothesis (not $x1127)) false) $x1127)))
 (let ((@x1239 ((_ th-lemma arith gcd-test -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 -1/9 2/3 2/3 2/3 2/3 2/3 2/3 2/3 2/3) @x585 @x1153 @x1235 @x585 @x1153 @x1235 @x585 @x1153 @x1235 @x585 @x1153 @x1235 @x675 @x742 @x585 @x190 @x585 @x1153 @x1235 @x585 @x1153 @x1235 @x369 @x505 false)))
 (let ((@x1247 (lemma @x1239 (not $x1232))))
 (let ((@x1326 (unit-resolution ((_ th-lemma arith assign-bounds 2 3) (or $x1339 (not $x174) (not $x1337))) ((_ th-lemma arith gomory-cut 1/2 1) @x1247 @x585 $x1337) @x190 $x1339)))
 (let (($x1362 (<= n!0 3)))
 (let ((@x1342 (hypothesis $x1362)))
 (let ((@x1329 (lemma ((_ th-lemma arith farkas 3 1 3 3 3 3 1) @x1342 @x190 @x1153 @x1342 @x1153 @x1342 @x1326 false) (not $x1362))))
 (let ((@x1325 (hypothesis (not $x1349))))
 (let ((@x1344 (unit-resolution (hypothesis (not $x1337)) ((_ th-lemma arith gomory-cut 1 1/2) @x585 @x1247 $x1337) false)))
 (let ((@x1358 ((_ th-lemma arith) @x1329 (lemma @x1344 $x1337) @x190 @x369 @x1325 @x1329 @x1325 @x1329 @x369 @x505 false)))
 ((_ th-lemma arith) (lemma @x1358 $x1349) @x585 @x190 @x285 @x480 @x585 @x190 @x369 @x505 @x585 @x190 @x675 @x742 @x585 @x190 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 117
 :arith-assert-diseq        97
 :arith-assert-lower        956
 :arith-assert-upper        490
 :arith-bound-prop          3
 :arith-branch-var          28
 :arith-conflicts           50
 :arith-eq-adapter          11
 :arith-fixed-eqs           141
 :arith-gcd-tests           210
 :arith-gomory-cuts         16
 :arith-grobner             32
 :arith-ineq-splits         28
 :arith-max-min             3951
 :arith-nonlinear-bounds    432
 :arith-nonlinear-horner    281
 :arith-num-rows            17
 :arith-offset-eqs          2
 :arith-patches             73
 :arith-patches_succ        17
 :arith-pivots              514
 :arith-pseudo-nonlinear    135
 :arith-row-summations      1925
 :arith-tableau-max-columns 69
 :arith-tableau-max-rows    17
 :conflicts                 53
 :decisions                 375
 :del-clause                60
 :final-checks              152
 :max-memory                4.02
 :memory                    3.29
 :minimized-lits            5
 :mk-bool-var               210
 :mk-clause                 68
 :num-allocs                2764742
 :num-checks                1
 :propagations              197
 :rlimit-count              142932
 :time                      0.04
 :total-time                0.05)
