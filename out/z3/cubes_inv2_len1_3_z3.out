unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let (($x228 (<= n!0 0)))
 (let ((?x411 (+ 1 n!0)))
 (let (($x1388 (<= ?x411 2)))
 (let ((?x542 (* 5 k!2)))
 (let ((?x541 (* 18 c!3)))
 (let ((?x379 (* k!2 k!2)))
 (let ((?x289 (* (- 1) ?x379)))
 (let ((?x309 (* (- 9) n!0)))
 (let ((?x519 (+ (* 9 (* n!0 c!3)) ?x309 ?x289 ?x541 ?x542)))
 (let (($x554 (<= ?x519 4)))
 (let (($x408 (= ?x519 4)))
 (let ((?x562 (* (- 1) m!1)))
 (let ((?x313 (+ (* 6 n!0) ?x562)))
 (let (($x316 (= ?x313 (- 6))))
 (let (($x575 (not $x316)))
 (let ((?x418 (* (- 32) k!2)))
 (let ((?x415 (* (- 27) c!3)))
 (let ((?x106 (* (- 5) m!1)))
 (let ((?x129 (* 9 n!0)))
 (let ((?x380 (* 2 (* m!1 k!2))))
 (let ((?x191 (* n!0 k!2)))
 (let ((?x586 (* (- 9) ?x191)))
 (let ((?x184 (* n!0 c!3)))
 (let ((?x584 (* (- 9) ?x184)))
 (let ((?x143 (* m!1 m!1)))
 (let ((?x161 (+ c!3 k!2)))
 (let ((?x278 (+ m!1 k!2)))
 (let ((?x569 (* ?x411 ?x411 ?x278 ?x161 (+ 13 ?x143 ?x584 ?x586 ?x380 ?x129 ?x106 ?x379 ?x415 ?x418))))
 (let (($x195 (not (= (+ (* 3 (* n!0 n!0)) ?x129 ?x562 (* (- 1) k!2)) (- 6)))))
 (let ((?x305 (* (- 3) c!3)))
 (let ((?x546 (* 2 n!0)))
 (let (($x426 (or (not (= (+ ?x191 (* n!0 m!1) ?x546 ?x305 (* (- 3) k!2)) (- 2))) $x195 (not (= (+ ?x143 ?x584 ?x586 ?x380 ?x129 ?x106 ?x379 ?x415 ?x418) (- 13))) (not (= ?x569 0)) $x575)))
 (let ((?x406 (* (- 1) k!2)))
 (let ((?x280 (* n!0 n!0)))
 (let ((?x543 (* 3 ?x280)))
 (let ((?x540 (+ ?x543 (* 3 n!0) ?x406)))
 (let (($x520 (= ?x540 0)))
 (let ((?x407 (+ ?x191 ?x546 ?x305 ?x406)))
 (let (($x193 (= ?x407 0)))
 (let (($x196 (and $x316 $x408 $x193 $x520 $x426)))
 (let ((?x270 (* k!2 n!0)))
 (let ((?x271 (* (- 1) ?x270)))
 (let ((?x706 (* (- 2) n!0)))
 (let ((?x504 (* 3 c!3)))
 (let (($x583 (= (+ ?x504 (* 3 k!2) ?x706 ?x271 (* (- 1) (* m!1 n!0))) 2)))
 (let ((?x410 (* c!3 n!0)))
 (let ((?x409 (* 9 ?x410)))
 (let ((?x394 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x309 ?x289 (* 9 ?x270) ?x409 (* (- 2) (* k!2 m!1)) (* (- 1) ?x143))))
 (let ((?x319 (+ 13 ?x415 ?x418 ?x106 ?x129 ?x379 (* (- 9) ?x270) (* (- 9) ?x410) (* 2 (* k!2 m!1)) ?x143)))
 (let (($x635 (or (not (= (* ?x411 ?x411 (+ k!2 m!1) ?x161 ?x319) 0)) (not (= (+ m!1 (* (- 6) n!0)) 6)) (not (= (+ k!2 m!1 ?x309 (* (- 3) ?x280)) 6)) (not (= ?x394 13)) (not $x583))))
 (let (($x330 (= (+ m!1 (* (- 6) n!0)) 6)))
 (let (($x366 (and $x330 (= (+ ?x541 ?x542 ?x309 ?x289 ?x409) 4) (= (+ ?x504 k!2 ?x706 ?x271) 0) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x280)) 0) $x635)))
 (let (($x324 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x601 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x609 (not $x601)))
 (let ((?x153 (* c n)))
 (let ((?x155 (* 9 ?x153)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x481 (* m m)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x502 (+ 13 (* (- 27) c) (* (- 32) k) ?x447 ?x45 ?x46 (* (- 9) ?x52) (* (- 9) ?x153) (* 2 (* k m)) ?x481)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x564 (or (not (= (* ?x308 ?x308 ?x74 ?x71 ?x502) 0)) $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x522 $x609)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (and $x138 $x215 $x260 $x296 $x564)))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x177 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x308 (+ 1 n)))
 (let ((?x373 (* ?x308 ?x71)))
 (let ((?x591 (* (- 9) ?x373)))
 (let ((?x304 (* (- 23) k)))
 (let ((?x462 (* (- 18) c)))
 (let (($x500 (= (* ?x308 ?x308 ?x74 ?x71 (+ 13 ?x462 ?x304 ?x591 ?x447 ?x45 ?x80)) 0)))
 (let (($x283 (not $x500)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let (($x563 (= (+ ?x37 (* 23 k) (* 9 ?x373) ?x430 ?x217 (* (- 1) ?x80)) 13)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x497 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x308 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x716 (* (- 1) m)))
 (let ((?x566 (* (- 1) k)))
 (let (($x145 (not (= (+ (* 3 (* ?x308 ?x308)) ?x566 ?x716 ?x61) (- 3)))))
 (let (($x344 (= (+ (* 3 (* n n)) ?x566 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x344 (or $x145 (not $x497) (not $x563) $x283 $x356))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x352 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x52 (* k n)))
 (let ((?x258 (* (- 1) ?x52)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x601 (= (+ ?x255 (* 3 k) ?x257 ?x258 (* (- 1) (* m n))) 2)))
 (let (($x609 (not $x601)))
 (let ((?x153 (* c n)))
 (let ((?x155 (* 9 ?x153)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x518 (+ (* 27 c) (* 32 k) ?x430 ?x217 ?x218 (* 9 ?x52) ?x155 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x522 (not (= ?x518 13))))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x481 (* m m)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x502 (+ 13 (* (- 27) c) (* (- 32) k) ?x447 ?x45 ?x46 (* (- 9) ?x52) (* (- 9) ?x153) (* 2 (* k m)) ?x481)))
 (let ((?x71 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x308 (+ 1 n)))
 (let (($x564 (or (not (= (* ?x308 ?x308 ?x74 ?x71 ?x502) 0)) $x356 (not (= (+ k m ?x217 (* (- 3) (* n n))) 6)) $x522 $x609)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0)))
 (let (($x260 (= (+ ?x255 k ?x257 ?x258) 0)))
 (let (($x215 (= (+ (* 18 c) (* 5 k) ?x217 ?x218 ?x155) 4)))
 (let (($x318 (and $x138 $x215 $x260 $x296 $x564)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x373 (* ?x308 ?x71)))
 (let ((?x591 (* (- 9) ?x373)))
 (let ((?x304 (* (- 23) k)))
 (let ((?x462 (* (- 18) c)))
 (let (($x500 (= (* ?x308 ?x308 ?x74 ?x71 (+ 13 ?x462 ?x304 ?x591 ?x447 ?x45 ?x80)) 0)))
 (let (($x283 (not $x500)))
 (let ((?x37 (* 18 c)))
 (let (($x563 (= (+ ?x37 (* 23 k) (* 9 ?x373) ?x430 ?x217 (* (- 1) ?x80)) 13)))
 (let (($x497 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x308 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x716 (* (- 1) m)))
 (let ((?x566 (* (- 1) k)))
 (let (($x145 (not (= (+ (* 3 (* ?x308 ?x308)) ?x566 ?x716 ?x61) (- 3)))))
 (let (($x344 (= (+ (* 3 (* n n)) ?x566 ?x61) 0)))
 (let (($x174 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x217 ?x218) 4)))
 (let (($x592 (and $x138 $x174 (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x344 (or $x145 (not $x497) (not $x563) $x283 $x356))))
 (rewrite (= $x592 $x318))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x414 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x308 (+ 1 n)))
 (let ((?x373 (* ?x308 ?x71)))
 (let ((?x591 (* (- 9) ?x373)))
 (let ((?x304 (* (- 23) k)))
 (let ((?x462 (* (- 18) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x500 (= (* ?x308 ?x308 ?x74 ?x71 (+ 13 ?x462 ?x304 ?x591 ?x447 ?x45 ?x80)) 0)))
 (let (($x283 (not $x500)))
 (let ((?x56 (* 2 n)))
 (let ((?x716 (* (- 1) m)))
 (let ((?x483 (* ?x308 ?x74)))
 (let ((?x495 (* (- 3) c)))
 (let (($x251 (= (+ (* 3 (* ?x308 ?x308)) (* (- 1) k) ?x716 (* 3 n)) (- 3))))
 (let (($x145 (not $x251)))
 (let (($x472 (or $x145 (not (= (+ ?x495 (* (- 4) k) ?x483 ?x716 ?x56) (- 2))) $x283 $x356 (not (= (+ ?x462 ?x304 ?x591 ?x447 ?x45 ?x80) (- 13))))))
 (let (($x344 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x487 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (and $x138 $x487 (= (+ ?x495 (* n k) (* (- 1) k) ?x56) 0) $x344 $x472)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x637 (lambda ((c Int) (k Int) (m Int) (n Int) )(let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x308 (+ 1 n)))
 (let ((?x373 (* ?x308 ?x71)))
 (let ((?x591 (* (- 9) ?x373)))
 (let ((?x304 (* (- 23) k)))
 (let ((?x462 (* (- 18) c)))
 (let (($x500 (= (* ?x308 ?x308 ?x74 ?x71 (+ 13 ?x462 ?x304 ?x591 ?x447 ?x45 ?x80)) 0)))
 (let (($x283 (not $x500)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x430 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let (($x563 (= (+ ?x37 (* 23 k) (* 9 ?x373) ?x430 ?x217 (* (- 1) ?x80)) 13)))
 (let ((?x257 (* (- 2) n)))
 (let ((?x255 (* 3 c)))
 (let (($x497 (= (+ ?x255 (* 4 k) (* (- 1) (* ?x308 ?x74)) m ?x257) 2)))
 (let ((?x61 (* 3 n)))
 (let ((?x716 (* (- 1) m)))
 (let ((?x566 (* (- 1) k)))
 (let (($x145 (not (= (+ (* 3 (* ?x308 ?x308)) ?x566 ?x716 ?x61) (- 3)))))
 (let (($x344 (= (+ (* 3 (* n n)) ?x566 ?x61) 0)))
 (let ((?x46 (* k k)))
 (let ((?x218 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x592 (and $x138 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x217 ?x218) 4) (= (+ ?x255 (* (- 1) (* n k)) k ?x257) 0) $x344 (or $x145 (not $x497) (not $x563) $x283 $x356))))
 (let ((?x56 (* 2 n)))
 (let ((?x483 (* ?x308 ?x74)))
 (let ((?x495 (* (- 3) c)))
 (let (($x472 (or $x145 (not (= (+ ?x495 (* (- 4) k) ?x483 ?x716 ?x56) (- 2))) $x283 $x356 (not (= (+ ?x462 ?x304 ?x591 ?x447 ?x45 ?x80) (- 13))))))
 (let (($x487 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x496 (and $x138 $x487 (= (+ ?x495 (* n k) ?x566 ?x56) 0) $x344 $x472)))
 (rewrite (= $x496 $x592)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x77 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let ((?x81 (+ (- ?x77 (* 5 ?x74)) (* 9 (+ n 1)) ?x80)))
 (let ((?x66 (+ n 1)))
 (let ((?x71 (+ c k)))
 (let ((?x50 (- 3)))
 (let (($x90 (= (+ (- (+ (* ?x50 ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let (($x101 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= ?x81 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x50 ?x71 ?x74 ?x66 ?x66 ?x81) 0)))))
 (let (($x58 (= (+ (- (+ (* ?x50 c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101))))))))))))))) :qid k!38))
 ))
 (let ((?x416 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x80 (* ?x74 ?x74)))
 (let ((?x45 (* 9 n)))
 (let ((?x447 (* (- 5) m)))
 (let ((?x71 (+ c k)))
 (let ((?x308 (+ 1 n)))
 (let ((?x373 (* ?x308 ?x71)))
 (let ((?x591 (* (- 9) ?x373)))
 (let ((?x304 (* (- 23) k)))
 (let ((?x462 (* (- 18) c)))
 (let (($x138 (= (+ m (* (- 6) n)) 6)))
 (let (($x356 (not $x138)))
 (let (($x500 (= (* ?x308 ?x308 ?x74 ?x71 (+ 13 ?x462 ?x304 ?x591 ?x447 ?x45 ?x80)) 0)))
 (let (($x283 (not $x500)))
 (let ((?x56 (* 2 n)))
 (let ((?x716 (* (- 1) m)))
 (let ((?x483 (* ?x308 ?x74)))
 (let ((?x495 (* (- 3) c)))
 (let (($x251 (= (+ (* 3 (* ?x308 ?x308)) (* (- 1) k) ?x716 (* 3 n)) (- 3))))
 (let (($x145 (not $x251)))
 (let (($x472 (or $x145 (not (= (+ ?x495 (* (- 4) k) ?x483 ?x716 ?x56) (- 2))) $x283 $x356 (not (= (+ ?x462 ?x304 ?x591 ?x447 ?x45 ?x80) (- 13))))))
 (let (($x344 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x487 (= (+ ?x462 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x496 (and $x138 $x487 (= (+ ?x495 (* n k) (* (- 1) k) ?x56) 0) $x344 $x472)))
 (let ((?x78 (- (- (- 4 (* 18 ?x71)) (* 9 ?x71 (+ n 1))) (* 5 ?x74))))
 (let ((?x81 (+ ?x78 (* 9 (+ n 1)) ?x80)))
 (let ((?x66 (+ n 1)))
 (let ((?x50 (- 3)))
 (let (($x90 (= (+ (- (+ (* ?x50 ?x71) (* ?x74 ?x66)) ?x74) (* 2 ?x66)) 0)))
 (let (($x101 (or (not (= (- (+ (- 6) m 6) (* 6 ?x66)) 0)) (not (= ?x81 0)) (not $x90) (not (= (+ (- (* 3 ?x66 ?x66) ?x74) (* 3 ?x66)) 0)) (not (= (* ?x50 ?x71 ?x74 ?x66 ?x66 ?x81) 0)))))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x102 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) (= (+ (- (+ (* ?x50 c) (* k n)) k) ?x56) 0) (= (+ (- (* 3 n n) k) (* 3 n)) 0) $x101)))
 (rewrite (= $x102 $x496)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x469 (mp (mp @x104 (quant-intro (proof-bind ?x416) (= $x103 $x414)) $x414) (rewrite (= $x414 $x414)) $x414)))
 (let ((@x550 (mp (mp @x469 (quant-intro (proof-bind ?x637) (= $x414 $x177)) $x177) (quant-intro (proof-bind ?x352) (= $x177 $x324)) $x324)))
 (let ((@x197 (mp (mp~ @x550 (sk (~ $x324 $x366)) $x366) (rewrite (= $x366 $x196)) $x196)))
 (let ((@x239 (and-elim @x197 $x408)))
 (let ((@x116 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x408) $x554)) @x239 $x554)))
 (let (($x529 (>= ?x519 4)))
 (let ((@x369 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x408) $x529)) @x239 $x529)))
 (let (($x371 (<= ?x540 0)))
 (let ((@x194 (and-elim @x197 $x520)))
 (let ((@x277 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x520) $x371)) @x194 $x371)))
 (let (($x321 (>= ?x540 0)))
 (let ((@x329 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x520) $x321)) @x194 $x321)))
 (let (($x545 (<= ?x407 0)))
 (let ((@x425 (and-elim @x197 $x193)))
 (let ((@x474 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x193) $x545)) @x425 $x545)))
 (let (($x326 (>= ?x407 0)))
 (let ((@x290 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x193) $x326)) @x425 $x326)))
 (let ((@x1455 ((_ th-lemma arith) (hypothesis (not $x1388)) @x329 @x277 @x329 @x277 @x369 @x116 @x290 @x474 @x329 @x277 @x369 @x116 false)))
 (let ((@x1481 (hypothesis $x1388)))
 (let ((@x697 (hypothesis (not $x228))))
 (let (($x463 (>= ?x313 (- 6))))
 (let ((@x427 (and-elim @x197 $x316)))
 (let ((@x370 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x575 $x463)) @x427 $x463)))
 (let (($x1296 (<= ?x278 18)))
 (let (($x1274 (not $x1296)))
 (let ((@x1307 (hypothesis $x1296)))
 (let (($x310 (<= ?x313 (- 6))))
 (let ((@x146 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x575 $x310)) @x427 $x310)))
 (let ((@x1308 ((_ th-lemma arith farkas -7/27 7/9 7/9 7/9 7/9 7/9 8/27 8/27 1 1 1 1 1 -1/9 -1/9 -1/9 -1 1 1 1 1 1) @x329 @x697 @x146 @x1307 @x277 @x697 @x146 @x1307 @x697 @x146 @x1307 @x277 @x697 @x369 @x277 @x697 @x290 @x697 @x146 @x1307 @x277 @x697 false)))
 (let ((@x1483 ((_ th-lemma arith farkas 1/3 1/3 1/3 -3 1 1) (unit-resolution (lemma @x1308 (or $x1274 $x228)) @x697 $x1274) @x370 @x329 @x1481 @x697 @x1481 false)))
 (let ((@x737 (unit-resolution (lemma @x1483 (or (not $x1388) $x228)) (lemma @x1455 $x1388) $x228)))
 (let (($x1283 (<= ?x411 0)))
 (let (($x1321 (not $x1283)))
 (let (($x687 (>= ?x191 0)))
 (let ((@x1305 (hypothesis $x1283)))
 (let (($x1496 (>= (+ ?x184 (* 2 ?x280) n!0 (* 2 c!3)) 1)))
 (let (($x429 (>= ?x379 0)))
 (let (($x428 (>= k!2 0)))
 (let ((@x572 (hypothesis (not $x428))))
 (let ((@x511 ((_ th-lemma arith) @x572 @x572 @x290 @x474 @x369 @x116 @x369 @x116 @x369 @x116 @x369 @x116 @x329 @x277 false)))
 (let ((@x336 (lemma @x511 $x428)))
 (let ((@x1367 ((_ th-lemma arith farkas -2/3 -1/9 -1/9 -1/9 1) @x329 @x336 @x369 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x429)) false) $x429) (hypothesis (not $x1496)) false)))
 (let ((@x1319 (lemma @x1367 $x1496)))
 (let ((@x1272 ((_ th-lemma arith) @x1319 (hypothesis (<= ?x411 (- 1))) @x370 @x146 @x329 @x277 @x329 @x277 @x369 @x116 @x329 @x277 @x290 @x474 @x290 @x474 @x329 @x277 false)))
 (let ((@x1337 (lemma @x1272 (not (<= ?x411 (- 1))))))
 (let ((@x1230 ((_ th-lemma arith farkas 1 -3 -3 -3 1 1 1) @x329 @x1305 @x1337 @x1305 (hypothesis (not $x687)) @x1337 @x1305 false)))
 (let ((@x1216 (unit-resolution (lemma @x1230 (or $x687 $x1321)) @x1305 $x687)))
 (let (($x1218 (>= (+ ?x191 ?x546 (* (- 2) c!3)) 0)))
 (let (($x1013 (not $x1218)))
 (let ((@x1197 ((_ th-lemma arith farkas 3 2 2 2 2 2 1 1) (hypothesis $x1218) @x1305 @x474 @x1216 @x1337 @x1305 @x1305 @x336 false)))
 (let ((@x1215 ((_ th-lemma arith farkas -3 2 2 2 1) (unit-resolution (lemma @x1197 (or $x1013 $x1321)) @x1305 $x1013) @x1337 @x290 @x336 @x1216 false)))
 (let ((@x727 (lemma @x1215 $x1321)))
 ((_ th-lemma arith farkas 3 3 3 2 2 2 2 1) @x727 @x737 @x1319 @x290 @x727 @x737 @x277 @x737 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 110
 :arith-assert-diseq        48
 :arith-assert-lower        877
 :arith-assert-upper        408
 :arith-bound-prop          19
 :arith-branch-var          44
 :arith-conflicts           60
 :arith-eq-adapter          16
 :arith-fixed-eqs           158
 :arith-gcd-tests           409
 :arith-gomory-cuts         34
 :arith-grobner             84
 :arith-ineq-splits         44
 :arith-max-min             4729
 :arith-nonlinear-bounds    180
 :arith-nonlinear-horner    826
 :arith-num-rows            20
 :arith-offset-eqs          14
 :arith-patches             109
 :arith-patches_succ        22
 :arith-pivots              1216
 :arith-pseudo-nonlinear    138
 :arith-row-summations      6142
 :arith-tableau-max-columns 53
 :arith-tableau-max-rows    20
 :conflicts                 69
 :decisions                 505
 :del-clause                175
 :final-checks              271
 :max-memory                3.96
 :memory                    3.32
 :minimized-lits            16
 :mk-bool-var               320
 :mk-clause                 221
 :num-allocs                4349762
 :num-checks                1
 :propagations              392
 :rlimit-count              339124
 :time                      0.08
 :total-time                0.09)
