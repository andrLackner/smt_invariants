% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on cubes_inv4_len2_2
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7931
% Time elapsed: 0.500 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_6 on cubes_inv4_len2_2
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for cubes_inv4_len2_2
% SZS output start Proof for cubes_inv4_len2_2
1. ? [X1 : $int,X3 : $int,X2 : $int,X0 : $int] : (0 = $difference($sum($uminus(6),X2),$product(6,X3)) & 0 = $sum($sum($difference($difference($difference(4,$product(18,X0)),$product($product(9,X0),X3)),$product(5,X1)),$product(9,X3)),$product(X1,X1)) & 0 = $sum($difference($sum($product($uminus(3),X0),$product(X1,X3)),X1),$product(2,X3)) & 0 = $sum($difference($product($product(3,X3),X3),X1),$product(3,X3)) & (~0 = $difference($sum($sum($uminus(6),X2),6),$product(6,$sum(X3,1))) | ~0 = $sum($sum($difference($difference($difference(4,$product(18,$sum(X0,X1))),$product($product(9,$sum(X0,X1)),$sum(X3,1))),$product(5,$sum(X1,X2))),$product(9,$sum(X3,1))),$product($sum(X1,X2),$sum(X1,X2))) | ~0 = $sum($difference($sum($product($uminus(3),$sum(X0,X1)),$product($sum(X1,X2),$sum(X3,1))),$sum(X1,X2)),$product(2,$sum(X3,1))) | ~0 = $sum($difference($product($product(3,$sum(X3,1)),$sum(X3,1)),$sum(X1,X2)),$product(3,$sum(X3,1))) | ~0 = $product($sum($difference($product($product(3,$sum(X3,1)),$sum(X3,1)),$sum(X1,X2)),$product(3,$sum(X3,1))),$sum($product($product($product($product(10,$sum(X0,X1)),$sum(X1,X2)),$sum(X2,6)),$sum(X3,1)),$product($product(4,$sum(X0,X1)),$sum(X2,6)))))) [input]
2. ? [X1 : $int,X3 : $int,X2 : $int,X0 : $int] : (0 = $sum($sum($uminus(6),X2),$uminus($product(6,X3))) & 0 = $sum($sum($sum($difference($difference(4,$product(18,X0)),$product($product(9,X0),X3)),$uminus($product(5,X1))),$product(9,X3)),$product(X1,X1)) & 0 = $sum($sum($sum($product($uminus(3),X0),$product(X1,X3)),$uminus(X1)),$product(2,X3)) & 0 = $sum($sum($product($product(3,X3),X3),$uminus(X1)),$product(3,X3)) & (~0 = $sum($sum($sum($uminus(6),X2),6),$uminus($product(6,$sum(X3,1)))) | ~0 = $sum($sum($sum($difference($difference(4,$product(18,$sum(X0,X1))),$product($product(9,$sum(X0,X1)),$sum(X3,1))),$uminus($product(5,$sum(X1,X2)))),$product(9,$sum(X3,1))),$product($sum(X1,X2),$sum(X1,X2))) | ~0 = $sum($sum($sum($product($uminus(3),$sum(X0,X1)),$product($sum(X1,X2),$sum(X3,1))),$uminus($sum(X1,X2))),$product(2,$sum(X3,1))) | ~0 = $sum($sum($product($product(3,$sum(X3,1)),$sum(X3,1)),$uminus($sum(X1,X2))),$product(3,$sum(X3,1))) | ~0 = $product($sum($sum($product($product(3,$sum(X3,1)),$sum(X3,1)),$uminus($sum(X1,X2))),$product(3,$sum(X3,1))),$sum($product($product($product($product(10,$sum(X0,X1)),$sum(X1,X2)),$sum(X2,6)),$sum(X3,1)),$product($product(4,$sum(X0,X1)),$sum(X2,6)))))) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 141]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 141]
21. ? [X1 : $int,X3 : $int,X2 : $int,X0 : $int] : (0 = $sum($sum($uminus(6),X2),$uminus($product(6,X3))) & 0 = $sum($sum($sum($sum($difference(4,$product(18,X0)),$uminus($product($product(9,X0),X3))),$uminus($product(5,X1))),$product(9,X3)),$product(X1,X1)) & 0 = $sum($sum($sum($product($uminus(3),X0),$product(X1,X3)),$uminus(X1)),$product(2,X3)) & 0 = $sum($sum($product($product(3,X3),X3),$uminus(X1)),$product(3,X3)) & (~0 = $sum($sum($sum($uminus(6),X2),6),$uminus($product(6,$sum(X3,1)))) | ~0 = $sum($sum($sum($sum($difference(4,$product(18,$sum(X0,X1))),$uminus($product($product(9,$sum(X0,X1)),$sum(X3,1)))),$uminus($product(5,$sum(X1,X2)))),$product(9,$sum(X3,1))),$product($sum(X1,X2),$sum(X1,X2))) | ~0 = $sum($sum($sum($product($uminus(3),$sum(X0,X1)),$product($sum(X1,X2),$sum(X3,1))),$uminus($sum(X1,X2))),$product(2,$sum(X3,1))) | ~0 = $sum($sum($product($product(3,$sum(X3,1)),$sum(X3,1)),$uminus($sum(X1,X2))),$product(3,$sum(X3,1))) | ~0 = $product($sum($sum($product($product(3,$sum(X3,1)),$sum(X3,1)),$uminus($sum(X1,X2))),$product(3,$sum(X3,1))),$sum($product($product($product($product(10,$sum(X0,X1)),$sum(X1,X2)),$sum(X2,6)),$sum(X3,1)),$product($product(4,$sum(X0,X1)),$sum(X2,6)))))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int,X2 : $int,X3 : $int] : (0 = $sum($sum($uminus(6),X2),$uminus($product(6,X1))) & 0 = $sum($sum($sum($sum($difference(4,$product(18,X3)),$uminus($product($product(9,X3),X1))),$uminus($product(5,X0))),$product(9,X1)),$product(X0,X0)) & 0 = $sum($sum($sum($product($uminus(3),X3),$product(X0,X1)),$uminus(X0)),$product(2,X1)) & 0 = $sum($sum($product($product(3,X1),X1),$uminus(X0)),$product(3,X1)) & (~0 = $sum($sum($sum($uminus(6),X2),6),$uminus($product(6,$sum(X1,1)))) | ~0 = $sum($sum($sum($sum($difference(4,$product(18,$sum(X3,X0))),$uminus($product($product(9,$sum(X3,X0)),$sum(X1,1)))),$uminus($product(5,$sum(X0,X2)))),$product(9,$sum(X1,1))),$product($sum(X0,X2),$sum(X0,X2))) | ~0 = $sum($sum($sum($product($uminus(3),$sum(X3,X0)),$product($sum(X0,X2),$sum(X1,1))),$uminus($sum(X0,X2))),$product(2,$sum(X1,1))) | ~0 = $sum($sum($product($product(3,$sum(X1,1)),$sum(X1,1)),$uminus($sum(X0,X2))),$product(3,$sum(X1,1))) | ~0 = $product($sum($sum($product($product(3,$sum(X1,1)),$sum(X1,1)),$uminus($sum(X0,X2))),$product(3,$sum(X1,1))),$sum($product($product($product($product(10,$sum(X3,X0)),$sum(X0,X2)),$sum(X2,6)),$sum(X1,1)),$product($product(4,$sum(X3,X0)),$sum(X2,6)))))) [rectify 21]
23. ? [X0 : $int,X1 : $int,X2 : $int,X3 : $int] : (0 = $sum($sum($uminus(6),X2),$uminus($product(6,X1))) & 0 = $sum($sum($sum($sum($difference(4,$product(18,X3)),$uminus($product($product(9,X3),X1))),$uminus($product(5,X0))),$product(9,X1)),$product(X0,X0)) & 0 = $sum($sum($sum($product($uminus(3),X3),$product(X0,X1)),$uminus(X0)),$product(2,X1)) & 0 = $sum($sum($product($product(3,X1),X1),$uminus(X0)),$product(3,X1)) & (0 != $sum($sum($sum($uminus(6),X2),6),$uminus($product(6,$sum(X1,1)))) | 0 != $sum($sum($sum($sum($difference(4,$product(18,$sum(X3,X0))),$uminus($product($product(9,$sum(X3,X0)),$sum(X1,1)))),$uminus($product(5,$sum(X0,X2)))),$product(9,$sum(X1,1))),$product($sum(X0,X2),$sum(X0,X2))) | 0 != $sum($sum($sum($product($uminus(3),$sum(X3,X0)),$product($sum(X0,X2),$sum(X1,1))),$uminus($sum(X0,X2))),$product(2,$sum(X1,1))) | 0 != $sum($sum($product($product(3,$sum(X1,1)),$sum(X1,1)),$uminus($sum(X0,X2))),$product(3,$sum(X1,1))) | 0 != $product($sum($sum($product($product(3,$sum(X1,1)),$sum(X1,1)),$uminus($sum(X0,X2))),$product(3,$sum(X1,1))),$sum($product($product($product($product(10,$sum(X3,X0)),$sum(X0,X2)),$sum(X2,6)),$sum(X1,1)),$product($product(4,$sum(X3,X0)),$sum(X2,6)))))) [flattening 22]
25. 0 = $sum($sum($product($product(3,sK1),sK1),$uminus(sK0)),$product(3,sK1)) [cnf transformation 23]
26. 0 = $sum($sum($sum($product($uminus(3),sK3),$product(sK0,sK1)),$uminus(sK0)),$product(2,sK1)) [cnf transformation 23]
27. 0 = $sum($sum($sum($sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))),$uminus($product(5,sK0))),$product(9,sK1)),$product(sK0,sK0)) [cnf transformation 23]
28. 0 = $sum($sum($uminus(6),sK2),$uminus($product(6,sK1))) [cnf transformation 23]
31. 0 = $sum($sum($sum($product(-3,sK3),$product(sK0,sK1)),$uminus(sK0)),$product(2,sK1)) [evaluation 26]
32. 0 = $sum($sum(-6,sK2),$uminus($product(6,sK1))) [evaluation 28]
409. 1 <=> 0 = $sum($sum(-6,sK2),$uminus($product(6,sK1))) [avatar definition]
412. 1 [avatar split clause 32,409]
848. 0 = $sum($sum($uminus(sK0),$product($product(3,sK1),sK1)),$product(3,sK1)) [forward demodulation 25,3]
849. 0 = $sum($sum($uminus(sK0),$product(sK1,$product(3,sK1))),$product(3,sK1)) [forward demodulation 848,14]
899. 2 <=> 0 = $sum($sum($uminus(sK0),$product(sK1,$product(3,sK1))),$product(3,sK1)) [avatar definition]
902. 2 [avatar split clause 849,899]
1010. 0 = $sum($sum($uminus(sK0),$sum($product(-3,sK3),$product(sK0,sK1))),$product(2,sK1)) [forward demodulation 31,3]
1059. 3 <=> 0 = $sum($sum($uminus(sK0),$sum($product(-3,sK3),$product(sK0,sK1))),$product(2,sK1)) [avatar definition]
1062. 3 [avatar split clause 1010,1059]
1191. 0 = $sum($sum($product(9,sK1),$sum($sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))),$uminus($product(5,sK0)))),$product(sK0,sK0)) [forward demodulation 27,3]
1192. 0 = $sum($sum($product(9,sK1),$sum($uminus($product(5,sK0)),$sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))))),$product(sK0,sK0)) [forward demodulation 1191,3]
1193. 0 = $sum($sum($product(9,sK1),$sum($uminus($product(5,sK0)),$sum($difference(4,$product(18,sK3)),$uminus($product(sK1,$product(9,sK3)))))),$product(sK0,sK0)) [forward demodulation 1192,14]
1252. 4 <=> 0 = $sum($sum($product(9,sK1),$sum($uminus($product(5,sK0)),$sum($difference(4,$product(18,sK3)),$uminus($product(sK1,$product(9,sK3)))))),$product(sK0,sK0)) [avatar definition]
1255. 4 [avatar split clause 1193,1252]
1256. $false [avatar sat refutation 412,902,1062,1255]
% SZS output end Proof for cubes_inv4_len2_2
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Refutation

% Memory used [KB]: 8059
% Time elapsed: 0.509 s
% ------------------------------
% ------------------------------
% Success in time 1.017 s
