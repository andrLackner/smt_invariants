% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on nia_freire2_simple_v5_s
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for nia_freire2_simple_v5_s
% SZS output start Proof for nia_freire2_simple_v5_s
1. ? [X0 : $int,X2 : $int,X1 : $int] : (0 = $sum($difference($difference($product($product(3,X2),X2),$product($product(3,r00),r00)),X1),s00) & ~0 = $sum($difference($difference($product($product(3,$sum(X2,1)),$sum(X2,1)),$product($product(3,r00),r00)),$sum($sum(X1,$product(6,X2)),3)),s00)) [input]
2. ? [X0,X2 : $int,X1 : $int] : (0 = $sum($sum($difference($product($product(3,X2),X2),$product($product(3,r00),r00)),$uminus(X1)),s00) & ~0 = $sum($sum($difference($product($product(3,$sum(X2,1)),$sum(X2,1)),$product($product(3,r00),r00)),$uminus($sum($sum(X1,$product(6,X2)),3))),s00)) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 141]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 141]
21. ? [X0,X2 : $int,X1 : $int] : (0 = $sum($sum($sum($product($product(3,X2),X2),$uminus($product($product(3,r00),r00))),$uminus(X1)),s00) & ~0 = $sum($sum($sum($product($product(3,$sum(X2,1)),$sum(X2,1)),$uminus($product($product(3,r00),r00))),$uminus($sum($sum(X1,$product(6,X2)),3))),s00)) [theory normalization 2]
22. ? [X1 : $int,X2 : $int] : (0 = $sum($sum($sum($product($product(3,X1),X1),$uminus($product($product(3,r00),r00))),$uminus(X2)),s00) & ~0 = $sum($sum($sum($product($product(3,$sum(X1,1)),$sum(X1,1)),$uminus($product($product(3,r00),r00))),$uminus($sum($sum(X2,$product(6,X1)),3))),s00)) [rectify 21]
23. ? [X1 : $int,X2 : $int] : (0 = $sum($sum($sum($product($product(3,X1),X1),$uminus($product($product(3,r00),r00))),$uminus(X2)),s00) & 0 != $sum($sum($sum($product($product(3,$sum(X1,1)),$sum(X1,1)),$uminus($product($product(3,r00),r00))),$uminus($sum($sum(X2,$product(6,X1)),3))),s00)) [flattening 22]
24. 0 != $sum($sum($sum($product($product(3,$sum(sK0,1)),$sum(sK0,1)),$uminus($product($product(3,r00),r00))),$uminus($sum($sum(sK1,$product(6,sK0)),3))),s00) [cnf transformation 23]
25. 0 = $sum($sum($sum($product($product(3,sK0),sK0),$uminus($product($product(3,r00),r00))),$uminus(sK1)),s00) [cnf transformation 23]
728. 0 = $sum($sum($uminus(sK1),$sum($product($product(3,sK0),sK0),$uminus($product($product(3,r00),r00)))),s00) [forward demodulation 25,3]
729. 0 = $sum($sum($uminus(sK1),$sum($product($product(3,sK0),sK0),$uminus($product(r00,$product(3,r00))))),s00) [forward demodulation 728,14]
730. 0 = $sum($sum($uminus(sK1),$sum($product(sK0,$product(3,sK0)),$uminus($product(r00,$product(3,r00))))),s00) [forward demodulation 729,14]
796. 1 <=> 0 = $sum($sum($uminus(sK1),$sum($product(sK0,$product(3,sK0)),$uminus($product(r00,$product(3,r00))))),s00) [avatar definition]
799. 1 [avatar split clause 730,796]
898. 0 != $sum($sum($uminus($sum($sum(sK1,$product(6,sK0)),3)),$sum($product($product(3,$sum(sK0,1)),$sum(sK0,1)),$uminus($product($product(3,r00),r00)))),s00) [forward demodulation 24,3]
899. 0 != $sum($sum($uminus($sum($sum(sK1,$product(6,sK0)),3)),$sum($uminus($product($product(3,r00),r00)),$product($product(3,$sum(sK0,1)),$sum(sK0,1)))),s00) [forward demodulation 898,3]
900. 0 != $sum($sum($uminus($sum($sum(sK1,$product(6,sK0)),3)),$sum($uminus($product($product(3,r00),r00)),$product($sum(sK0,1),$product(3,$sum(sK0,1))))),s00) [forward demodulation 899,14]
901. 0 != $sum($sum($uminus($sum($sum(sK1,$product(6,sK0)),3)),$sum($uminus($product($product(3,r00),r00)),$product($sum(1,sK0),$product(3,$sum(1,sK0))))),s00) [forward demodulation 900,3]
902. 0 != $sum($sum($uminus($sum($sum(sK1,$product(6,sK0)),3)),$sum($uminus($product(r00,$product(3,r00))),$product($sum(1,sK0),$product(3,$sum(1,sK0))))),s00) [forward demodulation 901,14]
903. 0 != $sum($sum($uminus($sum(3,$sum(sK1,$product(6,sK0)))),$sum($uminus($product(r00,$product(3,r00))),$product($sum(1,sK0),$product(3,$sum(1,sK0))))),s00) [forward demodulation 902,3]
952. 2 <=> 0 = $sum($sum($uminus($sum(3,$sum(sK1,$product(6,sK0)))),$sum($uminus($product(r00,$product(3,r00))),$product($sum(1,sK0),$product(3,$sum(1,sK0))))),s00) [avatar definition]
955. ~2 [avatar split clause 903,952]
956. $false [avatar sat refutation 799,955]
% SZS output end Proof for nia_freire2_simple_v5_s
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Refutation

% Memory used [KB]: 7547
% Time elapsed: 0.040 s
% ------------------------------
% ------------------------------
% Success in time 0.045 s
